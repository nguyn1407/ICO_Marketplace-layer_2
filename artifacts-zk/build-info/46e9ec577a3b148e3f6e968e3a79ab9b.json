{"id":"46e9ec577a3b148e3f6e968e3a79ab9b","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/Item.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\ninterface IItem {\n  function mint(address to, uint hero_type) external returns(uint256);\n}\n\ncontract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{\n  using Counters for Counters.Counter;    \n  Counters.Counter private _tokenIdTracker;\n  string private _url;\n  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n  event Mint(address to, uint256 hero_type, uint256 token_id);\n\n  constructor() ERC721(\"Sticky Cat\", \"Cat\"){\n    _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n  }\n\n  function _baseURI() internal view override returns(string memory _newBaseURI){\n    return _url;\n  }\n\n  function mint(address to, uint256 hero_type) external override returns(uint256){\n    require(owner() == _msgSender() || hasRole(MINTER_ROLE, _msgSender()), \"Caller is not minter\");\n    _tokenIdTracker.increment();\n    uint256 token_id = _tokenIdTracker.current();\n    _mint(to, token_id);\n    emit Mint(to, hero_type, token_id);\n    return token_id;\n  }\n\n  function listTokenIds(address owner) external view returns(uint256[] memory tokenIds){\n    uint256 balance = balanceOf(owner);\n    uint256[] memory ids = new uint256[](balance);\n\n    for(uint i = 0; i<balance; i++){\n      ids[i] = tokenOfOwnerByIndex(owner, i);\n    }\n\n    return ids;\n  }\n\n  function setBaseUrl(string memory _newUrl) public onlyOwner{\n    _url = _newUrl;\n  }\n\n  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Enumerable, AccessControlEnumerable) returns (bool){\n    return super.supportsInterface(interfaceId);\n  }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.19","long_version":"0.8.19+commit.7dd6d404.Darwin.appleclang","zk_version":"1.3.16","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[319],"Context":[2662],"ERC165":[2963],"IAccessControl":[517],"IERC165":[2975],"Strings":[2939]},"id":320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":518,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":2663,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":2940,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":2964,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1841:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1850:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":517,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1866:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2963,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":319,"linearizedBaseContracts":[319,2963,2975,517,2662],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":319,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":319,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["1996:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":319,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,135],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2962],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$517_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$517_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$517","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2750:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$319_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2771:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":319,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[484],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3017:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":319,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,135],"referencedDeclaration":135,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":319,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"3791:419:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":133,"nodeType":"IfStatement","src":"3801:403:0","trueBody":{"id":132,"nodeType":"Block","src":"3830:374:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"arguments":[{"id":115,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4017:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":113,"name":"uint160","nodeType":"ElementaryTypeName","src":"4009:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"hexValue":"3230","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4027:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2939_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3997:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4056:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4129:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4121:7:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4136:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":120,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"4101:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2939_$","typeString":"type(library Strings)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4109:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"4101:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4101:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3900:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:265:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:311:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:349:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"3844:349:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":135,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":135,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":135,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":319,"src":"3718:492:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[492],"body":{"id":149,"nodeType":"Block","src":"4474:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":144,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4491:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":146,"indexExpression":{"id":145,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4498:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4491:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4504:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4491:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":143,"id":148,"nodeType":"Return","src":"4484:29:0"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"4216:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":150,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4400:12:0","nodeType":"FunctionDefinition","overrides":{"id":140,"nodeType":"OverrideSpecifier","overrides":[],"src":"4447:8:0"},"parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"role","nameLocation":"4421:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4413:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4412:14:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"4465:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4464:9:0"},"scope":319,"src":"4391:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[500],"body":{"id":169,"nodeType":"Block","src":"4873:42:0","statements":[{"expression":{"arguments":[{"id":165,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4894:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":166,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4900:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":164,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4883:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4883:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"4883:25:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4526:239:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":170,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":160,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4866:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":159,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4853:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4853:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":162,"kind":"modifierInvocation","modifierName":{"id":158,"name":"onlyRole","nameLocations":["4844:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4844:8:0"},"nodeType":"ModifierInvocation","src":"4844:28:0"}],"name":"grantRole","nameLocation":"4779:9:0","nodeType":"FunctionDefinition","overrides":{"id":157,"nodeType":"OverrideSpecifier","overrides":[],"src":"4835:8:0"},"parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4797:4:0","nodeType":"VariableDeclaration","scope":170,"src":"4789:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"account","nameLocation":"4811:7:0","nodeType":"VariableDeclaration","scope":170,"src":"4803:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"4803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4788:31:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"4873:0:0"},"scope":319,"src":"4770:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[508],"body":{"id":189,"nodeType":"Block","src":"5253:43:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5275:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"5281:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5263:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5263:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"5263:26:0"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"4921:223:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5246:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"5233:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5233:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5224:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5224:8:0"},"nodeType":"ModifierInvocation","src":"5224:28:0"}],"name":"revokeRole","nameLocation":"5158:10:0","nodeType":"FunctionDefinition","overrides":{"id":177,"nodeType":"OverrideSpecifier","overrides":[],"src":"5215:8:0"},"parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"role","nameLocation":"5177:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5169:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"account","nameLocation":"5191:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5183:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5168:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5253:0:0"},"scope":319,"src":"5149:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[516],"body":{"id":212,"nodeType":"Block","src":"5864:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5882:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"5893:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5882:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5907:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5874:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5874:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"5874:83:0"},{"expression":{"arguments":[{"id":208,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5980:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":209,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5986:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":207,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5968:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"5968:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5302:480:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":213,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5796:12:0","nodeType":"FunctionDefinition","overrides":{"id":197,"nodeType":"OverrideSpecifier","overrides":[],"src":"5855:8:0"},"parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5817:4:0","nodeType":"VariableDeclaration","scope":213,"src":"5809:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5809:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5831:7:0","nodeType":"VariableDeclaration","scope":213,"src":"5823:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5823:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5808:31:0"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"5864:0:0"},"scope":319,"src":"5787:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":226,"nodeType":"Block","src":"6708:42:0","statements":[{"expression":{"arguments":[{"id":222,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6729:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":223,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"6735:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":221,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6718:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6718:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"ExpressionStatement","src":"6718:25:0"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"6007:628:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6649:10:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"role","nameLocation":"6668:4:0","nodeType":"VariableDeclaration","scope":227,"src":"6660:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6660:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"account","nameLocation":"6682:7:0","nodeType":"VariableDeclaration","scope":227,"src":"6674:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"6674:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6659:31:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"6708:0:0"},"scope":319,"src":"6640:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"6948:174:0","statements":[{"assignments":[236],"declarations":[{"constant":false,"id":236,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6966:17:0","nodeType":"VariableDeclaration","scope":254,"src":"6958:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6958:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":240,"initialValue":{"arguments":[{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"6999:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":237,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"6986:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6986:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6958:46:0"},{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":241,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7014:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":243,"indexExpression":{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7021:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7014:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7027:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7014:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":245,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7039:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7014:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":247,"nodeType":"ExpressionStatement","src":"7014:34:0"},{"eventCall":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7080:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7086:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":251,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7105:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7063:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7063:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"EmitStatement","src":"7058:57:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"6756:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6884:13:0","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"role","nameLocation":"6906:4:0","nodeType":"VariableDeclaration","scope":255,"src":"6898:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6898:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"adminRole","nameLocation":"6920:9:0","nodeType":"VariableDeclaration","scope":255,"src":"6912:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6897:33:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"6948:0:0"},"scope":319,"src":"6875:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":286,"nodeType":"Block","src":"7312:165:0","statements":[{"condition":{"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7326:23:0","subExpression":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7335:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7341:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":263,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7327:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7327:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"nodeType":"IfStatement","src":"7322:149:0","trueBody":{"id":284,"nodeType":"Block","src":"7351:120:0","statements":[{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":268,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7365:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":270,"indexExpression":{"id":269,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7372:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7365:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7378:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7365:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":273,"indexExpression":{"id":272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7386:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7365:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7397:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7365:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":276,"nodeType":"ExpressionStatement","src":"7365:36:0"},{"eventCall":{"arguments":[{"id":278,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7432:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":279,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7438:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":280,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7447:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7447:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":277,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7420:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"EmitStatement","src":"7415:45:0"}]}}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"7128:111:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction."},"id":287,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7253:10:0","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"role","nameLocation":"7272:4:0","nodeType":"VariableDeclaration","scope":287,"src":"7264:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"account","nameLocation":"7286:7:0","nodeType":"VariableDeclaration","scope":287,"src":"7278:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"7278:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7263:31:0"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"7312:0:0"},"scope":319,"src":"7244:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"7671:165:0","statements":[{"condition":{"arguments":[{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7693:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"7699:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7685:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7685:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":316,"nodeType":"IfStatement","src":"7681:149:0","trueBody":{"id":315,"nodeType":"Block","src":"7709:121:0","statements":[{"expression":{"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":299,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7723:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":301,"indexExpression":{"id":300,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7723:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7736:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7723:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":304,"indexExpression":{"id":303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"7744:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7723:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7755:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7723:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":307,"nodeType":"ExpressionStatement","src":"7723:37:0"},{"eventCall":{"arguments":[{"id":309,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7791:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":310,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"7797:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7806:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7806:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":308,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7779:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7779:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"EmitStatement","src":"7774:45:0"}]}}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"7483:114:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction."},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7611:11:0","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"role","nameLocation":"7631:4:0","nodeType":"VariableDeclaration","scope":318,"src":"7623:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7623:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"account","nameLocation":"7645:7:0","nodeType":"VariableDeclaration","scope":318,"src":"7637:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7637:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7622:31:0"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"7671:0:0"},"scope":319,"src":"7602:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":320,"src":"1806:6032:0","usedErrors":[]}],"src":"108:7731:0"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Context":[2662],"ERC165":[2963],"EnumerableSet":[3574],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2975],"Strings":[2939]},"id":445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":445,"sourceUnit":543,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":445,"sourceUnit":320,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":445,"sourceUnit":3575,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":326,"name":"IAccessControlEnumerable","nameLocations":["400:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":542,"src":"400:24:1"},"id":327,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":328,"name":"AccessControl","nameLocations":["426:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":319,"src":"426:13:1"},"id":329,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":444,"linearizedBaseContracts":[444,319,2963,2975,542,517,2662],"name":"AccessControlEnumerable","nameLocation":"373:23:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":333,"libraryName":{"id":330,"name":"EnumerableSet","nameLocations":["452:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":3574,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nameLocations":["470:13:1","484:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"470:24:1"},"referencedDeclaration":3287,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":338,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:1","nodeType":"VariableDeclaration","scope":444,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3287_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":337,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3287_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"nodeType":"UserDefinedTypeName","pathNode":{"id":335,"name":"EnumerableSet.AddressSet","nameLocations":["520:13:1","534:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"520:24:1"},"referencedDeclaration":3287,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":359,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":349,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$542_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$542_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$542","typeString":"type(contract IAccessControlEnumerable)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"788:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":355,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":353,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$444_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"809:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":346,"id":358,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":360,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:1","nodeType":"FunctionDefinition","overrides":{"id":343,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:1","nodeType":"VariableDeclaration","scope":360,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":340,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":344,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":444,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[533],"body":{"id":378,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":375,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":371,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3287_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":373,"indexExpression":{"id":372,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1566:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3287_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3287_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":370,"id":377,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:1","nodeType":"FunctionDefinition","overrides":{"id":367,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"role","nameLocation":"1462:4:1","nodeType":"VariableDeclaration","scope":379,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"index","nameLocation":"1476:5:1","nodeType":"VariableDeclaration","scope":379,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":444,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[541],"body":{"id":394,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":388,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3287_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":390,"indexExpression":{"id":389,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1875:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3287_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3287_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":387,"id":393,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:1","nodeType":"FunctionDefinition","overrides":{"id":384,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"1786:4:1","nodeType":"VariableDeclaration","scope":395,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":444,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[287],"body":{"id":418,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":407,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":408,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":404,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$444_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2071:10:1","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":287,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":415,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":411,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3287_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":413,"indexExpression":{"id":412,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2125:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3314,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3287_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3287_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":417,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:1","nodeType":"FunctionDefinition","overrides":{"id":402,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"role","nameLocation":"2006:4:1","nodeType":"VariableDeclaration","scope":419,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"2020:7:1","nodeType":"VariableDeclaration","scope":419,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":444,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[318],"body":{"id":442,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":431,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":432,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":428,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$444_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2327:11:1","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":318,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":439,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":435,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3287_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":437,"indexExpression":{"id":436,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2382:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3341,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3287_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3287_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:1","nodeType":"FunctionDefinition","overrides":{"id":426,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"role","nameLocation":"2262:4:1","nodeType":"VariableDeclaration","scope":443,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"account","nameLocation":"2276:7:1","nodeType":"VariableDeclaration","scope":443,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":444,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":445,"src":"355:2051:1","usedErrors":[]}],"src":"118:2289:1"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[517]},"id":518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":446,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":517,"linearizedBaseContracts":[517],"name":"IAccessControl","nameLocation":"219:14:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":456,"name":"RoleAdminChanged","nameLocation":"543:16:2","nodeType":"EventDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:2","nodeType":"VariableDeclaration","scope":456,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":452,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:2","nodeType":"VariableDeclaration","scope":456,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":454,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:2","nodeType":"VariableDeclaration","scope":456,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":465,"name":"RoleGranted","nameLocation":"876:11:2","nodeType":"EventDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:2","nodeType":"VariableDeclaration","scope":465,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":461,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:2","nodeType":"VariableDeclaration","scope":465,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:2","nodeType":"VariableDeclaration","scope":465,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":474,"name":"RoleRevoked","nameLocation":"1251:11:2","nodeType":"EventDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:2","nodeType":"VariableDeclaration","scope":474,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:2","nodeType":"VariableDeclaration","scope":474,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:2","nodeType":"VariableDeclaration","scope":474,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":484,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"role","nameLocation":"1446:4:2","nodeType":"VariableDeclaration","scope":484,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"account","nameLocation":"1460:7:2","nodeType":"VariableDeclaration","scope":484,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":481,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":517,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":492,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:2","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"role","nameLocation":"1723:4:2","nodeType":"VariableDeclaration","scope":492,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":517,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:2","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"role","nameLocation":"2038:4:2","nodeType":"VariableDeclaration","scope":500,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"account","nameLocation":"2052:7:2","nodeType":"VariableDeclaration","scope":500,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":517,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"role","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":508,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"account","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":508,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":517,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":516,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:2","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"role","nameLocation":"2885:4:2","nodeType":"VariableDeclaration","scope":516,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"account","nameLocation":"2899:7:2","nodeType":"VariableDeclaration","scope":516,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":517,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":518,"src":"209:2710:2","usedErrors":[]}],"src":"94:2826:2"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[517],"IAccessControlEnumerable":[542]},"id":543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":519,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":543,"sourceUnit":518,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":522,"name":"IAccessControl","nameLocations":["299:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":517,"src":"299:14:3"},"id":523,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":542,"linearizedBaseContracts":[542,517],"name":"IAccessControlEnumerable","nameLocation":"271:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":533,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:3","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"role","nameLocation":"930:4:3","nodeType":"VariableDeclaration","scope":533,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"index","nameLocation":"944:5:3","nodeType":"VariableDeclaration","scope":533,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":533,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":542,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":541,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:3","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"role","nameLocation":"1187:4:3","nodeType":"VariableDeclaration","scope":541,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":542,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":543,"src":"261:966:3","usedErrors":[]}],"src":"104:1124:3"}},"@openzeppelin/contracts/access/Ownable.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2662],"Ownable":[647]},"id":648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":544,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":648,"sourceUnit":2663,"src":"112:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":547,"name":"Context","nameLocations":["668:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"668:7:4"},"id":548,"nodeType":"InheritanceSpecifier","src":"668:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"144:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":647,"linearizedBaseContracts":[647,2662],"name":"Ownable","nameLocation":"657:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":550,"mutability":"mutable","name":"_owner","nameLocation":"698:6:4","nodeType":"VariableDeclaration","scope":647,"src":"682:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":556,"name":"OwnershipTransferred","nameLocation":"717:20:4","nodeType":"EventDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:4","nodeType":"VariableDeclaration","scope":556,"src":"738:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:4","nodeType":"VariableDeclaration","scope":556,"src":"769:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:4"},"src":"711:84:4"},{"body":{"id":565,"nodeType":"Block","src":"911:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"940:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"940:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"921:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"921:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"921:32:4"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"801:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":566,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"908:2:4"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"911:0:4"},"scope":647,"src":"897:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":574,"nodeType":"Block","src":"1091:30:4","statements":[{"expression":{"id":572,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1108:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":571,"id":573,"nodeType":"Return","src":"1101:13:4"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"966:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":575,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:4","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"1050:2:4"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":575,"src":"1082:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:4"},"scope":647,"src":"1036:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":588,"nodeType":"Block","src":"1230:96:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1248:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1248:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":581,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1259:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1259:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"1240:68:4"},{"id":587,"nodeType":"PlaceholderStatement","src":"1318:1:4"}]},"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"1127:77:4","text":" @dev Throws if called by any account other than the owner."},"id":589,"name":"onlyOwner","nameLocation":"1218:9:4","nodeType":"ModifierDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"1227:2:4"},"src":"1209:117:4","virtual":false,"visibility":"internal"},{"body":{"id":602,"nodeType":"Block","src":"1722:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:4","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"1732:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"1732:30:4"}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"1332:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":603,"implemented":true,"kind":"function","modifiers":[{"id":593,"kind":"modifierInvocation","modifierName":{"id":592,"name":"onlyOwner","nameLocations":["1712:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"1712:9:4"},"nodeType":"ModifierInvocation","src":"1712:9:4"}],"name":"renounceOwnership","nameLocation":"1677:17:4","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"1694:2:4"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"1722:0:4"},"scope":647,"src":"1668:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":625,"nodeType":"Block","src":"1988:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":612,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2006:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:4","typeDescriptions":{}}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1998:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"1998:73:4"},{"expression":{"arguments":[{"id":622,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2100:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":621,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"2081:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"ExpressionStatement","src":"2081:28:4"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1775:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":626,"implemented":true,"kind":"function","modifiers":[{"id":609,"kind":"modifierInvocation","modifierName":{"id":608,"name":"onlyOwner","nameLocations":["1978:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"1978:9:4"},"nodeType":"ModifierInvocation","src":"1978:9:4"}],"name":"transferOwnership","nameLocation":"1927:17:4","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:4","nodeType":"VariableDeclaration","scope":626,"src":"1945:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:4"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"1988:0:4"},"scope":647,"src":"1918:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":645,"nodeType":"Block","src":"2333:124:4","statements":[{"assignments":[633],"declarations":[{"constant":false,"id":633,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:4","nodeType":"VariableDeclaration","scope":645,"src":"2343:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":635,"initialValue":{"id":634,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2362:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:4"},{"expression":{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":636,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2378:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":637,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2387:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":639,"nodeType":"ExpressionStatement","src":"2378:17:4"},{"eventCall":{"arguments":[{"id":641,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2431:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2441:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":640,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2410:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"EmitStatement","src":"2405:45:4"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"2122:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:4","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:4","nodeType":"VariableDeclaration","scope":646,"src":"2298:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:4"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"2333:0:4"},"scope":647,"src":"2270:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":648,"src":"639:1820:4","usedErrors":[]}],"src":"87:2373:4"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[725]},"id":726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":649,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":725,"linearizedBaseContracts":[725],"name":"IERC20","nameLocation":"212:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"225:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":659,"name":"Transfer","nameLocation":"394:8:5","nodeType":"EventDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:5","nodeType":"VariableDeclaration","scope":659,"src":"403:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:5","nodeType":"VariableDeclaration","scope":659,"src":"425:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:5","nodeType":"VariableDeclaration","scope":659,"src":"445:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:5"},"src":"388:72:5"},{"anonymous":false,"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"466:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":668,"name":"Approval","nameLocation":"625:8:5","nodeType":"EventDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:5","nodeType":"VariableDeclaration","scope":668,"src":"634:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:5","nodeType":"VariableDeclaration","scope":668,"src":"657:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":666,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:5","nodeType":"VariableDeclaration","scope":668,"src":"682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:5"},"src":"619:78:5"},{"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"703:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":674,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":674,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":725,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"835:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":682,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":725,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"986:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":692,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:5","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"to","nameLocation":"1219:2:5","nodeType":"VariableDeclaration","scope":692,"src":"1211:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"amount","nameLocation":"1231:6:5","nodeType":"VariableDeclaration","scope":692,"src":"1223:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:5"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":692,"src":"1257:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:5"},"scope":725,"src":"1193:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"1269:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":702,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"owner","nameLocation":"1565:5:5","nodeType":"VariableDeclaration","scope":702,"src":"1557:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"spender","nameLocation":"1580:7:5","nodeType":"VariableDeclaration","scope":702,"src":"1572:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:5"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"1612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:5"},"scope":725,"src":"1538:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"1627:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":712,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:5","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"spender","nameLocation":"2299:7:5","nodeType":"VariableDeclaration","scope":712,"src":"2291:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"amount","nameLocation":"2316:6:5","nodeType":"VariableDeclaration","scope":712,"src":"2308:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:5"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"2342:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:5"},"scope":725,"src":"2274:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"2354:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":724,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:5","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"from","nameLocation":"2685:4:5","nodeType":"VariableDeclaration","scope":724,"src":"2677:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"to","nameLocation":"2707:2:5","nodeType":"VariableDeclaration","scope":724,"src":"2699:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"amount","nameLocation":"2727:6:5","nodeType":"VariableDeclaration","scope":724,"src":"2719:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:5"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"2758:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":721,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:5"},"scope":725,"src":"2646:118:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":726,"src":"202:2564:5","usedErrors":[]}],"src":"106:2661:5"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2640],"IERC20":[725],"SafeERC20":[949]},"id":950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":727,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":950,"sourceUnit":726,"src":"125:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":950,"sourceUnit":2641,"src":"149:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"187:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":949,"linearizedBaseContracts":[949],"name":"SafeERC20","nameLocation":"653:9:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":733,"libraryName":{"id":731,"name":"Address","nameLocations":["675:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"675:7:6"},"nodeType":"UsingForDirective","src":"669:26:6","typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":755,"nodeType":"Block","src":"803:103:6","statements":[{"expression":{"arguments":[{"id":744,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"833:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":747,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"863:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"869:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":692,"src":"863:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"878:8:6","memberName":"selector","nodeType":"MemberAccess","src":"863:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"888:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"892:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":745,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"840:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"844:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"840:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"840:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":743,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"813:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$725_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"813:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"ExpressionStatement","src":"813:86:6"}]},"id":756,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"710:12:6","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"token","nameLocation":"739:5:6","nodeType":"VariableDeclaration","scope":756,"src":"732:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},"typeName":{"id":735,"nodeType":"UserDefinedTypeName","pathNode":{"id":734,"name":"IERC20","nameLocations":["732:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"732:6:6"},"referencedDeclaration":725,"src":"732:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"to","nameLocation":"762:2:6","nodeType":"VariableDeclaration","scope":756,"src":"754:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"value","nameLocation":"782:5:6","nodeType":"VariableDeclaration","scope":756,"src":"774:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:71:6"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"803:0:6"},"scope":949,"src":"701:205:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"1040:113:6","statements":[{"expression":{"arguments":[{"id":769,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1070:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":772,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1100:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1106:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":724,"src":"1100:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1119:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1100:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":775,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1129:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"1135:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"1139:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":770,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1077:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1081:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1077:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1077:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":768,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1050:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$725_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"1050:96:6"}]},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"921:16:6","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"token","nameLocation":"954:5:6","nodeType":"VariableDeclaration","scope":782,"src":"947:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},"typeName":{"id":758,"nodeType":"UserDefinedTypeName","pathNode":{"id":757,"name":"IERC20","nameLocations":["947:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"947:6:6"},"referencedDeclaration":725,"src":"947:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"from","nameLocation":"977:4:6","nodeType":"VariableDeclaration","scope":782,"src":"969:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"to","nameLocation":"999:2:6","nodeType":"VariableDeclaration","scope":782,"src":"991:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"value","nameLocation":"1019:5:6","nodeType":"VariableDeclaration","scope":782,"src":"1011:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"937:93:6"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"1040:0:6"},"scope":949,"src":"912:241:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"1519:497:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"1768:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1768:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1767:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":802,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1808:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$949","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$949","typeString":"library SafeERC20"}],"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1800:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"1800:7:6","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1800:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1815:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":798,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1784:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":702,"src":"1784:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1827:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1784:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1783:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1767:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1843:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1746:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1746:163:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"1746:163:6"},{"expression":{"arguments":[{"id":814,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1939:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":817,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1969:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1975:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":712,"src":"1969:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1983:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1969:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":820,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1993:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"2002:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":815,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1946:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1950:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1946:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1946:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":813,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1919:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$725_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"1919:90:6"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"1159:249:6","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1422:11:6","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"token","nameLocation":"1450:5:6","nodeType":"VariableDeclaration","scope":826,"src":"1443:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},"typeName":{"id":785,"nodeType":"UserDefinedTypeName","pathNode":{"id":784,"name":"IERC20","nameLocations":["1443:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"1443:6:6"},"referencedDeclaration":725,"src":"1443:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"spender","nameLocation":"1473:7:6","nodeType":"VariableDeclaration","scope":826,"src":"1465:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"value","nameLocation":"1498:5:6","nodeType":"VariableDeclaration","scope":826,"src":"1490:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1433:76:6"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"1519:0:6"},"scope":949,"src":"1413:603:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"2138:194:6","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"newAllowance","nameLocation":"2156:12:6","nodeType":"VariableDeclaration","scope":861,"src":"2148:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":848,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":842,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2195:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$949","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$949","typeString":"library SafeERC20"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2187:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"2187:7:6","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2187:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2202:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":838,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2171:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2177:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":702,"src":"2171:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2213:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:47:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:70:6"},{"expression":{"arguments":[{"id":850,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2248:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":853,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2278:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2284:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":712,"src":"2278:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2278:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":856,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2302:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":857,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2311:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":851,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2255:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2259:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2255:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":849,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2228:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$725_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"2228:97:6"}]},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2031:21:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"token","nameLocation":"2069:5:6","nodeType":"VariableDeclaration","scope":862,"src":"2062:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},"typeName":{"id":828,"nodeType":"UserDefinedTypeName","pathNode":{"id":827,"name":"IERC20","nameLocations":["2062:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"2062:6:6"},"referencedDeclaration":725,"src":"2062:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"spender","nameLocation":"2092:7:6","nodeType":"VariableDeclaration","scope":862,"src":"2084:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"value","nameLocation":"2117:5:6","nodeType":"VariableDeclaration","scope":862,"src":"2109:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:76:6"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"2138:0:6"},"scope":949,"src":"2022:310:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":909,"nodeType":"Block","src":"2454:370:6","statements":[{"id":908,"nodeType":"UncheckedBlock","src":"2464:354:6","statements":[{"assignments":[873],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"oldAllowance","nameLocation":"2496:12:6","nodeType":"VariableDeclaration","scope":908,"src":"2488:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":882,"initialValue":{"arguments":[{"arguments":[{"id":878,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2535:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$949","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$949","typeString":"library SafeERC20"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2527:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:6","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2542:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":874,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2511:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":702,"src":"2511:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2488:62:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2572:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2588:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2572:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2595:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2564:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2564:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"ExpressionStatement","src":"2564:75:6"},{"assignments":[891],"declarations":[{"constant":false,"id":891,"mutability":"mutable","name":"newAllowance","nameLocation":"2661:12:6","nodeType":"VariableDeclaration","scope":908,"src":"2653:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":895,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2676:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2691:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2676:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2653:43:6"},{"expression":{"arguments":[{"id":897,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2730:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":900,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2760:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2766:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":712,"src":"2760:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2774:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2760:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":903,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2784:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2793:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":898,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2737:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2741:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2737:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":896,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2710:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$725_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2710:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"ExpressionStatement","src":"2710:97:6"}]}]},"id":910,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2347:21:6","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"token","nameLocation":"2385:5:6","nodeType":"VariableDeclaration","scope":910,"src":"2378:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},"typeName":{"id":864,"nodeType":"UserDefinedTypeName","pathNode":{"id":863,"name":"IERC20","nameLocations":["2378:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"2378:6:6"},"referencedDeclaration":725,"src":"2378:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"spender","nameLocation":"2408:7:6","nodeType":"VariableDeclaration","scope":910,"src":"2400:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2400:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"value","nameLocation":"2433:5:6","nodeType":"VariableDeclaration","scope":910,"src":"2425:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2368:76:6"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"2454:0:6"},"scope":949,"src":"2338:486:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":947,"nodeType":"Block","src":"3277:636:6","statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"returndata","nameLocation":"3639:10:6","nodeType":"VariableDeclaration","scope":947,"src":"3626:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":919,"name":"bytes","nodeType":"ElementaryTypeName","src":"3626:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":929,"initialValue":{"arguments":[{"id":926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3680:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3686:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":923,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3660:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:6","typeDescriptions":{}}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3667:12:6","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2434,"src":"3652:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3626:95:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":930,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3735:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3746:6:6","memberName":"length","nodeType":"MemberAccess","src":"3735:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3735:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"3731:176:6","trueBody":{"id":945,"nodeType":"Block","src":"3758:149:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":937,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3830:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3843:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":938,"name":"bool","nodeType":"ElementaryTypeName","src":"3843:4:6","typeDescriptions":{}}}],"id":940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3842:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":935,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3819:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3823:6:6","memberName":"decode","nodeType":"MemberAccess","src":"3819:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3851:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3811:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3811:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"3811:85:6"}]}}]},"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"2830:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3216:19:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"token","nameLocation":"3243:5:6","nodeType":"VariableDeclaration","scope":948,"src":"3236:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"},"typeName":{"id":913,"nodeType":"UserDefinedTypeName","pathNode":{"id":912,"name":"IERC20","nameLocations":["3236:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"3236:6:6"},"referencedDeclaration":725,"src":"3236:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$725","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"3263:4:6","nodeType":"VariableDeclaration","scope":948,"src":"3250:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"3250:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3235:33:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"3277:0:6"},"scope":949,"src":"3207:706:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":950,"src":"645:3270:6","usedErrors":[]}],"src":"100:3816:6"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2640],"Context":[2662],"ERC165":[2963],"ERC721":[1815],"IERC165":[2975],"IERC721":[1931],"IERC721Metadata":[2345],"IERC721Receiver":[1949],"Strings":[2939]},"id":1816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":951,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":1932,"src":"132:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":1950,"src":"156:31:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":2346,"src":"188:42:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":955,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":2641,"src":"231:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":2663,"src":"265:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":2940,"src":"299:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":2964,"src":"333:46:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":960,"name":"Context","nameLocations":["647:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"647:7:7"},"id":961,"nodeType":"InheritanceSpecifier","src":"647:7:7"},{"baseName":{"id":962,"name":"ERC165","nameLocations":["656:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2963,"src":"656:6:7"},"id":963,"nodeType":"InheritanceSpecifier","src":"656:6:7"},{"baseName":{"id":964,"name":"IERC721","nameLocations":["664:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1931,"src":"664:7:7"},"id":965,"nodeType":"InheritanceSpecifier","src":"664:7:7"},{"baseName":{"id":966,"name":"IERC721Metadata","nameLocations":["673:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"673:15:7"},"id":967,"nodeType":"InheritanceSpecifier","src":"673:15:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"381:246:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1815,"linearizedBaseContracts":[1815,2345,1931,2963,2975,2662],"name":"ERC721","nameLocation":"637:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":970,"libraryName":{"id":968,"name":"Address","nameLocations":["701:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"701:7:7"},"nodeType":"UsingForDirective","src":"695:26:7","typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":973,"libraryName":{"id":971,"name":"Strings","nameLocations":["732:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2939,"src":"732:7:7"},"nodeType":"UsingForDirective","src":"726:26:7","typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":975,"mutability":"mutable","name":"_name","nameLocation":"791:5:7","nodeType":"VariableDeclaration","scope":1815,"src":"776:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":974,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":977,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:7","nodeType":"VariableDeclaration","scope":1815,"src":"823:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":976,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":981,"mutability":"mutable","name":"_owners","nameLocation":"934:7:7","nodeType":"VariableDeclaration","scope":1815,"src":"898:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":980,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":985,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:7","nodeType":"VariableDeclaration","scope":1815,"src":"992:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":984,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":989,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:7","nodeType":"VariableDeclaration","scope":1815,"src":"1093:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":988,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":995,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:7","nodeType":"VariableDeclaration","scope":1815,"src":"1199:71:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":994,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":993,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":992,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1011,"nodeType":"Block","src":"1446:57:7","statements":[{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1003,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1456:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1004,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1464:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1006,"nodeType":"ExpressionStatement","src":"1456:13:7"},{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1007,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1008,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1489:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1010,"nodeType":"ExpressionStatement","src":"1479:17:7"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"1277:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1012,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"name_","nameLocation":"1416:5:7","nodeType":"VariableDeclaration","scope":1012,"src":"1402:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":997,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:7","nodeType":"VariableDeclaration","scope":1012,"src":"1423:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":999,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:7"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"1446:0:7"},"scope":1815,"src":"1390:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2962,2974],"body":{"id":1042,"nodeType":"Block","src":"1678:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1707:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1025,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1727:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1931_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1931_$","typeString":"type(contract IERC721)"}],"id":1024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1931","typeString":"type(contract IERC721)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1763:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1031,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"1783:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2345_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2345_$","typeString":"type(contract IERC721Metadata)"}],"id":1030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2345","typeString":"type(contract IERC721Metadata)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1038,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1851:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1036,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1815_$","typeString":"type(contract super ERC721)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"1827:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1022,"id":1041,"nodeType":"Return","src":"1688:175:7"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"1509:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1043,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:7","nodeType":"FunctionDefinition","overrides":{"id":1019,"nodeType":"OverrideSpecifier","overrides":[{"id":1017,"name":"ERC165","nameLocations":["1646:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2963,"src":"1646:6:7"},{"id":1018,"name":"IERC165","nameLocations":["1654:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"1654:7:7"}],"src":"1637:25:7"},"parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:7","nodeType":"VariableDeclaration","scope":1043,"src":"1597:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1014,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"1672:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:7"},"scope":1815,"src":"1570:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1856],"body":{"id":1066,"nodeType":"Block","src":"2010:124:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2028:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:7","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":1052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"2020:74:7"},{"expression":{"baseExpression":{"id":1062,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"2111:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1064,"indexExpression":{"id":1063,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2121:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2111:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1051,"id":1065,"nodeType":"Return","src":"2104:23:7"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"1876:48:7","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:7","nodeType":"FunctionDefinition","overrides":{"id":1048,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:7"},"parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"owner","nameLocation":"1956:5:7","nodeType":"VariableDeclaration","scope":1067,"src":"1948:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:7"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1067,"src":"2001:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:7"},"scope":1815,"src":"1929:205:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1864],"body":{"id":1094,"nodeType":"Block","src":"2272:154:7","statements":[{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"2290:5:7","nodeType":"VariableDeclaration","scope":1094,"src":"2282:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"2282:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1081,"initialValue":{"baseExpression":{"id":1078,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"2298:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1080,"indexExpression":{"id":1079,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2306:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2298:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2282:32:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2332:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:7","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""},"value":"ERC721: owner query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""}],"id":1082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1091,"nodeType":"ExpressionStatement","src":"2324:73:7"},{"expression":{"id":1092,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2414:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1075,"id":1093,"nodeType":"Return","src":"2407:12:7"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"2140:46:7","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2200:7:7","nodeType":"FunctionDefinition","overrides":{"id":1072,"nodeType":"OverrideSpecifier","overrides":[],"src":"2245:8:7"},"parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"tokenId","nameLocation":"2216:7:7","nodeType":"VariableDeclaration","scope":1095,"src":"2208:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2207:17:7"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"2263:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2262:9:7"},"scope":1815,"src":"2191:235:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2330],"body":{"id":1104,"nodeType":"Block","src":"2557:29:7","statements":[{"expression":{"id":1102,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2574:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1101,"id":1103,"nodeType":"Return","src":"2567:12:7"}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"2432:51:7","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2497:4:7","nodeType":"FunctionDefinition","overrides":{"id":1098,"nodeType":"OverrideSpecifier","overrides":[],"src":"2524:8:7"},"parameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"2501:2:7"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1105,"src":"2542:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1099,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2541:15:7"},"scope":1815,"src":"2488:98:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2336],"body":{"id":1114,"nodeType":"Block","src":"2721:31:7","statements":[{"expression":{"id":1112,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1111,"id":1113,"nodeType":"Return","src":"2731:14:7"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"2592:53:7","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2659:6:7","nodeType":"FunctionDefinition","overrides":{"id":1108,"nodeType":"OverrideSpecifier","overrides":[],"src":"2688:8:7"},"parameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"2665:2:7"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"2706:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1109,"name":"string","nodeType":"ElementaryTypeName","src":"2706:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2705:15:7"},"scope":1815,"src":"2650:102:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2344],"body":{"id":1156,"nodeType":"Block","src":"2906:241:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"2932:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1125,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"2924:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2942:49:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":1124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2916:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"2916:76:7"},{"assignments":[1132],"declarations":[{"constant":false,"id":1132,"mutability":"mutable","name":"baseURI","nameLocation":"3017:7:7","nodeType":"VariableDeclaration","scope":1156,"src":"3003:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1131,"name":"string","nodeType":"ElementaryTypeName","src":"3003:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1135,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1133,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3027:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3027:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3003:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1138,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3060:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3054:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1136,"name":"bytes","nodeType":"ElementaryTypeName","src":"3054:5:7","typeDescriptions":{}}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:6:7","memberName":"length","nodeType":"MemberAccess","src":"3054:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3078:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3054:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3138:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3054:86:7","trueExpression":{"arguments":[{"arguments":[{"id":1147,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3106:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3123:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"3115:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3115:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1145,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3089:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3093:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"3089:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3089:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3082:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1143,"name":"string","nodeType":"ElementaryTypeName","src":"3082:6:7","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3082:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1123,"id":1155,"nodeType":"Return","src":"3047:93:7"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"2758:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2827:8:7","nodeType":"FunctionDefinition","overrides":{"id":1120,"nodeType":"OverrideSpecifier","overrides":[],"src":"2873:8:7"},"parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"tokenId","nameLocation":"2844:7:7","nodeType":"VariableDeclaration","scope":1157,"src":"2836:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:17:7"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"2891:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1121,"name":"string","nodeType":"ElementaryTypeName","src":"2891:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2890:15:7"},"scope":1815,"src":"2818:329:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1165,"nodeType":"Block","src":"3455:26:7","statements":[{"expression":{"hexValue":"","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3472:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1162,"id":1164,"nodeType":"Return","src":"3465:9:7"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"3153:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3398:8:7","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"3406:2:7"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1166,"src":"3440:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1160,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:15:7"},"scope":1815,"src":"3389:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1904],"body":{"id":1208,"nodeType":"Block","src":"3608:331:7","statements":[{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"owner","nameLocation":"3626:5:7","nodeType":"VariableDeclaration","scope":1208,"src":"3618:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"3618:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1181,"initialValue":{"arguments":[{"id":1179,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"3649:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1177,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"3634:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3641:7:7","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1095,"src":"3634:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3618:39:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"3675:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3681:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3675:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3688:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3667:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"3667:57:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1190,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"3756:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3756:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1192,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3772:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3756:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1195,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3798:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1196,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"3805:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3805:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1194,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3781:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3781:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3756:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3832:58:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":1189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3735:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:165:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"3735:165:7"},{"expression":{"arguments":[{"id":1204,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"3920:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"3924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3911:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3911:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1207,"nodeType":"ExpressionStatement","src":"3911:21:7"}]},"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"3487:46:7","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3547:7:7","nodeType":"FunctionDefinition","overrides":{"id":1173,"nodeType":"OverrideSpecifier","overrides":[],"src":"3599:8:7"},"parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"to","nameLocation":"3563:2:7","nodeType":"VariableDeclaration","scope":1209,"src":"3555:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"3555:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"tokenId","nameLocation":"3575:7:7","nodeType":"VariableDeclaration","scope":1209,"src":"3567:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3567:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3554:29:7"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"3608:0:7"},"scope":1815,"src":"3538:401:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1920],"body":{"id":1229,"nodeType":"Block","src":"4085:132:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1220,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4111:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1219,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"4103:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4121:46:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":1218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4095:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4095:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"4095:73:7"},{"expression":{"baseExpression":{"id":1225,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4186:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1227,"indexExpression":{"id":1226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4202:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4186:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1217,"id":1228,"nodeType":"Return","src":"4179:31:7"}]},"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"3945:50:7","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4009:11:7","nodeType":"FunctionDefinition","overrides":{"id":1214,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:7"},"parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"tokenId","nameLocation":"4029:7:7","nodeType":"VariableDeclaration","scope":1230,"src":"4021:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4021:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4020:17:7"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"4076:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"4076:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4075:9:7"},"scope":1815,"src":"4000:217:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1912],"body":{"id":1246,"nodeType":"Block","src":"4368:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4397:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4411:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4421:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1239,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4378:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"4378:52:7"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"4223:56:7","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1247,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4293:17:7","nodeType":"FunctionDefinition","overrides":{"id":1237,"nodeType":"OverrideSpecifier","overrides":[],"src":"4359:8:7"},"parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"operator","nameLocation":"4319:8:7","nodeType":"VariableDeclaration","scope":1247,"src":"4311:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"4311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"approved","nameLocation":"4334:8:7","nodeType":"VariableDeclaration","scope":1247,"src":"4329:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"4329:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4310:33:7"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[],"src":"4368:0:7"},"scope":1815,"src":"4284:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1930],"body":{"id":1264,"nodeType":"Block","src":"4606:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1258,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4623:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1260,"indexExpression":{"id":1259,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4642:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4623:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1262,"indexExpression":{"id":1261,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4649:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4623:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1257,"id":1263,"nodeType":"Return","src":"4616:42:7"}]},"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"4443:55:7","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4512:16:7","nodeType":"FunctionDefinition","overrides":{"id":1254,"nodeType":"OverrideSpecifier","overrides":[],"src":"4582:8:7"},"parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"owner","nameLocation":"4537:5:7","nodeType":"VariableDeclaration","scope":1265,"src":"4529:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"4529:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"operator","nameLocation":"4552:8:7","nodeType":"VariableDeclaration","scope":1265,"src":"4544:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"4544:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4528:33:7"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"4600:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1255,"name":"bool","nodeType":"ElementaryTypeName","src":"4600:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4599:6:7"},"scope":1815,"src":"4503:162:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1896],"body":{"id":1291,"nodeType":"Block","src":"4846:211:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1278,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4935:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"4949:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"4916:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4959:51:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":1276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4908:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:103:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"4908:103:7"},{"expression":{"arguments":[{"id":1286,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"5032:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"5038:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5042:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"5022:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5022:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"5022:28:7"}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"4671:51:7","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4736:12:7","nodeType":"FunctionDefinition","overrides":{"id":1274,"nodeType":"OverrideSpecifier","overrides":[],"src":"4837:8:7"},"parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"from","nameLocation":"4766:4:7","nodeType":"VariableDeclaration","scope":1292,"src":"4758:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"4758:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"to","nameLocation":"4788:2:7","nodeType":"VariableDeclaration","scope":1292,"src":"4780:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"4780:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"tokenId","nameLocation":"4808:7:7","nodeType":"VariableDeclaration","scope":1292,"src":"4800:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4800:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4748:73:7"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[],"src":"4846:0:7"},"scope":1815,"src":"4727:330:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1886],"body":{"id":1310,"nodeType":"Block","src":"5246:56:7","statements":[{"expression":{"arguments":[{"id":1304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"5273:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5279:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"5283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5292:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1303,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1311,1341],"referencedDeclaration":1341,"src":"5256:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5256:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"ExpressionStatement","src":"5256:39:7"}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"5063:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5132:16:7","nodeType":"FunctionDefinition","overrides":{"id":1301,"nodeType":"OverrideSpecifier","overrides":[],"src":"5237:8:7"},"parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"from","nameLocation":"5166:4:7","nodeType":"VariableDeclaration","scope":1311,"src":"5158:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"to","nameLocation":"5188:2:7","nodeType":"VariableDeclaration","scope":1311,"src":"5180:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"5180:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"tokenId","nameLocation":"5208:7:7","nodeType":"VariableDeclaration","scope":1311,"src":"5200:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5200:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:73:7"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"5246:0:7"},"scope":1815,"src":"5123:179:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1876],"body":{"id":1340,"nodeType":"Block","src":"5519:169:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1326,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"5556:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5556:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"5570:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"5537:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5580:51:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":1324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5529:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:103:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"5529:103:7"},{"expression":{"arguments":[{"id":1334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"5656:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"5662:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"5666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1337,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"5675:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1333,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"5642:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5642:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1339,"nodeType":"ExpressionStatement","src":"5642:39:7"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"5308:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1341,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5377:16:7","nodeType":"FunctionDefinition","overrides":{"id":1322,"nodeType":"OverrideSpecifier","overrides":[],"src":"5510:8:7"},"parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"from","nameLocation":"5411:4:7","nodeType":"VariableDeclaration","scope":1341,"src":"5403:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"5403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"to","nameLocation":"5433:2:7","nodeType":"VariableDeclaration","scope":1341,"src":"5425:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"5425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"tokenId","nameLocation":"5453:7:7","nodeType":"VariableDeclaration","scope":1341,"src":"5445:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"_data","nameLocation":"5483:5:7","nodeType":"VariableDeclaration","scope":1341,"src":"5470:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"5470:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5393:101:7"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"5519:0:7"},"scope":1815,"src":"5368:320:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1369,"nodeType":"Block","src":"6691:166:7","statements":[{"expression":{"arguments":[{"id":1354,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6711:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"6717:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6701:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6701:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"6701:28:7"},{"expression":{"arguments":[{"arguments":[{"id":1361,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6770:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"6776:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1363,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6780:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1364,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"6789:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1360,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"6747:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6747:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6797:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6739:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:111:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"6739:111:7"}]},"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"5694:851:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1370,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6559:13:7","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"from","nameLocation":"6590:4:7","nodeType":"VariableDeclaration","scope":1370,"src":"6582:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"6582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"to","nameLocation":"6612:2:7","nodeType":"VariableDeclaration","scope":1370,"src":"6604:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"6604:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"tokenId","nameLocation":"6632:7:7","nodeType":"VariableDeclaration","scope":1370,"src":"6624:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"_data","nameLocation":"6662:5:7","nodeType":"VariableDeclaration","scope":1370,"src":"6649:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"6649:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6572:101:7"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"6691:0:7"},"scope":1815,"src":"6550:307:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1387,"nodeType":"Block","src":"7231:54:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1378,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"7248:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1380,"indexExpression":{"id":1379,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"7256:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7248:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7276:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7268:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"7268:7:7","typeDescriptions":{}}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7268:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7248:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1377,"id":1386,"nodeType":"Return","src":"7241:37:7"}]},"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"6863:292:7","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1388,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7169:7:7","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"tokenId","nameLocation":"7185:7:7","nodeType":"VariableDeclaration","scope":1388,"src":"7177:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"7177:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7176:17:7"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"7225:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"7225:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7224:6:7"},"scope":1815,"src":"7160:125:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1428,"nodeType":"Block","src":"7542:245:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1400,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"7568:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1399,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7560:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7578:46:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":1398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7552:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"ExpressionStatement","src":"7552:73:7"},{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"owner","nameLocation":"7643:5:7","nodeType":"VariableDeclaration","scope":1428,"src":"7635:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"7635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1411,"initialValue":{"arguments":[{"id":1409,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"7666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1407,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"7651:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7658:7:7","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1095,"src":"7651:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7651:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7635:39:7"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"7692:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1413,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"7703:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7692:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1416,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"7729:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1417,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"7736:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1415,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"7712:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7712:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7692:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1421,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"7760:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7748:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1423,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"7772:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7748:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7692:87:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7691:89:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1397,"id":1427,"nodeType":"Return","src":"7684:96:7"}]},"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"7291:147:7","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1429,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7452:18:7","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"spender","nameLocation":"7479:7:7","nodeType":"VariableDeclaration","scope":1429,"src":"7471:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"7471:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"tokenId","nameLocation":"7496:7:7","nodeType":"VariableDeclaration","scope":1429,"src":"7488:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"7488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7470:34:7"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"7536:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1395,"name":"bool","nodeType":"ElementaryTypeName","src":"7536:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7535:6:7"},"scope":1815,"src":"7443:344:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"8182:43:7","statements":[{"expression":{"arguments":[{"id":1438,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"8202:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1439,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"8206:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8215:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1437,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1444,1473],"referencedDeclaration":1473,"src":"8192:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"8192:26:7"}]},"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"7793:319:7","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8126:9:7","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"to","nameLocation":"8144:2:7","nodeType":"VariableDeclaration","scope":1444,"src":"8136:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"8136:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"tokenId","nameLocation":"8156:7:7","nodeType":"VariableDeclaration","scope":1444,"src":"8148:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"8148:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8135:29:7"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"8182:0:7"},"scope":1815,"src":"8117:108:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1472,"nodeType":"Block","src":"8561:196:7","statements":[{"expression":{"arguments":[{"id":1455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"8577:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8581:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8571:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8571:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"8571:18:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8651:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8643:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"8643:7:7","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"8655:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1467,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"8668:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1460,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"8620:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8620:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8688:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8599:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8599:151:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1471,"nodeType":"ExpressionStatement","src":"8599:151:7"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"8231:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8455:9:7","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"to","nameLocation":"8482:2:7","nodeType":"VariableDeclaration","scope":1473,"src":"8474:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"8474:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"tokenId","nameLocation":"8502:7:7","nodeType":"VariableDeclaration","scope":1473,"src":"8494:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"_data","nameLocation":"8532:5:7","nodeType":"VariableDeclaration","scope":1473,"src":"8519:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"8519:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8464:79:7"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"8561:0:7"},"scope":1815,"src":"8446:311:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1538,"nodeType":"Block","src":"9140:366:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9158:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9172:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9164:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"9164:7:7","typeDescriptions":{}}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9158:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9176:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9150:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1490,"nodeType":"ExpressionStatement","src":"9150:61:7"},{"expression":{"arguments":[{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9229:17:7","subExpression":{"arguments":[{"id":1493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9238:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1492,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9230:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9230:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9248:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9221:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9221:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1498,"nodeType":"ExpressionStatement","src":"9221:58:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9319:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9311:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"9311:7:7","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9311:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9323:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1505,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9327:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9290:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9290:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"ExpressionStatement","src":"9290:45:7"},{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1508,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9346:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1510,"indexExpression":{"id":1509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9356:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9346:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9363:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9346:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ExpressionStatement","src":"9346:18:7"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1514,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"9374:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1516,"indexExpression":{"id":1515,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9382:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9374:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9393:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9374:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1519,"nodeType":"ExpressionStatement","src":"9374:21:7"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9428:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9420:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"9420:7:7","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9420:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1525,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9432:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1526,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"9411:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9411:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"EmitStatement","src":"9406:38:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9483:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9475:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"9475:7:7","typeDescriptions":{}}},"id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9475:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9487:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1535,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9491:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1529,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"9455:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9455:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1537,"nodeType":"ExpressionStatement","src":"9455:44:7"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"8763:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9088:5:7","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"to","nameLocation":"9102:2:7","nodeType":"VariableDeclaration","scope":1539,"src":"9094:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"9094:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"tokenId","nameLocation":"9114:7:7","nodeType":"VariableDeclaration","scope":1539,"src":"9106:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9093:29:7"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"9140:0:7"},"scope":1815,"src":"9079:427:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1598,"nodeType":"Block","src":"9772:357:7","statements":[{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"owner","nameLocation":"9790:5:7","nodeType":"VariableDeclaration","scope":1598,"src":"9782:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"9782:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1551,"initialValue":{"arguments":[{"id":1549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"9813:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1547,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"9798:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9805:7:7","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1095,"src":"9798:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9798:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9782:39:7"},{"expression":{"arguments":[{"id":1553,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"9853:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9868:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9860:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"9860:7:7","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9860:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"9872:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1552,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9832:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9832:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"9832:48:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9935:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9927:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1562,"name":"address","nodeType":"ElementaryTypeName","src":"9927:7:7","typeDescriptions":{}}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9927:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1566,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"9939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1561,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9918:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9918:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"9918:29:7"},{"expression":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1569,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9958:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1571,"indexExpression":{"id":1570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"9968:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9958:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9958:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"nodeType":"ExpressionStatement","src":"9958:21:7"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9989:23:7","subExpression":{"baseExpression":{"id":1575,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"9996:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1577,"indexExpression":{"id":1576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"10004:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9996:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"9989:23:7"},{"eventCall":{"arguments":[{"id":1581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"10037:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10052:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10044:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"10044:7:7","typeDescriptions":{}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10044:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"10056:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"10028:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"EmitStatement","src":"10023:41:7"},{"expression":{"arguments":[{"id":1590,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"10095:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"10102:7:7","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10102:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"10114:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"10075:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10075:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"ExpressionStatement","src":"10075:47:7"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"9512:206:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9732:5:7","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"tokenId","nameLocation":"9746:7:7","nodeType":"VariableDeclaration","scope":1599,"src":"9738:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"9738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9737:17:7"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"9772:0:7"},"scope":1815,"src":"9723:406:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"10562:496:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"10595:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1610,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"10580:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10587:7:7","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1095,"src":"10580:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1614,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"10607:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10580:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10613:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1609,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10572:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10572:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"10572:81:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10671:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10685:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10677:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"10677:7:7","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10677:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10671:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10689:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10663:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10663:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"ExpressionStatement","src":"10663:65:7"},{"expression":{"arguments":[{"id":1630,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"10760:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10766:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"10770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"10739:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10739:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"ExpressionStatement","src":"10739:39:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10849:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"10849:7:7","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"10861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1635,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"10840:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"10840:29:7"},{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1643,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10880:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1645,"indexExpression":{"id":1644,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"10890:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10880:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10880:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ExpressionStatement","src":"10880:20:7"},{"expression":{"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1649,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10910:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1651,"indexExpression":{"id":1650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10920:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10910:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10927:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10910:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1654,"nodeType":"ExpressionStatement","src":"10910:18:7"},{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1655,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"10938:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1657,"indexExpression":{"id":1656,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"10946:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10938:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10957:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10938:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1660,"nodeType":"ExpressionStatement","src":"10938:21:7"},{"eventCall":{"arguments":[{"id":1662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"10984:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10990:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"10994:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"10975:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10975:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"EmitStatement","src":"10970:32:7"},{"expression":{"arguments":[{"id":1668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"11033:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"11039:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1670,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"11043:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1667,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"11013:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"ExpressionStatement","src":"11013:38:7"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"10135:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10462:9:7","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"from","nameLocation":"10489:4:7","nodeType":"VariableDeclaration","scope":1674,"src":"10481:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"10481:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"to","nameLocation":"10511:2:7","nodeType":"VariableDeclaration","scope":1674,"src":"10503:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"10503:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"tokenId","nameLocation":"10531:7:7","nodeType":"VariableDeclaration","scope":1674,"src":"10523:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"10523:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10471:73:7"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"10562:0:7"},"scope":1815,"src":"10453:605:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1697,"nodeType":"Block","src":"11233:107:7","statements":[{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1682,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"11243:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1684,"indexExpression":{"id":1683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"11259:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11243:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1685,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"11270:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11243:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1687,"nodeType":"ExpressionStatement","src":"11243:29:7"},{"eventCall":{"arguments":[{"arguments":[{"id":1691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"11311:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1689,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"11296:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11303:7:7","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1095,"src":"11296:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11296:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"11321:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"11325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1688,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"11287:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11287:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"EmitStatement","src":"11282:51:7"}]},"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"11064:100:7","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11178:8:7","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"to","nameLocation":"11195:2:7","nodeType":"VariableDeclaration","scope":1698,"src":"11187:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"11187:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"tokenId","nameLocation":"11207:7:7","nodeType":"VariableDeclaration","scope":1698,"src":"11199:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"11199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11186:29:7"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"11233:0:7"},"scope":1815,"src":"11169:171:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"11598:184:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"11616:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1710,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"11625:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11616:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11635:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11608:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1714,"nodeType":"ExpressionStatement","src":"11608:55:7"},{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1715,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"11673:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1718,"indexExpression":{"id":1716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"11692:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11673:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1719,"indexExpression":{"id":1717,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"11699:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11673:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1720,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"11711:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11673:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"ExpressionStatement","src":"11673:46:7"},{"eventCall":{"arguments":[{"id":1724,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"11749:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1725,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"11756:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1726,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"11766:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1723,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"11734:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11734:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"EmitStatement","src":"11729:46:7"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"11346:124:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11484:18:7","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"owner","nameLocation":"11520:5:7","nodeType":"VariableDeclaration","scope":1730,"src":"11512:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"11512:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"operator","nameLocation":"11543:8:7","nodeType":"VariableDeclaration","scope":1730,"src":"11535:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"11535:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"approved","nameLocation":"11566:8:7","nodeType":"VariableDeclaration","scope":1730,"src":"11561:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1704,"name":"bool","nodeType":"ElementaryTypeName","src":"11561:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11502:78:7"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[],"src":"11598:0:7"},"scope":1815,"src":"11475:307:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"12491:622:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"12505:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12508:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2363,"src":"12505:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12505:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1789,"nodeType":"Block","src":"13071:36:7","statements":[{"expression":{"hexValue":"74727565","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13092:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1743,"id":1788,"nodeType":"Return","src":"13085:11:7"}]},"id":1790,"nodeType":"IfStatement","src":"12501:606:7","trueBody":{"id":1786,"nodeType":"Block","src":"12522:543:7","statements":[{"clauses":[{"block":{"id":1766,"nodeType":"Block","src":"12637:91:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"12662:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1761,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"12672:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1949_$","typeString":"type(contract IERC721Receiver)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12688:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"12672:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12705:8:7","memberName":"selector","nodeType":"MemberAccess","src":"12672:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12662:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1743,"id":1765,"nodeType":"Return","src":"12655:58:7"}]},"errorName":"","id":1767,"nodeType":"TryCatchClause","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"retval","nameLocation":"12629:6:7","nodeType":"VariableDeclaration","scope":1767,"src":"12622:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1757,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12622:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12621:15:7"},"src":"12613:115:7"},{"block":{"id":1783,"nodeType":"Block","src":"12757:298:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1771,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"12779:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12786:6:7","memberName":"length","nodeType":"MemberAccess","src":"12779:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12796:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12779:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1781,"nodeType":"Block","src":"12906:135:7","statements":[{"AST":{"nodeType":"YulBlock","src":"12937:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12974:2:7","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"12978:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12970:3:7"},"nodeType":"YulFunctionCall","src":"12970:15:7"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"12993:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12987:5:7"},"nodeType":"YulFunctionCall","src":"12987:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12963:6:7"},"nodeType":"YulFunctionCall","src":"12963:38:7"},"nodeType":"YulExpressionStatement","src":"12963:38:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1769,"isOffset":false,"isSlot":false,"src":"12978:6:7","valueSize":1},{"declaration":1769,"isOffset":false,"isSlot":false,"src":"12993:6:7","valueSize":1}],"id":1780,"nodeType":"InlineAssembly","src":"12928:95:7"}]},"id":1782,"nodeType":"IfStatement","src":"12775:266:7","trueBody":{"id":1779,"nodeType":"Block","src":"12799:101:7","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12828:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1775,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12821:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12821:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1778,"nodeType":"ExpressionStatement","src":"12821:60:7"}]}}]},"errorName":"","id":1784,"nodeType":"TryCatchClause","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"reason","nameLocation":"12749:6:7","nodeType":"VariableDeclaration","scope":1784,"src":"12736:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"12736:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12735:21:7"},"src":"12729:326:7"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1751,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"12577:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1753,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"12591:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"12597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1755,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"12606:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"12556:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1747,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"12540:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1949_$","typeString":"type(contract IERC721Receiver)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12540:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1949","typeString":"contract IERC721Receiver"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12560:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"12540:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12540:72:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1785,"nodeType":"TryStatement","src":"12536:519:7"}]}}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"11788:542:7","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12344:22:7","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"from","nameLocation":"12384:4:7","nodeType":"VariableDeclaration","scope":1792,"src":"12376:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"12376:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"to","nameLocation":"12406:2:7","nodeType":"VariableDeclaration","scope":1792,"src":"12398:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"12398:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"tokenId","nameLocation":"12426:7:7","nodeType":"VariableDeclaration","scope":1792,"src":"12418:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"12418:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"_data","nameLocation":"12456:5:7","nodeType":"VariableDeclaration","scope":1792,"src":"12443:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1738,"name":"bytes","nodeType":"ElementaryTypeName","src":"12443:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12366:101:7"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1792,"src":"12485:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1741,"name":"bool","nodeType":"ElementaryTypeName","src":"12485:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12484:6:7"},"scope":1815,"src":"12335:778:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1802,"nodeType":"Block","src":"13789:2:7","statements":[]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"13119:545:7","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13678:20:7","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"from","nameLocation":"13716:4:7","nodeType":"VariableDeclaration","scope":1803,"src":"13708:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"13708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"to","nameLocation":"13738:2:7","nodeType":"VariableDeclaration","scope":1803,"src":"13730:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"13730:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"tokenId","nameLocation":"13758:7:7","nodeType":"VariableDeclaration","scope":1803,"src":"13750:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"13750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13698:73:7"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[],"src":"13789:0:7"},"scope":1815,"src":"13669:122:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1813,"nodeType":"Block","src":"14282:2:7","statements":[]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"13797:361:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14172:19:7","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"from","nameLocation":"14209:4:7","nodeType":"VariableDeclaration","scope":1814,"src":"14201:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"14201:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"to","nameLocation":"14231:2:7","nodeType":"VariableDeclaration","scope":1814,"src":"14223:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"14223:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"tokenId","nameLocation":"14251:7:7","nodeType":"VariableDeclaration","scope":1814,"src":"14243:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"14243:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14191:73:7"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"14282:0:7"},"scope":1815,"src":"14163:121:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1816,"src":"628:13658:7","usedErrors":[]}],"src":"107:14180:7"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2975],"IERC721":[1931]},"id":1932,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1817,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1932,"sourceUnit":2976,"src":"133:47:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1820,"name":"IERC165","nameLocations":["271:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"271:7:8"},"id":1821,"nodeType":"InheritanceSpecifier","src":"271:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"182:67:8","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1931,"linearizedBaseContracts":[1931,2975],"name":"IERC721","nameLocation":"260:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"285:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1830,"name":"Transfer","nameLocation":"384:8:8","nodeType":"EventDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:8","nodeType":"VariableDeclaration","scope":1830,"src":"393:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:8","nodeType":"VariableDeclaration","scope":1830,"src":"415:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:8","nodeType":"VariableDeclaration","scope":1830,"src":"435:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:8"},"src":"378:82:8"},{"anonymous":false,"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"466:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1839,"name":"Approval","nameLocation":"571:8:8","nodeType":"EventDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:8","nodeType":"VariableDeclaration","scope":1839,"src":"580:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1835,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:8","nodeType":"VariableDeclaration","scope":1839,"src":"603:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1837,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:8","nodeType":"VariableDeclaration","scope":1839,"src":"629:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:8"},"src":"565:89:8"},{"anonymous":false,"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"660:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1848,"name":"ApprovalForAll","nameLocation":"788:14:8","nodeType":"EventDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:8","nodeType":"VariableDeclaration","scope":1848,"src":"803:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1844,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:8","nodeType":"VariableDeclaration","scope":1848,"src":"826:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1846,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:8","nodeType":"VariableDeclaration","scope":1848,"src":"852:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1845,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:8"},"src":"782:85:8"},{"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"873:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1856,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:8","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"owner","nameLocation":"981:5:8","nodeType":"VariableDeclaration","scope":1856,"src":"973:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:8"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"balance","nameLocation":"1019:7:8","nodeType":"VariableDeclaration","scope":1856,"src":"1011:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:8"},"scope":1931,"src":"954:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"1034:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1864,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:8","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:8","nodeType":"VariableDeclaration","scope":1864,"src":"1187:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:8"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"owner","nameLocation":"1235:5:8","nodeType":"VariableDeclaration","scope":1864,"src":"1227:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:8"},"scope":1931,"src":"1170:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"1248:556:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1876,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:8","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"from","nameLocation":"1852:4:8","nodeType":"VariableDeclaration","scope":1876,"src":"1844:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"to","nameLocation":"1874:2:8","nodeType":"VariableDeclaration","scope":1876,"src":"1866:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1871,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:8","nodeType":"VariableDeclaration","scope":1876,"src":"1886:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"data","nameLocation":"1926:4:8","nodeType":"VariableDeclaration","scope":1876,"src":"1911:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1872,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:8"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[],"src":"1945:0:8"},"scope":1931,"src":"1809:137:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"1952:690:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1886,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2656:16:8","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"from","nameLocation":"2690:4:8","nodeType":"VariableDeclaration","scope":1886,"src":"2682:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"to","nameLocation":"2712:2:8","nodeType":"VariableDeclaration","scope":1886,"src":"2704:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"tokenId","nameLocation":"2732:7:8","nodeType":"VariableDeclaration","scope":1886,"src":"2724:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2724:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2672:73:8"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"2754:0:8"},"scope":1931,"src":"2647:108:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"2761:504:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1896,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3279:12:8","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"from","nameLocation":"3309:4:8","nodeType":"VariableDeclaration","scope":1896,"src":"3301:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"3301:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"to","nameLocation":"3331:2:8","nodeType":"VariableDeclaration","scope":1896,"src":"3323:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"3323:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"tokenId","nameLocation":"3351:7:8","nodeType":"VariableDeclaration","scope":1896,"src":"3343:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3291:73:8"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"3373:0:8"},"scope":1931,"src":"3270:104:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"3380:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1904,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3846:7:8","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"to","nameLocation":"3862:2:8","nodeType":"VariableDeclaration","scope":1904,"src":"3854:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"3854:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"tokenId","nameLocation":"3874:7:8","nodeType":"VariableDeclaration","scope":1904,"src":"3866:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3866:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3853:29:8"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"3891:0:8"},"scope":1931,"src":"3837:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"3898:309:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1912,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4221:17:8","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"operator","nameLocation":"4247:8:8","nodeType":"VariableDeclaration","scope":1912,"src":"4239:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"4239:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"_approved","nameLocation":"4262:9:8","nodeType":"VariableDeclaration","scope":1912,"src":"4257:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"4257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4238:34:8"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[],"src":"4281:0:8"},"scope":1931,"src":"4212:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"4288:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1920,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4441:11:8","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"tokenId","nameLocation":"4461:7:8","nodeType":"VariableDeclaration","scope":1920,"src":"4453:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4452:17:8"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"operator","nameLocation":"4501:8:8","nodeType":"VariableDeclaration","scope":1920,"src":"4493:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4492:18:8"},"scope":1931,"src":"4432:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"4517:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1930,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4669:16:8","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"owner","nameLocation":"4694:5:8","nodeType":"VariableDeclaration","scope":1930,"src":"4686:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"4686:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"operator","nameLocation":"4709:8:8","nodeType":"VariableDeclaration","scope":1930,"src":"4701:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"4701:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4685:33:8"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"4742:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1927,"name":"bool","nodeType":"ElementaryTypeName","src":"4742:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4741:6:8"},"scope":1931,"src":"4660:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1932,"src":"250:4500:8","usedErrors":[]}],"src":"108:4643:8"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1949]},"id":1950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1933,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"141:152:9","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1949,"linearizedBaseContracts":[1949],"name":"IERC721Receiver","nameLocation":"304:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"326:493:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1948,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:9","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"operator","nameLocation":"867:8:9","nodeType":"VariableDeclaration","scope":1948,"src":"859:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"from","nameLocation":"893:4:9","nodeType":"VariableDeclaration","scope":1948,"src":"885:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:9","nodeType":"VariableDeclaration","scope":1948,"src":"907:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"data","nameLocation":"947:4:9","nodeType":"VariableDeclaration","scope":1948,"src":"932:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1942,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:9"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"976:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1945,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:9"},"scope":1949,"src":"824:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1950,"src":"294:692:9","usedErrors":[]}],"src":"116:871:9"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[2640],"Context":[2662],"ERC165":[2963],"ERC721":[1815],"ERC721Enumerable":[2287],"IERC165":[2975],"IERC721":[1931],"IERC721Enumerable":[2318],"IERC721Metadata":[2345],"IERC721Receiver":[1949],"Strings":[2939]},"id":2288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1951,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2288,"sourceUnit":1816,"src":"138:23:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2288,"sourceUnit":2319,"src":"162:33:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1955,"name":"ERC721","nameLocations":["435:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1815,"src":"435:6:10"},"id":1956,"nodeType":"InheritanceSpecifier","src":"435:6:10"},{"baseName":{"id":1957,"name":"IERC721Enumerable","nameLocations":["443:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"443:17:10"},"id":1958,"nodeType":"InheritanceSpecifier","src":"443:17:10"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"197:199:10","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":true,"id":2287,"linearizedBaseContracts":[2287,2318,1815,2345,1931,2963,2975,2662],"name":"ERC721Enumerable","nameLocation":"415:16:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1964,"mutability":"mutable","name":"_ownedTokens","nameLocation":"576:12:10","nodeType":"VariableDeclaration","scope":2287,"src":"520:68:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1963,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"520:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1962,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"539:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1968,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"694:17:10","nodeType":"VariableDeclaration","scope":2287,"src":"658:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1967,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"658:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1971,"mutability":"mutable","name":"_allTokens","nameLocation":"790:10:10","nodeType":"VariableDeclaration","scope":2287,"src":"772:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ArrayTypeName","src":"772:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1975,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"907:15:10","nodeType":"VariableDeclaration","scope":2287,"src":"871:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1974,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"871:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[1043,2974],"body":{"id":1998,"nodeType":"Block","src":"1098:114:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"1115:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1988,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"1135:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2318_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2318_$","typeString":"type(contract IERC721Enumerable)"}],"id":1987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$2318","typeString":"type(contract IERC721Enumerable)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1154:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1130:35:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1115:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1994,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"1193:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1992,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1169:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$2287_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1175:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"1169:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1169:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1115:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1985,"id":1997,"nodeType":"Return","src":"1108:97:10"}]},"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"929:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"999:17:10","nodeType":"FunctionDefinition","overrides":{"id":1982,"nodeType":"OverrideSpecifier","overrides":[{"id":1980,"name":"IERC165","nameLocations":["1066:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"1066:7:10"},{"id":1981,"name":"ERC721","nameLocations":["1075:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1815,"src":"1075:6:10"}],"src":"1057:25:10"},"parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"interfaceId","nameLocation":"1024:11:10","nodeType":"VariableDeclaration","scope":1999,"src":"1017:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1977,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1017:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1016:20:10"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"1092:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1983,"name":"bool","nodeType":"ElementaryTypeName","src":"1092:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1091:6:10"},"scope":2287,"src":"990:222:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2309],"body":{"id":2026,"nodeType":"Block","src":"1397:147:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1415:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":2014,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"1440:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2012,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1423:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1430:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"1423:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1423:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1415:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1448:45:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":2010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1407:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"ExpressionStatement","src":"1407:87:10"},{"expression":{"baseExpression":{"baseExpression":{"id":2020,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1511:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2022,"indexExpression":{"id":2021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"1524:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2024,"indexExpression":{"id":2023,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1531:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2009,"id":2025,"nodeType":"Return","src":"1504:33:10"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"1218:68:10","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1300:19:10","nodeType":"FunctionDefinition","overrides":{"id":2006,"nodeType":"OverrideSpecifier","overrides":[],"src":"1370:8:10"},"parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"owner","nameLocation":"1328:5:10","nodeType":"VariableDeclaration","scope":2027,"src":"1320:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"index","nameLocation":"1343:5:10","nodeType":"VariableDeclaration","scope":2027,"src":"1335:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1319:30:10"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"1388:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:9:10"},"scope":2287,"src":"1291:253:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2299],"body":{"id":2037,"nodeType":"Block","src":"1685:41:10","statements":[{"expression":{"expression":{"id":2034,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"1702:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1713:6:10","memberName":"length","nodeType":"MemberAccess","src":"1702:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2036,"nodeType":"Return","src":"1695:24:10"}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"1550:60:10","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1624:11:10","nodeType":"FunctionDefinition","overrides":{"id":2030,"nodeType":"OverrideSpecifier","overrides":[],"src":"1658:8:10"},"parameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"1635:2:10"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"1676:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1675:9:10"},"scope":2287,"src":"1615:111:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2317],"body":{"id":2060,"nodeType":"Block","src":"1882:146:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2048,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1900:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2049,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1908:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$2287_$","typeString":"type(contract ERC721Enumerable)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1925:11:10","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"1908:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1900:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:46:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":2047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1892:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"ExpressionStatement","src":"1892:95:10"},{"expression":{"baseExpression":{"id":2056,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2004:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2058,"indexExpression":{"id":2057,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2015:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2004:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2046,"id":2059,"nodeType":"Return","src":"1997:24:10"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"1732:61:10","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1807:12:10","nodeType":"FunctionDefinition","overrides":{"id":2043,"nodeType":"OverrideSpecifier","overrides":[],"src":"1855:8:10"},"parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"index","nameLocation":"1828:5:10","nodeType":"VariableDeclaration","scope":2061,"src":"1820:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1819:15:10"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"1873:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1872:9:10"},"scope":2287,"src":"1798:230:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1803],"body":{"id":2124,"nodeType":"Block","src":"2753:443:10","statements":[{"expression":{"arguments":[{"id":2075,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2790:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2076,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2796:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2077,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2072,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2763:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$2287_$","typeString":"type(contract super ERC721Enumerable)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2769:20:10","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1803,"src":"2763:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"ExpressionStatement","src":"2763:45:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2823:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2839:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:10","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2823:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2918:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2092,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2926:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2918:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"nodeType":"IfStatement","src":"2914:88:10","trueBody":{"id":2099,"nodeType":"Block","src":"2930:72:10","statements":[{"expression":{"arguments":[{"id":2095,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2977:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2096,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2094,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"2944:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"ExpressionStatement","src":"2944:47:10"}]}},"id":2101,"nodeType":"IfStatement","src":"2819:183:10","trueBody":{"id":2090,"nodeType":"Block","src":"2843:65:10","statements":[{"expression":{"arguments":[{"id":2087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2889:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"2857:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2089,"nodeType":"ExpressionStatement","src":"2857:40:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3015:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3021:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:10","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3021:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3015:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3113:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3119:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3113:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"IfStatement","src":"3109:81:10","trueBody":{"id":2121,"nodeType":"Block","src":"3125:65:10","statements":[{"expression":{"arguments":[{"id":2117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3167:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2118,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2116,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"3139:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2120,"nodeType":"ExpressionStatement","src":"3139:40:10"}]}},"id":2123,"nodeType":"IfStatement","src":"3011:179:10","trueBody":{"id":2112,"nodeType":"Block","src":"3033:70:10","statements":[{"expression":{"arguments":[{"id":2109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3084:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2108,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"3047:36:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"ExpressionStatement","src":"3047:45:10"}]}}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"2034:585:10","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2633:20:10","nodeType":"FunctionDefinition","overrides":{"id":2070,"nodeType":"OverrideSpecifier","overrides":[],"src":"2744:8:10"},"parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"from","nameLocation":"2671:4:10","nodeType":"VariableDeclaration","scope":2125,"src":"2663:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"to","nameLocation":"2693:2:10","nodeType":"VariableDeclaration","scope":2125,"src":"2685:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"tokenId","nameLocation":"2713:7:10","nodeType":"VariableDeclaration","scope":2125,"src":"2705:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2653:73:10"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[],"src":"2753:0:10"},"scope":2287,"src":"2624:572:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"3564:143:10","statements":[{"assignments":[2134],"declarations":[{"constant":false,"id":2134,"mutability":"mutable","name":"length","nameLocation":"3582:6:10","nodeType":"VariableDeclaration","scope":2154,"src":"3574:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2139,"initialValue":{"arguments":[{"id":2137,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3608:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2135,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"3591:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3598:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"3591:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3574:37:10"},{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2140,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3621:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2143,"indexExpression":{"id":2141,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3634:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3621:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2144,"indexExpression":{"id":2142,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3638:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3621:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2145,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"3621:34:10"},{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2148,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"3665:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2150,"indexExpression":{"id":2149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3665:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2151,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3694:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"3665:35:10"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"3202:283:10","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3499:27:10","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"to","nameLocation":"3535:2:10","nodeType":"VariableDeclaration","scope":2155,"src":"3527:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"3527:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"tokenId","nameLocation":"3547:7:10","nodeType":"VariableDeclaration","scope":2155,"src":"3539:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3526:29:10"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[],"src":"3564:0:10"},"scope":2287,"src":"3490:217:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2174,"nodeType":"Block","src":"3968:95:10","statements":[{"expression":{"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2161,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3978:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2163,"indexExpression":{"id":2162,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3994:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3978:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2164,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"4005:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4016:6:10","memberName":"length","nodeType":"MemberAccess","src":"4005:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3978:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2167,"nodeType":"ExpressionStatement","src":"3978:44:10"},{"expression":{"arguments":[{"id":2171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2168,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"4032:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:4:10","memberName":"push","nodeType":"MemberAccess","src":"4032:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2173,"nodeType":"ExpressionStatement","src":"4032:24:10"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"3713:184:10","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3911:31:10","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"tokenId","nameLocation":"3951:7:10","nodeType":"VariableDeclaration","scope":2175,"src":"3943:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3943:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3942:17:10"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[],"src":"3968:0:10"},"scope":2287,"src":"3902:161:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2237,"nodeType":"Block","src":"4761:889:10","statements":[{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4950:14:10","nodeType":"VariableDeclaration","scope":2237,"src":"4942:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2187,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"4984:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2185,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4967:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1815_$","typeString":"type(contract ERC721)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4974:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"4967:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4967:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4992:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4967:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4942:51:10"},{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"tokenIndex","nameLocation":"5011:10:10","nodeType":"VariableDeclaration","scope":2237,"src":"5003:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2197,"initialValue":{"baseExpression":{"id":2194,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"5024:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2196,"indexExpression":{"id":2195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"5042:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5024:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5003:47:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5154:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2199,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5168:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2224,"nodeType":"IfStatement","src":"5150:323:10","trueBody":{"id":2223,"nodeType":"Block","src":"5184:289:10","statements":[{"assignments":[2202],"declarations":[{"constant":false,"id":2202,"mutability":"mutable","name":"lastTokenId","nameLocation":"5206:11:10","nodeType":"VariableDeclaration","scope":2223,"src":"5198:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5198:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2208,"initialValue":{"baseExpression":{"baseExpression":{"id":2203,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5220:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2205,"indexExpression":{"id":2204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5233:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2207,"indexExpression":{"id":2206,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5239:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5198:56:10"},{"expression":{"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2209,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5269:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2212,"indexExpression":{"id":2210,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5282:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5269:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2213,"indexExpression":{"id":2211,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5288:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5269:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2214,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"5302:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5269:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2216,"nodeType":"ExpressionStatement","src":"5269:44:10"},{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2217,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"5385:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2219,"indexExpression":{"id":2218,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"5403:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5385:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2220,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5418:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5385:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"5385:43:10"}]}},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5559:33:10","subExpression":{"baseExpression":{"id":2225,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"5566:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2227,"indexExpression":{"id":2226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"5584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5566:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"5559:33:10"},{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5602:41:10","subExpression":{"baseExpression":{"baseExpression":{"id":2230,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5609:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2232,"indexExpression":{"id":2231,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5622:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5609:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2234,"indexExpression":{"id":2233,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5628:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5609:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2236,"nodeType":"ExpressionStatement","src":"5602:41:10"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"4069:606:10","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4689:32:10","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"from","nameLocation":"4730:4:10","nodeType":"VariableDeclaration","scope":2238,"src":"4722:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"tokenId","nameLocation":"4744:7:10","nodeType":"VariableDeclaration","scope":2238,"src":"4736:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4721:31:10"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"4761:0:10"},"scope":2287,"src":"4680:970:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2285,"nodeType":"Block","src":"6009:990:10","statements":[{"assignments":[2245],"declarations":[{"constant":false,"id":2245,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6195:14:10","nodeType":"VariableDeclaration","scope":2285,"src":"6187:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2250,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2246,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6212:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6223:6:10","memberName":"length","nodeType":"MemberAccess","src":"6212:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6212:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6187:46:10"},{"assignments":[2252],"declarations":[{"constant":false,"id":2252,"mutability":"mutable","name":"tokenIndex","nameLocation":"6251:10:10","nodeType":"VariableDeclaration","scope":2285,"src":"6243:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2256,"initialValue":{"baseExpression":{"id":2253,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6264:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2255,"indexExpression":{"id":2254,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"6280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6264:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6243:45:10"},{"assignments":[2258],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"lastTokenId","nameLocation":"6618:11:10","nodeType":"VariableDeclaration","scope":2285,"src":"6610:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"6610:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"baseExpression":{"id":2259,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6632:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2261,"indexExpression":{"id":2260,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"6643:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6610:48:10"},{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2263,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6669:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2265,"indexExpression":{"id":2264,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"6680:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6669:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2266,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6694:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6669:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"nodeType":"ExpressionStatement","src":"6669:36:10"},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2269,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6773:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2271,"indexExpression":{"id":2270,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6789:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6773:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2272,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"6804:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6773:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"6773:41:10"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6935:31:10","subExpression":{"baseExpression":{"id":2275,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6942:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2277,"indexExpression":{"id":2276,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"6958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6942:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"6935:31:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2280,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6976:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6987:3:10","memberName":"pop","nodeType":"MemberAccess","src":"6976:14:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2284,"nodeType":"ExpressionStatement","src":"6976:16:10"}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"5656:277:10","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5947:36:10","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"tokenId","nameLocation":"5992:7:10","nodeType":"VariableDeclaration","scope":2286,"src":"5984:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5983:17:10"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"6009:0:10"},"scope":2287,"src":"5938:1061:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2288,"src":"397:6604:10","usedErrors":[]}],"src":"113:6889:10"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[2975],"IERC721":[1931],"IERC721Enumerable":[2318]},"id":2319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2289,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":1932,"src":"154:24:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2292,"name":"IERC721","nameLocations":["348:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1931,"src":"348:7:11"},"id":2293,"nodeType":"InheritanceSpecifier","src":"348:7:11"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"180:136:11","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2318,"linearizedBaseContracts":[2318,1931,2975],"name":"IERC721Enumerable","nameLocation":"327:17:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"362:82:11","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":2299,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:11","nodeType":"FunctionDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"469:2:11"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2299,"src":"495:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:11"},"scope":2318,"src":"449:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"510:171:11","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2309,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:11","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"owner","nameLocation":"723:5:11","nodeType":"VariableDeclaration","scope":2309,"src":"715:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"index","nameLocation":"738:5:11","nodeType":"VariableDeclaration","scope":2309,"src":"730:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:11"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"768:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:11"},"scope":2318,"src":"686:91:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"783:164:11","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2317,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:11","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"index","nameLocation":"982:5:11","nodeType":"VariableDeclaration","scope":2317,"src":"974:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:11"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"1012:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:11"},"scope":2318,"src":"952:69:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2319,"src":"317:706:11","usedErrors":[]}],"src":"129:895:11"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2975],"IERC721":[1931],"IERC721Metadata":[2345]},"id":2346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2346,"sourceUnit":1932,"src":"137:24:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2323,"name":"IERC721","nameLocations":["326:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1931,"src":"326:7:12"},"id":2324,"nodeType":"InheritanceSpecifier","src":"326:7:12"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"163:133:12","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2345,"linearizedBaseContracts":[2345,1931,2975],"name":"IERC721Metadata","nameLocation":"307:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"340:58:12","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2330,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:12","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[],"src":"416:2:12"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2330,"src":"442:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:12"},"scope":2345,"src":"403:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"463:60:12","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2336,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:12","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[],"src":"543:2:12"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2336,"src":"569:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2333,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:12"},"scope":2345,"src":"528:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"590:90:12","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2344,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:12","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:12","nodeType":"VariableDeclaration","scope":2344,"src":"703:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:12"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"743:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:12"},"scope":2345,"src":"685:73:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2346,"src":"297:463:12","usedErrors":[]}],"src":"112:649:12"}},"@openzeppelin/contracts/utils/Address.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2640]},"id":2641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2347,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2640,"linearizedBaseContracts":[2640],"name":"Address","nameLocation":"202:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2362,"nodeType":"Block","src":"1241:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"1465:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:13","memberName":"code","nodeType":"MemberAccess","src":"1465:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:13","memberName":"length","nodeType":"MemberAccess","src":"1465:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2355,"id":2361,"nodeType":"Return","src":"1458:30:13"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"216:954:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:13","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"account","nameLocation":"1203:7:13","nodeType":"VariableDeclaration","scope":2363,"src":"1195:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:13"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"1235:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2353,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:13"},"scope":2640,"src":"1175:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"2483:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2640","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2640","typeString":"library Address"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:13","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:13","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2377,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2526:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"ExpressionStatement","src":"2493:73:13"},{"assignments":[2383,null],"declarations":[{"constant":false,"id":2383,"mutability":"mutable","name":"success","nameLocation":"2583:7:13","nodeType":"VariableDeclaration","scope":2396,"src":"2578:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2382,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2390,"initialValue":{"arguments":[{"hexValue":"","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2384,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2596:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:13","memberName":"call","nodeType":"MemberAccess","src":"2596:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2386,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2618:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:13"},{"expression":{"arguments":[{"id":2392,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2647:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2395,"nodeType":"ExpressionStatement","src":"2639:78:13"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"1501:906:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:13","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:13","nodeType":"VariableDeclaration","scope":2397,"src":"2431:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"amount","nameLocation":"2466:6:13","nodeType":"VariableDeclaration","scope":2397,"src":"2458:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:13"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[],"src":"2483:0:13"},"scope":2640,"src":"2412:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2413,"nodeType":"Block","src":"3555:84:13","statements":[{"expression":{"arguments":[{"id":2408,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3585:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2409,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"3593:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2407,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2414,2434],"referencedDeclaration":2434,"src":"3572:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2406,"id":2412,"nodeType":"Return","src":"3565:67:13"}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"2730:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:13","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"target","nameLocation":"3496:6:13","nodeType":"VariableDeclaration","scope":2414,"src":"3488:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"data","nameLocation":"3517:4:13","nodeType":"VariableDeclaration","scope":2414,"src":"3504:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:13"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"3541:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:13"},"scope":2640,"src":"3466:173:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"4008:76:13","statements":[{"expression":{"arguments":[{"id":2427,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4047:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2428,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"4055:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2430,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4064:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2426,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2454,2504],"referencedDeclaration":2504,"src":"4025:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2425,"id":2432,"nodeType":"Return","src":"4018:59:13"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"3645:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:13","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"target","nameLocation":"3900:6:13","nodeType":"VariableDeclaration","scope":2434,"src":"3892:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"data","nameLocation":"3929:4:13","nodeType":"VariableDeclaration","scope":2434,"src":"3916:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:13","nodeType":"VariableDeclaration","scope":2434,"src":"3943:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2420,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:13"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"3994:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:13"},"scope":2640,"src":"3861:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2453,"nodeType":"Block","src":"4589:111:13","statements":[{"expression":{"arguments":[{"id":2447,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4628:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2448,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4636:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"4642:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2446,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2454,2504],"referencedDeclaration":2504,"src":"4606:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2445,"id":2452,"nodeType":"Return","src":"4599:94:13"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"4090:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:13","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"target","nameLocation":"4494:6:13","nodeType":"VariableDeclaration","scope":2454,"src":"4486:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"data","nameLocation":"4523:4:13","nodeType":"VariableDeclaration","scope":2454,"src":"4510:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"value","nameLocation":"4545:5:13","nodeType":"VariableDeclaration","scope":2454,"src":"4537:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:13"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"4575:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2443,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:13"},"scope":2640,"src":"4446:254:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2503,"nodeType":"Block","src":"5127:320:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2471,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2640","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2640","typeString":"library Address"}],"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:13","typeDescriptions":{}}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5159:7:13","memberName":"balance","nodeType":"MemberAccess","src":"5145:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"5170:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2478,"nodeType":"ExpressionStatement","src":"5137:81:13"},{"expression":{"arguments":[{"arguments":[{"id":2481,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"5247:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2480,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"5236:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"5228:60:13"},{"assignments":[2487,2489],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"success","nameLocation":"5305:7:13","nodeType":"VariableDeclaration","scope":2503,"src":"5300:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2486,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:13","nodeType":"VariableDeclaration","scope":2503,"src":"5314:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2488,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2496,"initialValue":{"arguments":[{"id":2494,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"5367:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2490,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"5341:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:4:13","memberName":"call","nodeType":"MemberAccess","src":"5341:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"5360:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:13"},{"expression":{"arguments":[{"id":2498,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"5406:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2499,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"5415:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2500,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5427:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2497,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5389:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2467,"id":2502,"nodeType":"Return","src":"5382:58:13"}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"4706:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2504,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:13","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"target","nameLocation":"4996:6:13","nodeType":"VariableDeclaration","scope":2504,"src":"4988:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"data","nameLocation":"5025:4:13","nodeType":"VariableDeclaration","scope":2504,"src":"5012:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2458,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"value","nameLocation":"5047:5:13","nodeType":"VariableDeclaration","scope":2504,"src":"5039:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:13","nodeType":"VariableDeclaration","scope":2504,"src":"5062:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:13"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"5113:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2465,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:13"},"scope":2640,"src":"4948:499:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"5724:97:13","statements":[{"expression":{"arguments":[{"id":2515,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5760:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2516,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"5768:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2514,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2521,2556],"referencedDeclaration":2556,"src":"5741:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2513,"id":2519,"nodeType":"Return","src":"5734:80:13"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"5453:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:13","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"target","nameLocation":"5660:6:13","nodeType":"VariableDeclaration","scope":2521,"src":"5652:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"data","nameLocation":"5681:4:13","nodeType":"VariableDeclaration","scope":2521,"src":"5668:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2508,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:13"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"5710:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2511,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:13"},"scope":2640,"src":"5624:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"6163:228:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2535,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"6192:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2534,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6181:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2539,"nodeType":"ExpressionStatement","src":"6173:67:13"},{"assignments":[2541,2543],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"success","nameLocation":"6257:7:13","nodeType":"VariableDeclaration","scope":2555,"src":"6252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2540,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:13","nodeType":"VariableDeclaration","scope":2555,"src":"6266:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2542,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2548,"initialValue":{"arguments":[{"id":2546,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"6311:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2544,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"6293:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6300:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:13"},{"expression":{"arguments":[{"id":2550,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6350:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2551,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"6359:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2552,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6371:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2549,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"6333:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2532,"id":2554,"nodeType":"Return","src":"6326:58:13"}]},"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"5827:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:13","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"target","nameLocation":"6050:6:13","nodeType":"VariableDeclaration","scope":2556,"src":"6042:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2526,"mutability":"mutable","name":"data","nameLocation":"6079:4:13","nodeType":"VariableDeclaration","scope":2556,"src":"6066:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2525,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:13","nodeType":"VariableDeclaration","scope":2556,"src":"6093:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2527,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:13"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"6149:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2530,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:13"},"scope":2640,"src":"6005:386:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"6667:101:13","statements":[{"expression":{"arguments":[{"id":2567,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"6705:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"6713:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2566,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2573,2608],"referencedDeclaration":2608,"src":"6684:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2565,"id":2571,"nodeType":"Return","src":"6677:84:13"}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"6397:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:13","nodeType":"FunctionDefinition","parameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"target","nameLocation":"6608:6:13","nodeType":"VariableDeclaration","scope":2573,"src":"6600:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2561,"mutability":"mutable","name":"data","nameLocation":"6629:4:13","nodeType":"VariableDeclaration","scope":2573,"src":"6616:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2560,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:13"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2573,"src":"6653:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2563,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:13"},"scope":2640,"src":"6570:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"7109:232:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2587,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"7138:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2586,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7127:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7127:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":2585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"ExpressionStatement","src":"7119:69:13"},{"assignments":[2593,2595],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"7205:7:13","nodeType":"VariableDeclaration","scope":2607,"src":"7200:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:13","nodeType":"VariableDeclaration","scope":2607,"src":"7214:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2594,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"id":2598,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7261:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2596,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"7241:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7248:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7241:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:13"},{"expression":{"arguments":[{"id":2602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7300:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2603,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"7309:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2604,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"7321:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2601,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"7283:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2584,"id":2606,"nodeType":"Return","src":"7276:58:13"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"6774:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:13","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"target","nameLocation":"7001:6:13","nodeType":"VariableDeclaration","scope":2608,"src":"6993:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"data","nameLocation":"7030:4:13","nodeType":"VariableDeclaration","scope":2608,"src":"7017:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2577,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:13","nodeType":"VariableDeclaration","scope":2608,"src":"7044:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2579,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:13"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"7095:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:13"},"scope":2640,"src":"6954:387:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2638,"nodeType":"Block","src":"7721:532:13","statements":[{"condition":{"id":2620,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7735:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2636,"nodeType":"Block","src":"7792:455:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2624,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7876:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7887:6:13","memberName":"length","nodeType":"MemberAccess","src":"7876:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2634,"nodeType":"Block","src":"8184:53:13","statements":[{"expression":{"arguments":[{"id":2631,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"8209:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2630,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8202:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8202:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2633,"nodeType":"ExpressionStatement","src":"8202:20:13"}]},"id":2635,"nodeType":"IfStatement","src":"7872:365:13","trueBody":{"id":2629,"nodeType":"Block","src":"7899:279:13","statements":[{"AST":{"nodeType":"YulBlock","src":"8019:145:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8041:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8070:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8064:5:13"},"nodeType":"YulFunctionCall","src":"8064:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8045:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8113:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8117:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:13"},"nodeType":"YulFunctionCall","src":"8109:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8130:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8102:6:13"},"nodeType":"YulFunctionCall","src":"8102:44:13"},"nodeType":"YulExpressionStatement","src":"8102:44:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2613,"isOffset":false,"isSlot":false,"src":"8070:10:13","valueSize":1},{"declaration":2613,"isOffset":false,"isSlot":false,"src":"8117:10:13","valueSize":1}],"id":2628,"nodeType":"InlineAssembly","src":"8010:154:13"}]}}]},"id":2637,"nodeType":"IfStatement","src":"7731:516:13","trueBody":{"id":2623,"nodeType":"Block","src":"7744:42:13","statements":[{"expression":{"id":2621,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7765:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2619,"id":2622,"nodeType":"Return","src":"7758:17:13"}]}}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"7347:209:13","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:13","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"success","nameLocation":"7601:7:13","nodeType":"VariableDeclaration","scope":2639,"src":"7596:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2610,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:13","nodeType":"VariableDeclaration","scope":2639,"src":"7618:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2612,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:13","nodeType":"VariableDeclaration","scope":2639,"src":"7651:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2614,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:13"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"7707:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2617,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:13"},"scope":2640,"src":"7561:692:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2641,"src":"194:8061:13","usedErrors":[]}],"src":"101:8155:13"}},"@openzeppelin/contracts/utils/Context.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2662]},"id":2663,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2662,"linearizedBaseContracts":[2662],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2651,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2648,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:14","memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2647,"id":2650,"nodeType":"Return","src":"712:17:14"}]},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2662,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2660,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:14","memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2656,"id":2659,"nodeType":"Return","src":"819:15:14"}]},"id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2661,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2654,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2662,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2663,"src":"608:235:14","usedErrors":[]}],"src":"86:758:14"}},"@openzeppelin/contracts/utils/Counters.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2736]},"id":2737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2664,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"112:311:15","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2736,"linearizedBaseContracts":[2736],"name":"Counters","nameLocation":"432:8:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2668,"members":[{"constant":false,"id":2667,"mutability":"mutable","name":"_value","nameLocation":"794:6:15","nodeType":"VariableDeclaration","scope":2668,"src":"786:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:15","nodeType":"StructDefinition","scope":2736,"src":"447:374:15","visibility":"public"},{"body":{"id":2679,"nodeType":"Block","src":"901:38:15","statements":[{"expression":{"expression":{"id":2676,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"918:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"918:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2675,"id":2678,"nodeType":"Return","src":"911:21:15"}]},"id":2680,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:15","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"counter","nameLocation":"860:7:15","nodeType":"VariableDeclaration","scope":2680,"src":"844:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"Counter","nameLocations":["844:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"844:7:15"},"referencedDeclaration":2668,"src":"844:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:15"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2680,"src":"892:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:15"},"scope":2736,"src":"827:112:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"998:70:15","statements":[{"id":2692,"nodeType":"UncheckedBlock","src":"1008:54:15","statements":[{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2686,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"1032:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"1032:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"1032:19:15"}]}]},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:15","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"counter","nameLocation":"980:7:15","nodeType":"VariableDeclaration","scope":2694,"src":"964:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2682,"nodeType":"UserDefinedTypeName","pathNode":{"id":2681,"name":"Counter","nameLocations":["964:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"964:7:15"},"referencedDeclaration":2668,"src":"964:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:15"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[],"src":"998:0:15"},"scope":2736,"src":"945:123:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2721,"nodeType":"Block","src":"1127:176:15","statements":[{"assignments":[2701],"declarations":[{"constant":false,"id":2701,"mutability":"mutable","name":"value","nameLocation":"1145:5:15","nodeType":"VariableDeclaration","scope":2721,"src":"1137:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2704,"initialValue":{"expression":{"id":2702,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1153:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"1153:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1185:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"ExpressionStatement","src":"1177:49:15"},{"id":2720,"nodeType":"UncheckedBlock","src":"1236:61:15","statements":[{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2712,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1260:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"1260:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1277:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2719,"nodeType":"ExpressionStatement","src":"1260:26:15"}]}]},"id":2722,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:15","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"counter","nameLocation":"1109:7:15","nodeType":"VariableDeclaration","scope":2722,"src":"1093:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2696,"nodeType":"UserDefinedTypeName","pathNode":{"id":2695,"name":"Counter","nameLocations":["1093:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"1093:7:15"},"referencedDeclaration":2668,"src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:15"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"1127:0:15"},"scope":2736,"src":"1074:229:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2734,"nodeType":"Block","src":"1358:35:15","statements":[{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2728,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"1368:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"1368:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2733,"nodeType":"ExpressionStatement","src":"1368:18:15"}]},"id":2735,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:15","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"counter","nameLocation":"1340:7:15","nodeType":"VariableDeclaration","scope":2735,"src":"1324:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2724,"nodeType":"UserDefinedTypeName","pathNode":{"id":2723,"name":"Counter","nameLocations":["1324:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"1324:7:15"},"referencedDeclaration":2668,"src":"1324:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:15"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[],"src":"1358:0:15"},"scope":2736,"src":"1309:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2737,"src":"424:971:15","usedErrors":[]}],"src":"87:1309:15"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2939]},"id":2940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2738,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"111:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":2939,"linearizedBaseContracts":[2939],"name":"Strings","nameLocation":"154:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2742,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"193:12:16","nodeType":"VariableDeclaration","scope":2939,"src":"168:58:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2740,"name":"bytes16","nodeType":"ElementaryTypeName","src":"168:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"208:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":2820,"nodeType":"Block","src":"399:632:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"601:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"601:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2756,"nodeType":"IfStatement","src":"597:51:16","trueBody":{"id":2755,"nodeType":"Block","src":"613:35:16","statements":[{"expression":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"634:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2749,"id":2754,"nodeType":"Return","src":"627:10:16"}]}},{"assignments":[2758],"declarations":[{"constant":false,"id":2758,"mutability":"mutable","name":"temp","nameLocation":"665:4:16","nodeType":"VariableDeclaration","scope":2820,"src":"657:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"672:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"657:20:16"},{"assignments":[2762],"declarations":[{"constant":false,"id":2762,"mutability":"mutable","name":"digits","nameLocation":"695:6:16","nodeType":"VariableDeclaration","scope":2820,"src":"687:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2763,"nodeType":"VariableDeclarationStatement","src":"687:14:16"},{"body":{"id":2774,"nodeType":"Block","src":"729:57:16","statements":[{"expression":{"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"743:8:16","subExpression":{"id":2767,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"743:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2769,"nodeType":"ExpressionStatement","src":"743:8:16"},{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2770,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"765:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"773:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"765:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ExpressionStatement","src":"765:10:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"718:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"718:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"nodeType":"WhileStatement","src":"711:75:16"},{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"buffer","nameLocation":"808:6:16","nodeType":"VariableDeclaration","scope":2820,"src":"795:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2776,"name":"bytes","nodeType":"ElementaryTypeName","src":"795:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2782,"initialValue":{"arguments":[{"id":2780,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"827:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"795:39:16"},{"body":{"id":2813,"nodeType":"Block","src":"863:131:16","statements":[{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2786,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"877:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"887:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"877:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"877:11:16"},{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2790,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"902:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2792,"indexExpression":{"id":2791,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"909:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"902:14:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"932:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"945:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"953:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"945:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"937:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:16","typeDescriptions":{}}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"937:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2795,"name":"uint8","nodeType":"ElementaryTypeName","src":"926:5:16","typeDescriptions":{}}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"919:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2793,"name":"bytes1","nodeType":"ElementaryTypeName","src":"919:6:16","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"919:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"902:56:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2808,"nodeType":"ExpressionStatement","src":"902:56:16"},{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"972:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"981:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"972:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"972:11:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"851:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"860:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"851:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"WhileStatement","src":"844:150:16"},{"expression":{"arguments":[{"id":2817,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"1017:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2815,"name":"string","nodeType":"ElementaryTypeName","src":"1010:6:16","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1010:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2749,"id":2819,"nodeType":"Return","src":"1003:21:16"}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"233:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"337:8:16","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"value","nameLocation":"354:5:16","nodeType":"VariableDeclaration","scope":2821,"src":"346:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:15:16"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"384:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2747,"name":"string","nodeType":"ElementaryTypeName","src":"384:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"383:15:16"},"scope":2939,"src":"328:703:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2861,"nodeType":"Block","src":"1210:255:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"1224:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1224:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"nodeType":"IfStatement","src":"1220:54:16","trueBody":{"id":2834,"nodeType":"Block","src":"1236:38:16","statements":[{"expression":{"hexValue":"30783030","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1257:6:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2828,"id":2833,"nodeType":"Return","src":"1250:13:16"}]}},{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"temp","nameLocation":"1291:4:16","nodeType":"VariableDeclaration","scope":2861,"src":"1283:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2839,"initialValue":{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"1298:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1283:20:16"},{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"length","nameLocation":"1321:6:16","nodeType":"VariableDeclaration","scope":2861,"src":"1313:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2843,"initialValue":{"hexValue":"30","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1330:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1313:18:16"},{"body":{"id":2854,"nodeType":"Block","src":"1359:57:16","statements":[{"expression":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1373:8:16","subExpression":{"id":2847,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1373:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2849,"nodeType":"ExpressionStatement","src":"1373:8:16"},{"expression":{"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2850,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1395:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1395:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2853,"nodeType":"ExpressionStatement","src":"1395:10:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1348:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1356:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1348:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"WhileStatement","src":"1341:75:16"},{"expression":{"arguments":[{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"1444:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2858,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1451:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2856,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2862,2938],"referencedDeclaration":2938,"src":"1432:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1432:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2828,"id":2860,"nodeType":"Return","src":"1425:33:16"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"1037:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2862,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1145:11:16","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"value","nameLocation":"1165:5:16","nodeType":"VariableDeclaration","scope":2862,"src":"1157:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:15:16"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2862,"src":"1195:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2826,"name":"string","nodeType":"ElementaryTypeName","src":"1195:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1194:15:16"},"scope":2939,"src":"1136:329:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2937,"nodeType":"Block","src":"1678:351:16","statements":[{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"buffer","nameLocation":"1701:6:16","nodeType":"VariableDeclaration","scope":2937,"src":"1688:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2872,"name":"bytes","nodeType":"ElementaryTypeName","src":"1688:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2882,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1720:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2877,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"1724:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1733:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1720:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1710:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2874,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1688:47:16"},{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2883,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1745:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2885,"indexExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1752:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1745:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1757:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1745:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2888,"nodeType":"ExpressionStatement","src":"1745:15:16"},{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2889,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1770:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2891,"indexExpression":{"hexValue":"31","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1770:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1782:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1770:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2894,"nodeType":"ExpressionStatement","src":"1770:15:16"},{"body":{"id":2923,"nodeType":"Block","src":"1840:87:16","statements":[{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2909,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1854:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2911,"indexExpression":{"id":2910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1861:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1854:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2912,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"1866:12:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2916,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1879:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1887:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1879:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1866:25:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1854:37:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2918,"nodeType":"ExpressionStatement","src":"1854:37:16"},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1905:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1905:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"1905:11:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1828:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1832:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1828:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2924,"initializationExpression":{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"i","nameLocation":"1808:1:16","nodeType":"VariableDeclaration","scope":2924,"src":"1800:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2902,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2898,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"1816:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1812:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1825:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1812:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1800:26:16"},"loopExpression":{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1835:3:16","subExpression":{"id":2906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1837:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"1835:3:16"},"nodeType":"ForStatement","src":"1795:132:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1944:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1953:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1944:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1956:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1936:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2931,"nodeType":"ExpressionStatement","src":"1936:55:16"},{"expression":{"arguments":[{"id":2934,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2015:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2932,"name":"string","nodeType":"ElementaryTypeName","src":"2008:6:16","typeDescriptions":{}}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2871,"id":2936,"nodeType":"Return","src":"2001:21:16"}]},"documentation":{"id":2863,"nodeType":"StructuredDocumentation","src":"1471:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1597:11:16","nodeType":"FunctionDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"value","nameLocation":"1617:5:16","nodeType":"VariableDeclaration","scope":2938,"src":"1609:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"length","nameLocation":"1632:6:16","nodeType":"VariableDeclaration","scope":2938,"src":"1624:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:31:16"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"1663:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2869,"name":"string","nodeType":"ElementaryTypeName","src":"1663:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1662:15:16"},"scope":2939,"src":"1588:441:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2940,"src":"146:1885:16","usedErrors":[]}],"src":"86:1946:16"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2963],"IERC165":[2975]},"id":2964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2941,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2964,"sourceUnit":2976,"src":"124:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2944,"name":"IERC165","nameLocations":["754:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"754:7:17"},"id":2945,"nodeType":"InheritanceSpecifier","src":"754:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"149:576:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2963,"linearizedBaseContracts":[2963,2975],"name":"ERC165","nameLocation":"744:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2974],"body":{"id":2961,"nodeType":"Block","src":"920:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"937:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2956,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2975_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2975_$","typeString":"type(contract IERC165)"}],"id":2955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2975","typeString":"type(contract IERC165)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2953,"id":2960,"nodeType":"Return","src":"930:47:17"}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"768:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:17","nodeType":"FunctionDefinition","overrides":{"id":2950,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:17"},"parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:17","nodeType":"VariableDeclaration","scope":2962,"src":"856:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2947,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:17"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"914:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2951,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:17"},"scope":2963,"src":"829:155:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2964,"src":"726:260:17","usedErrors":[]}],"src":"99:888:17"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2975]},"id":2976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2965,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2966,"nodeType":"StructuredDocumentation","src":"125:279:18","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2975,"linearizedBaseContracts":[2975],"name":"IERC165","nameLocation":"415:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"429:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2974,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:18","nodeType":"FunctionDefinition","parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:18","nodeType":"VariableDeclaration","scope":2974,"src":"801:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2968,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:18"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2974,"src":"844:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2971,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:18"},"scope":2975,"src":"774:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2976,"src":"405:447:18","usedErrors":[]}],"src":"100:753:18"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[3574]},"id":3575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2977,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"140:686:19","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."},"fullyImplemented":true,"id":3574,"linearizedBaseContracts":[3574],"name":"EnumerableSet","nameLocation":"835:13:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":2986,"members":[{"constant":false,"id":2981,"mutability":"mutable","name":"_values","nameLocation":"1359:7:19","nodeType":"VariableDeclaration","scope":2986,"src":"1349:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1349:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2980,"nodeType":"ArrayTypeName","src":"1349:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"_indexes","nameLocation":"1527:8:19","nodeType":"VariableDeclaration","scope":2986,"src":"1499:36:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2984,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1507:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1499:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1302:3:19","nodeType":"StructDefinition","scope":3574,"src":"1295:247:19","visibility":"public"},{"body":{"id":3027,"nodeType":"Block","src":"1781:335:19","statements":[{"condition":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1795:22:19","subExpression":{"arguments":[{"id":2998,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1806:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":2999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"1811:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2997,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"1796:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1796:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3025,"nodeType":"Block","src":"2073:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2094:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2996,"id":3024,"nodeType":"Return","src":"2087:12:19"}]},"id":3026,"nodeType":"IfStatement","src":"1791:319:19","trueBody":{"id":3022,"nodeType":"Block","src":"1819:248:19","statements":[{"expression":{"arguments":[{"id":3007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"1850:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3002,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1833:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1837:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"1833:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:4:19","memberName":"push","nodeType":"MemberAccess","src":"1833:16:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1833:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3009,"nodeType":"ExpressionStatement","src":"1833:23:19"},{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3010,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1991:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1995:8:19","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"1991:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3014,"indexExpression":{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"2004:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1991:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3015,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"2013:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2017:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"2013:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2025:6:19","memberName":"length","nodeType":"MemberAccess","src":"2013:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1991:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ExpressionStatement","src":"1991:40:19"},{"expression":{"hexValue":"74727565","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2052:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2996,"id":3021,"nodeType":"Return","src":"2045:11:19"}]}}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"1548:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"1721:4:19","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"set","nameLocation":"1738:3:19","nodeType":"VariableDeclaration","scope":3028,"src":"1726:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2989,"nodeType":"UserDefinedTypeName","pathNode":{"id":2988,"name":"Set","nameLocations":["1726:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"1726:3:19"},"referencedDeclaration":2986,"src":"1726:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"value","nameLocation":"1751:5:19","nodeType":"VariableDeclaration","scope":3028,"src":"1743:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1743:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:32:19"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"1775:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2994,"name":"bool","nodeType":"ElementaryTypeName","src":"1775:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1774:6:19"},"scope":3574,"src":"1712:404:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3111,"nodeType":"Block","src":"2356:1316:19","statements":[{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"valueIndex","nameLocation":"2474:10:19","nodeType":"VariableDeclaration","scope":3111,"src":"2466:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3045,"initialValue":{"baseExpression":{"expression":{"id":3041,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2487:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2491:8:19","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"2487:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3044,"indexExpression":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"2500:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2487:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2466:40:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"2521:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2535:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2521:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3109,"nodeType":"Block","src":"3629:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3650:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3038,"id":3108,"nodeType":"Return","src":"3643:12:19"}]},"id":3110,"nodeType":"IfStatement","src":"2517:1149:19","trueBody":{"id":3106,"nodeType":"Block","src":"2538:1085:19","statements":[{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"2898:13:19","nodeType":"VariableDeclaration","scope":3106,"src":"2890:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3054,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"2914:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2927:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2914:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2890:38:19"},{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"lastIndex","nameLocation":"2950:9:19","nodeType":"VariableDeclaration","scope":3106,"src":"2942:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3057,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2962:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2966:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"2962:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2974:6:19","memberName":"length","nodeType":"MemberAccess","src":"2962:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2962:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2942:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"3003:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3064,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"3016:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3003:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3090,"nodeType":"IfStatement","src":"2999:398:19","trueBody":{"id":3089,"nodeType":"Block","src":"3031:366:19","statements":[{"assignments":[3067],"declarations":[{"constant":false,"id":3067,"mutability":"mutable","name":"lastValue","nameLocation":"3057:9:19","nodeType":"VariableDeclaration","scope":3089,"src":"3049:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3049:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3072,"initialValue":{"baseExpression":{"expression":{"id":3068,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3069:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3073:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"3069:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3071,"indexExpression":{"id":3070,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"3081:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3069:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3049:42:19"},{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3073,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3191:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"3191:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3077,"indexExpression":{"id":3075,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"3203:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3191:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3078,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"3220:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:38:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3080,"nodeType":"ExpressionStatement","src":"3191:38:19"},{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3081,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3303:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3307:8:19","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"3303:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3085,"indexExpression":{"id":3083,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"3316:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3303:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3086,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"3329:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3303:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"3303:36:19"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3091,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3475:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3479:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"3475:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3487:3:19","memberName":"pop","nodeType":"MemberAccess","src":"3475:15:19","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3097,"nodeType":"ExpressionStatement","src":"3475:17:19"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3560:26:19","subExpression":{"baseExpression":{"expression":{"id":3098,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3567:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3571:8:19","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"3567:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3101,"indexExpression":{"id":3100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"3580:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3567:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"3560:26:19"},{"expression":{"hexValue":"74727565","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3608:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3038,"id":3105,"nodeType":"Return","src":"3601:11:19"}]}}]},"documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"2122:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2293:7:19","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"set","nameLocation":"2313:3:19","nodeType":"VariableDeclaration","scope":3112,"src":"2301:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3031,"nodeType":"UserDefinedTypeName","pathNode":{"id":3030,"name":"Set","nameLocations":["2301:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"2301:3:19"},"referencedDeclaration":2986,"src":"2301:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"value","nameLocation":"2326:5:19","nodeType":"VariableDeclaration","scope":3112,"src":"2318:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2318:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2300:32:19"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3112,"src":"2350:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"2350:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2349:6:19"},"scope":3574,"src":"2284:1388:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3130,"nodeType":"Block","src":"3832:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3123,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3849:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3853:8:19","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"3849:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3126,"indexExpression":{"id":3125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"3862:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3849:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3849:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3122,"id":3129,"nodeType":"Return","src":"3842:31:19"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"3678:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"3762:9:19","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"set","nameLocation":"3784:3:19","nodeType":"VariableDeclaration","scope":3131,"src":"3772:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3115,"nodeType":"UserDefinedTypeName","pathNode":{"id":3114,"name":"Set","nameLocations":["3772:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"3772:3:19"},"referencedDeclaration":2986,"src":"3772:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"value","nameLocation":"3797:5:19","nodeType":"VariableDeclaration","scope":3131,"src":"3789:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3789:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3771:32:19"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3131,"src":"3826:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3120,"name":"bool","nodeType":"ElementaryTypeName","src":"3826:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3825:6:19"},"scope":3574,"src":"3753:127:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3144,"nodeType":"Block","src":"4026:42:19","statements":[{"expression":{"expression":{"expression":{"id":3140,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"4043:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4047:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"4043:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4055:6:19","memberName":"length","nodeType":"MemberAccess","src":"4043:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3139,"id":3143,"nodeType":"Return","src":"4036:25:19"}]},"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"3886:70:19","text":" @dev Returns the number of values on the set. O(1)."},"id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"3970:7:19","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"set","nameLocation":"3990:3:19","nodeType":"VariableDeclaration","scope":3145,"src":"3978:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3134,"nodeType":"UserDefinedTypeName","pathNode":{"id":3133,"name":"Set","nameLocations":["3978:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"3978:3:19"},"referencedDeclaration":2986,"src":"3978:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"3977:17:19"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3145,"src":"4017:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4016:9:19"},"scope":3574,"src":"3961:107:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3161,"nodeType":"Block","src":"4486:42:19","statements":[{"expression":{"baseExpression":{"expression":{"id":3156,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"4503:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4507:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"4503:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3159,"indexExpression":{"id":3158,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"4515:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4503:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3155,"id":3160,"nodeType":"Return","src":"4496:25:19"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"4074:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3162,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4419:3:19","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"set","nameLocation":"4435:3:19","nodeType":"VariableDeclaration","scope":3162,"src":"4423:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3148,"nodeType":"UserDefinedTypeName","pathNode":{"id":3147,"name":"Set","nameLocations":["4423:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"4423:3:19"},"referencedDeclaration":2986,"src":"4423:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"index","nameLocation":"4448:5:19","nodeType":"VariableDeclaration","scope":3162,"src":"4440:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"4440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:32:19"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3162,"src":"4477:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4477:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4476:9:19"},"scope":3574,"src":"4410:118:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3175,"nodeType":"Block","src":"5142:35:19","statements":[{"expression":{"expression":{"id":3172,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5159:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5163:7:19","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"5159:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3171,"id":3174,"nodeType":"Return","src":"5152:18:19"}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"4534:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5077:7:19","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"set","nameLocation":"5097:3:19","nodeType":"VariableDeclaration","scope":3176,"src":"5085:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3165,"nodeType":"UserDefinedTypeName","pathNode":{"id":3164,"name":"Set","nameLocations":["5085:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"5085:3:19"},"referencedDeclaration":2986,"src":"5085:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5084:17:19"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"5124:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5124:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3169,"nodeType":"ArrayTypeName","src":"5124:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5123:18:19"},"scope":3574,"src":"5068:109:19","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3180,"members":[{"constant":false,"id":3179,"mutability":"mutable","name":"_inner","nameLocation":"5234:6:19","nodeType":"VariableDeclaration","scope":3180,"src":"5230:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3178,"nodeType":"UserDefinedTypeName","pathNode":{"id":3177,"name":"Set","nameLocations":["5230:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"5230:3:19"},"referencedDeclaration":2986,"src":"5230:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5209:10:19","nodeType":"StructDefinition","scope":3574,"src":"5202:45:19","visibility":"public"},{"body":{"id":3197,"nodeType":"Block","src":"5493:47:19","statements":[{"expression":{"arguments":[{"expression":{"id":3192,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"5515:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5519:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"5515:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3191,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"5510:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3190,"id":3196,"nodeType":"Return","src":"5503:30:19"}]},"documentation":{"id":3181,"nodeType":"StructuredDocumentation","src":"5253:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5426:3:19","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"set","nameLocation":"5449:3:19","nodeType":"VariableDeclaration","scope":3198,"src":"5430:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3183,"nodeType":"UserDefinedTypeName","pathNode":{"id":3182,"name":"Bytes32Set","nameLocations":["5430:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"5430:10:19"},"referencedDeclaration":3180,"src":"5430:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"value","nameLocation":"5462:5:19","nodeType":"VariableDeclaration","scope":3198,"src":"5454:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5454:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5429:39:19"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3198,"src":"5487:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3188,"name":"bool","nodeType":"ElementaryTypeName","src":"5487:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5486:6:19"},"scope":3574,"src":"5417:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"5787:50:19","statements":[{"expression":{"arguments":[{"expression":{"id":3210,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5812:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5816:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"5812:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"5824:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3209,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5804:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5804:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3208,"id":3214,"nodeType":"Return","src":"5797:33:19"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"5546:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"5717:6:19","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"set","nameLocation":"5743:3:19","nodeType":"VariableDeclaration","scope":3216,"src":"5724:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"Bytes32Set","nameLocations":["5724:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"5724:10:19"},"referencedDeclaration":3180,"src":"5724:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"value","nameLocation":"5756:5:19","nodeType":"VariableDeclaration","scope":3216,"src":"5748:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5748:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5723:39:19"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"5781:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3206,"name":"bool","nodeType":"ElementaryTypeName","src":"5781:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5780:6:19"},"scope":3574,"src":"5708:129:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"6004:52:19","statements":[{"expression":{"arguments":[{"expression":{"id":3228,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"6031:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6035:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"6031:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6043:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3227,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"6021:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3226,"id":3232,"nodeType":"Return","src":"6014:35:19"}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"5843:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"5927:8:19","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"set","nameLocation":"5955:3:19","nodeType":"VariableDeclaration","scope":3234,"src":"5936:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3219,"nodeType":"UserDefinedTypeName","pathNode":{"id":3218,"name":"Bytes32Set","nameLocations":["5936:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"5936:10:19"},"referencedDeclaration":3180,"src":"5936:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"value","nameLocation":"5968:5:19","nodeType":"VariableDeclaration","scope":3234,"src":"5960:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5960:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5935:39:19"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3234,"src":"5998:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3224,"name":"bool","nodeType":"ElementaryTypeName","src":"5998:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5997:6:19"},"scope":3574,"src":"5918:138:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3248,"nodeType":"Block","src":"6209:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":3244,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"6234:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6238:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"6234:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3243,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"6226:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3242,"id":3247,"nodeType":"Return","src":"6219:26:19"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"6062:70:19","text":" @dev Returns the number of values in the set. O(1)."},"id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6146:6:19","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"set","nameLocation":"6172:3:19","nodeType":"VariableDeclaration","scope":3249,"src":"6153:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3237,"nodeType":"UserDefinedTypeName","pathNode":{"id":3236,"name":"Bytes32Set","nameLocations":["6153:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"6153:10:19"},"referencedDeclaration":3180,"src":"6153:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6152:24:19"},"returnParameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3249,"src":"6200:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"6200:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6199:9:19"},"scope":3574,"src":"6137:115:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"6677:46:19","statements":[{"expression":{"arguments":[{"expression":{"id":3261,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"6698:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6702:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"6698:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3263,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"6710:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3260,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"6694:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6694:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3259,"id":3265,"nodeType":"Return","src":"6687:29:19"}]},"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"6258:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"6603:2:19","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"set","nameLocation":"6625:3:19","nodeType":"VariableDeclaration","scope":3267,"src":"6606:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3252,"nodeType":"UserDefinedTypeName","pathNode":{"id":3251,"name":"Bytes32Set","nameLocations":["6606:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"6606:10:19"},"referencedDeclaration":3180,"src":"6606:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"index","nameLocation":"6638:5:19","nodeType":"VariableDeclaration","scope":3267,"src":"6630:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"6630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6605:39:19"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"6668:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6668:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6667:9:19"},"scope":3574,"src":"6594:129:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"7344:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":3278,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"7369:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7373:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"7369:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3277,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"7361:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7361:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3276,"id":3281,"nodeType":"Return","src":"7354:26:19"}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"6729:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7272:6:19","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"set","nameLocation":"7298:3:19","nodeType":"VariableDeclaration","scope":3283,"src":"7279:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3270,"nodeType":"UserDefinedTypeName","pathNode":{"id":3269,"name":"Bytes32Set","nameLocations":["7279:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"7279:10:19"},"referencedDeclaration":3180,"src":"7279:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3180_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7278:24:19"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3283,"src":"7326:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7326:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3274,"nodeType":"ArrayTypeName","src":"7326:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7325:18:19"},"scope":3574,"src":"7263:124:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3287,"members":[{"constant":false,"id":3286,"mutability":"mutable","name":"_inner","nameLocation":"7444:6:19","nodeType":"VariableDeclaration","scope":3287,"src":"7440:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3285,"nodeType":"UserDefinedTypeName","pathNode":{"id":3284,"name":"Set","nameLocations":["7440:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"7440:3:19"},"referencedDeclaration":2986,"src":"7440:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7419:10:19","nodeType":"StructDefinition","scope":3574,"src":"7412:45:19","visibility":"public"},{"body":{"id":3313,"nodeType":"Block","src":"7703:74:19","statements":[{"expression":{"arguments":[{"expression":{"id":3299,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"7725:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7729:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"7725:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"7761:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7753:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3305,"name":"uint160","nodeType":"ElementaryTypeName","src":"7753:7:19","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7753:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7745:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"7745:7:19","typeDescriptions":{}}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7745:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7737:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7737:7:19","typeDescriptions":{}}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7737:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3298,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"7720:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7720:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3297,"id":3312,"nodeType":"Return","src":"7713:57:19"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"7463:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3314,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"7636:3:19","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"set","nameLocation":"7659:3:19","nodeType":"VariableDeclaration","scope":3314,"src":"7640:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"AddressSet","nameLocations":["7640:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"7640:10:19"},"referencedDeclaration":3287,"src":"7640:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"7672:5:19","nodeType":"VariableDeclaration","scope":3314,"src":"7664:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"7664:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7639:39:19"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3314,"src":"7697:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3295,"name":"bool","nodeType":"ElementaryTypeName","src":"7697:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7696:6:19"},"scope":3574,"src":"7627:150:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3340,"nodeType":"Block","src":"8024:77:19","statements":[{"expression":{"arguments":[{"expression":{"id":3326,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8049:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8053:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"8049:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"8085:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8077:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3332,"name":"uint160","nodeType":"ElementaryTypeName","src":"8077:7:19","typeDescriptions":{}}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8077:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"8069:7:19","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8061:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8061:7:19","typeDescriptions":{}}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3325,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"8041:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8041:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3324,"id":3339,"nodeType":"Return","src":"8034:60:19"}]},"documentation":{"id":3315,"nodeType":"StructuredDocumentation","src":"7783:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3341,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"7954:6:19","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"set","nameLocation":"7980:3:19","nodeType":"VariableDeclaration","scope":3341,"src":"7961:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3317,"nodeType":"UserDefinedTypeName","pathNode":{"id":3316,"name":"AddressSet","nameLocations":["7961:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"7961:10:19"},"referencedDeclaration":3287,"src":"7961:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"value","nameLocation":"7993:5:19","nodeType":"VariableDeclaration","scope":3341,"src":"7985:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3319,"name":"address","nodeType":"ElementaryTypeName","src":"7985:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7960:39:19"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3341,"src":"8018:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3322,"name":"bool","nodeType":"ElementaryTypeName","src":"8018:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8017:6:19"},"scope":3574,"src":"7945:156:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3367,"nodeType":"Block","src":"8268:79:19","statements":[{"expression":{"arguments":[{"expression":{"id":3353,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"8295:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8299:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"8295:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"8331:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8323:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3359,"name":"uint160","nodeType":"ElementaryTypeName","src":"8323:7:19","typeDescriptions":{}}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8315:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"8315:7:19","typeDescriptions":{}}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8315:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8307:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8307:7:19","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8307:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3352,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"8285:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8285:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3351,"id":3366,"nodeType":"Return","src":"8278:62:19"}]},"documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"8107:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8191:8:19","nodeType":"FunctionDefinition","parameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"set","nameLocation":"8219:3:19","nodeType":"VariableDeclaration","scope":3368,"src":"8200:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3344,"nodeType":"UserDefinedTypeName","pathNode":{"id":3343,"name":"AddressSet","nameLocations":["8200:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"8200:10:19"},"referencedDeclaration":3287,"src":"8200:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"value","nameLocation":"8232:5:19","nodeType":"VariableDeclaration","scope":3368,"src":"8224:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3346,"name":"address","nodeType":"ElementaryTypeName","src":"8224:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8199:39:19"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"8262:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3349,"name":"bool","nodeType":"ElementaryTypeName","src":"8262:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8261:6:19"},"scope":3574,"src":"8182:165:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"8500:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":3378,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8525:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8529:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"8525:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3377,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"8517:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3376,"id":3381,"nodeType":"Return","src":"8510:26:19"}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"8353:70:19","text":" @dev Returns the number of values in the set. O(1)."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8437:6:19","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"set","nameLocation":"8463:3:19","nodeType":"VariableDeclaration","scope":3383,"src":"8444:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3371,"nodeType":"UserDefinedTypeName","pathNode":{"id":3370,"name":"AddressSet","nameLocations":["8444:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"8444:10:19"},"referencedDeclaration":3287,"src":"8444:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"8443:24:19"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"8491:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"8491:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8490:9:19"},"scope":3574,"src":"8428:115:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"8968:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3401,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"9013:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9017:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"9013:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3403,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"9025:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3400,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"9009:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9009:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"9001:7:19","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3396,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:19","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3394,"name":"address","nodeType":"ElementaryTypeName","src":"8985:7:19","typeDescriptions":{}}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3393,"id":3408,"nodeType":"Return","src":"8978:56:19"}]},"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"8549:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8894:2:19","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"set","nameLocation":"8916:3:19","nodeType":"VariableDeclaration","scope":3410,"src":"8897:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3386,"nodeType":"UserDefinedTypeName","pathNode":{"id":3385,"name":"AddressSet","nameLocations":["8897:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"8897:10:19"},"referencedDeclaration":3287,"src":"8897:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"index","nameLocation":"8929:5:19","nodeType":"VariableDeclaration","scope":3410,"src":"8921:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"8921:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8896:39:19"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"8959:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3391,"name":"address","nodeType":"ElementaryTypeName","src":"8959:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8958:9:19"},"scope":3574,"src":"8885:156:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3439,"nodeType":"Block","src":"9662:176:19","statements":[{"assignments":[3424],"declarations":[{"constant":false,"id":3424,"mutability":"mutable","name":"store","nameLocation":"9689:5:19","nodeType":"VariableDeclaration","scope":3439,"src":"9672:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9672:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3423,"nodeType":"ArrayTypeName","src":"9672:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3429,"initialValue":{"arguments":[{"expression":{"id":3426,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"9705:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9709:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"9705:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3425,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"9697:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9672:44:19"},{"assignments":[3434],"declarations":[{"constant":false,"id":3434,"mutability":"mutable","name":"result","nameLocation":"9743:6:19","nodeType":"VariableDeclaration","scope":3439,"src":"9726:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3433,"nodeType":"ArrayTypeName","src":"9726:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3435,"nodeType":"VariableDeclarationStatement","src":"9726:23:19"},{"AST":{"nodeType":"YulBlock","src":"9769:39:19","statements":[{"nodeType":"YulAssignment","src":"9783:15:19","value":{"name":"store","nodeType":"YulIdentifier","src":"9793:5:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9783:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3434,"isOffset":false,"isSlot":false,"src":"9783:6:19","valueSize":1},{"declaration":3424,"isOffset":false,"isSlot":false,"src":"9793:5:19","valueSize":1}],"id":3436,"nodeType":"InlineAssembly","src":"9760:48:19"},{"expression":{"id":3437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"9825:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3419,"id":3438,"nodeType":"Return","src":"9818:13:19"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"9047:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3440,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"9590:6:19","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"set","nameLocation":"9616:3:19","nodeType":"VariableDeclaration","scope":3440,"src":"9597:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"AddressSet","nameLocations":["9597:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3287,"src":"9597:10:19"},"referencedDeclaration":3287,"src":"9597:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3287_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9596:24:19"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3440,"src":"9644:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"9644:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3417,"nodeType":"ArrayTypeName","src":"9644:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9643:18:19"},"scope":3574,"src":"9581:257:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3444,"members":[{"constant":false,"id":3443,"mutability":"mutable","name":"_inner","nameLocation":"9889:6:19","nodeType":"VariableDeclaration","scope":3444,"src":"9885:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3442,"nodeType":"UserDefinedTypeName","pathNode":{"id":3441,"name":"Set","nameLocations":["9885:3:19"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"9885:3:19"},"referencedDeclaration":2986,"src":"9885:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"9867:7:19","nodeType":"StructDefinition","scope":3574,"src":"9860:42:19","visibility":"public"},{"body":{"id":3464,"nodeType":"Block","src":"10145:56:19","statements":[{"expression":{"arguments":[{"expression":{"id":3456,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"10167:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10171:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"10167:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"10187:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10179:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10179:7:19","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10179:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3455,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10162:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10162:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3454,"id":3463,"nodeType":"Return","src":"10155:39:19"}]},"documentation":{"id":3445,"nodeType":"StructuredDocumentation","src":"9908:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10081:3:19","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"set","nameLocation":"10101:3:19","nodeType":"VariableDeclaration","scope":3465,"src":"10085:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3447,"nodeType":"UserDefinedTypeName","pathNode":{"id":3446,"name":"UintSet","nameLocations":["10085:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3444,"src":"10085:7:19"},"referencedDeclaration":3444,"src":"10085:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"value","nameLocation":"10114:5:19","nodeType":"VariableDeclaration","scope":3465,"src":"10106:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"10106:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10084:36:19"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3465,"src":"10139:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3452,"name":"bool","nodeType":"ElementaryTypeName","src":"10139:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10138:6:19"},"scope":3574,"src":"10072:129:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"10445:59:19","statements":[{"expression":{"arguments":[{"expression":{"id":3477,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10470:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10474:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"10470:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10490:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10482:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10482:7:19","typeDescriptions":{}}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10482:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3476,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"10462:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10462:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3475,"id":3484,"nodeType":"Return","src":"10455:42:19"}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"10207:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10378:6:19","nodeType":"FunctionDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"set","nameLocation":"10401:3:19","nodeType":"VariableDeclaration","scope":3486,"src":"10385:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3468,"nodeType":"UserDefinedTypeName","pathNode":{"id":3467,"name":"UintSet","nameLocations":["10385:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3444,"src":"10385:7:19"},"referencedDeclaration":3444,"src":"10385:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"value","nameLocation":"10414:5:19","nodeType":"VariableDeclaration","scope":3486,"src":"10406:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"10406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10384:36:19"},"returnParameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"10439:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3473,"name":"bool","nodeType":"ElementaryTypeName","src":"10439:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10438:6:19"},"scope":3574,"src":"10369:135:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"10668:61:19","statements":[{"expression":{"arguments":[{"expression":{"id":3498,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"10695:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10699:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"10695:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"10715:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10707:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10707:7:19","typeDescriptions":{}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3497,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"10685:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10685:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3496,"id":3505,"nodeType":"Return","src":"10678:44:19"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"10510:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10594:8:19","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"set","nameLocation":"10619:3:19","nodeType":"VariableDeclaration","scope":3507,"src":"10603:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3489,"nodeType":"UserDefinedTypeName","pathNode":{"id":3488,"name":"UintSet","nameLocations":["10603:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3444,"src":"10603:7:19"},"referencedDeclaration":3444,"src":"10603:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"value","nameLocation":"10632:5:19","nodeType":"VariableDeclaration","scope":3507,"src":"10624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"10624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10602:36:19"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"10662:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3494,"name":"bool","nodeType":"ElementaryTypeName","src":"10662:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10661:6:19"},"scope":3574,"src":"10585:144:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3521,"nodeType":"Block","src":"10879:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":3517,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"10904:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10908:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"10904:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3516,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"10896:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3515,"id":3520,"nodeType":"Return","src":"10889:26:19"}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"10735:70:19","text":" @dev Returns the number of values on the set. O(1)."},"id":3522,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10819:6:19","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"set","nameLocation":"10842:3:19","nodeType":"VariableDeclaration","scope":3522,"src":"10826:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3510,"nodeType":"UserDefinedTypeName","pathNode":{"id":3509,"name":"UintSet","nameLocations":["10826:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3444,"src":"10826:7:19"},"referencedDeclaration":3444,"src":"10826:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"10825:21:19"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3522,"src":"10870:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"10870:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10869:9:19"},"scope":3574,"src":"10810:112:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3542,"nodeType":"Block","src":"11344:55:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3536,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"11373:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11377:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"11373:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3538,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"11385:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3535,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"11369:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11369:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11361:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"11361:7:19","typeDescriptions":{}}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11361:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3532,"id":3541,"nodeType":"Return","src":"11354:38:19"}]},"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"10928:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3543,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11273:2:19","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"set","nameLocation":"11292:3:19","nodeType":"VariableDeclaration","scope":3543,"src":"11276:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3525,"nodeType":"UserDefinedTypeName","pathNode":{"id":3524,"name":"UintSet","nameLocations":["11276:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3444,"src":"11276:7:19"},"referencedDeclaration":3444,"src":"11276:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"index","nameLocation":"11305:5:19","nodeType":"VariableDeclaration","scope":3543,"src":"11297:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"11297:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:36:19"},"returnParameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3543,"src":"11335:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:9:19"},"scope":3574,"src":"11264:135:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"12017:176:19","statements":[{"assignments":[3557],"declarations":[{"constant":false,"id":3557,"mutability":"mutable","name":"store","nameLocation":"12044:5:19","nodeType":"VariableDeclaration","scope":3572,"src":"12027:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12027:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3556,"nodeType":"ArrayTypeName","src":"12027:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3562,"initialValue":{"arguments":[{"expression":{"id":3559,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"12060:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12064:6:19","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"12060:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2986_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3558,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12052:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2986_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12052:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12027:44:19"},{"assignments":[3567],"declarations":[{"constant":false,"id":3567,"mutability":"mutable","name":"result","nameLocation":"12098:6:19","nodeType":"VariableDeclaration","scope":3572,"src":"12081:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"12081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ArrayTypeName","src":"12081:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3568,"nodeType":"VariableDeclarationStatement","src":"12081:23:19"},{"AST":{"nodeType":"YulBlock","src":"12124:39:19","statements":[{"nodeType":"YulAssignment","src":"12138:15:19","value":{"name":"store","nodeType":"YulIdentifier","src":"12148:5:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12138:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3567,"isOffset":false,"isSlot":false,"src":"12138:6:19","valueSize":1},{"declaration":3557,"isOffset":false,"isSlot":false,"src":"12148:5:19","valueSize":1}],"id":3569,"nodeType":"InlineAssembly","src":"12115:48:19"},{"expression":{"id":3570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"12180:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3552,"id":3571,"nodeType":"Return","src":"12173:13:19"}]},"documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"11405:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11948:6:19","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"set","nameLocation":"11971:3:19","nodeType":"VariableDeclaration","scope":3573,"src":"11955:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3546,"nodeType":"UserDefinedTypeName","pathNode":{"id":3545,"name":"UintSet","nameLocations":["11955:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3444,"src":"11955:7:19"},"referencedDeclaration":3444,"src":"11955:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3444_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11954:21:19"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"11999:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"11999:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ArrayTypeName","src":"11999:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11998:18:19"},"scope":3574,"src":"11939:254:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3575,"src":"827:11368:19","usedErrors":[]}],"src":"115:12081:19"}},"contracts/Item.sol":{"id":20,"ast":{"absolutePath":"contracts/Item.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Address":[2640],"Context":[2662],"Counters":[2736],"ERC165":[2963],"ERC721":[1815],"ERC721Enumerable":[2287],"EnumerableSet":[3574],"Hero":[3773],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2975],"IERC20":[725],"IERC721":[1931],"IERC721Enumerable":[2318],"IERC721Metadata":[2345],"IERC721Receiver":[1949],"IItem":[3592],"Ownable":[647],"SafeERC20":[949],"Strings":[2939]},"id":3774,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3576,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"38:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":3577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3774,"sourceUnit":2663,"src":"64:51:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":3578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3774,"sourceUnit":2737,"src":"116:52:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3774,"sourceUnit":648,"src":"169:52:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":3580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3774,"sourceUnit":2288,"src":"222:78:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3774,"sourceUnit":950,"src":"301:65:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":3582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3774,"sourceUnit":445,"src":"367:68:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IItem","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3592,"linearizedBaseContracts":[3592],"name":"IItem","nameLocation":"447:5:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":3591,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"466:4:20","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"to","nameLocation":"479:2:20","nodeType":"VariableDeclaration","scope":3591,"src":"471:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3583,"name":"address","nodeType":"ElementaryTypeName","src":"471:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3586,"mutability":"mutable","name":"hero_type","nameLocation":"488:9:20","nodeType":"VariableDeclaration","scope":3591,"src":"483:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint","nodeType":"ElementaryTypeName","src":"483:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:28:20"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3591,"src":"516:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"515:9:20"},"scope":3592,"src":"457:68:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3774,"src":"437:90:20","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3593,"name":"ERC721Enumerable","nameLocations":["546:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"546:16:20"},"id":3594,"nodeType":"InheritanceSpecifier","src":"546:16:20"},{"baseName":{"id":3595,"name":"Ownable","nameLocations":["564:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":647,"src":"564:7:20"},"id":3596,"nodeType":"InheritanceSpecifier","src":"564:7:20"},{"baseName":{"id":3597,"name":"AccessControlEnumerable","nameLocations":["573:23:20"],"nodeType":"IdentifierPath","referencedDeclaration":444,"src":"573:23:20"},"id":3598,"nodeType":"InheritanceSpecifier","src":"573:23:20"},{"baseName":{"id":3599,"name":"IItem","nameLocations":["598:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":3592,"src":"598:5:20"},"id":3600,"nodeType":"InheritanceSpecifier","src":"598:5:20"}],"canonicalName":"Hero","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3773,"linearizedBaseContracts":[3773,3592,444,319,647,2287,2318,1815,2345,1931,2963,2975,542,517,2662],"name":"Hero","nameLocation":"538:4:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3604,"libraryName":{"id":3601,"name":"Counters","nameLocations":["613:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":2736,"src":"613:8:20"},"nodeType":"UsingForDirective","src":"607:36:20","typeName":{"id":3603,"nodeType":"UserDefinedTypeName","pathNode":{"id":3602,"name":"Counters.Counter","nameLocations":["626:8:20","635:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"626:16:20"},"referencedDeclaration":2668,"src":"626:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":3607,"mutability":"mutable","name":"_tokenIdTracker","nameLocation":"675:15:20","nodeType":"VariableDeclaration","scope":3773,"src":"650:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3606,"nodeType":"UserDefinedTypeName","pathNode":{"id":3605,"name":"Counters.Counter","nameLocations":["650:8:20","659:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"650:16:20"},"referencedDeclaration":2668,"src":"650:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":3609,"mutability":"mutable","name":"_url","nameLocation":"709:4:20","nodeType":"VariableDeclaration","scope":3773,"src":"694:19:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3608,"name":"string","nodeType":"ElementaryTypeName","src":"694:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"functionSelector":"d5391393","id":3614,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"741:11:20","nodeType":"VariableDeclaration","scope":3773,"src":"717:62:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"717:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"765:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":3611,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"755:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"anonymous":false,"eventSelector":"4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f","id":3622,"name":"Mint","nameLocation":"790:4:20","nodeType":"EventDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"803:2:20","nodeType":"VariableDeclaration","scope":3622,"src":"795:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3615,"name":"address","nodeType":"ElementaryTypeName","src":"795:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3618,"indexed":false,"mutability":"mutable","name":"hero_type","nameLocation":"815:9:20","nodeType":"VariableDeclaration","scope":3622,"src":"807:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3620,"indexed":false,"mutability":"mutable","name":"token_id","nameLocation":"834:8:20","nodeType":"VariableDeclaration","scope":3622,"src":"826:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"794:49:20"},"src":"784:60:20"},{"body":{"id":3635,"nodeType":"Block","src":"889:55:20","statements":[{"expression":{"arguments":[{"id":3630,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"906:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3631,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"926:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3629,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"895:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"ExpressionStatement","src":"895:44:20"}]},"id":3636,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"537469636b7920436174","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"869:12:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_41036bee4cf5a30bf9d2619d6fc090f6a032ad05a35a62da1f4315b33a7e2709","typeString":"literal_string \"Sticky Cat\""},"value":"Sticky Cat"},{"hexValue":"436174","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"883:5:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d25f1cb268e7212783aa2330ac94ff078b1182c7819977d67e23a42dd800b873","typeString":"literal_string \"Cat\""},"value":"Cat"}],"id":3627,"kind":"baseConstructorSpecifier","modifierName":{"id":3624,"name":"ERC721","nameLocations":["862:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":1815,"src":"862:6:20"},"nodeType":"ModifierInvocation","src":"862:27:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[],"src":"859:2:20"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"889:0:20"},"scope":3773,"src":"848:96:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1166],"body":{"id":3644,"nodeType":"Block","src":"1025:22:20","statements":[{"expression":{"id":3642,"name":"_url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"1038:4:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3641,"id":3643,"nodeType":"Return","src":"1031:11:20"}]},"id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"957:8:20","nodeType":"FunctionDefinition","overrides":{"id":3638,"nodeType":"OverrideSpecifier","overrides":[],"src":"982:8:20"},"parameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"965:2:20"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"_newBaseURI","nameLocation":"1013:11:20","nodeType":"VariableDeclaration","scope":3645,"src":"999:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3639,"name":"string","nodeType":"ElementaryTypeName","src":"999:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"998:27:20"},"scope":3773,"src":"948:99:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3591],"body":{"id":3694,"nodeType":"Block","src":"1130:274:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3656,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1144:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1144:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3658,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1155:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1144:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3662,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"1179:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3663,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1192:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3661,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1171:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1171:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1144:61:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f74206d696e746572","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_95b21e474a5c976824aa828db1fb9384df90438dd72f32a68ee4942939c50fff","typeString":"literal_string \"Caller is not minter\""},"value":"Caller is not minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95b21e474a5c976824aa828db1fb9384df90438dd72f32a68ee4942939c50fff","typeString":"literal_string \"Caller is not minter\""}],"id":3655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1136:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1136:94:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3669,"nodeType":"ExpressionStatement","src":"1136:94:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3670,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1236:15:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage","typeString":"struct Counters.Counter storage ref"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1252:9:20","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2694,"src":"1236:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2668_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2668_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1236:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3674,"nodeType":"ExpressionStatement","src":"1236:27:20"},{"assignments":[3676],"declarations":[{"constant":false,"id":3676,"mutability":"mutable","name":"token_id","nameLocation":"1277:8:20","nodeType":"VariableDeclaration","scope":3694,"src":"1269:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3677,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1288:15:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2668_storage","typeString":"struct Counters.Counter storage ref"}},"id":3678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1304:7:20","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"1288:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2668_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2668_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1269:44:20"},{"expression":{"arguments":[{"id":3682,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"1325:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3683,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"1329:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3681,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"1319:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1319:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3685,"nodeType":"ExpressionStatement","src":"1319:19:20"},{"eventCall":{"arguments":[{"id":3687,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"1354:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3688,"name":"hero_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"1358:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3689,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"1369:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"1349:4:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3691,"nodeType":"EmitStatement","src":"1344:34:20"},{"expression":{"id":3692,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"1391:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3654,"id":3693,"nodeType":"Return","src":"1384:15:20"}]},"functionSelector":"40c10f19","id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1060:4:20","nodeType":"FunctionDefinition","overrides":{"id":3651,"nodeType":"OverrideSpecifier","overrides":[],"src":"1105:8:20"},"parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"to","nameLocation":"1073:2:20","nodeType":"VariableDeclaration","scope":3695,"src":"1065:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"hero_type","nameLocation":"1085:9:20","nodeType":"VariableDeclaration","scope":3695,"src":"1077:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1064:31:20"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3695,"src":"1122:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1121:9:20"},"scope":3773,"src":"1051:353:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3743,"nodeType":"Block","src":"1493:203:20","statements":[{"assignments":[3704],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"balance","nameLocation":"1507:7:20","nodeType":"VariableDeclaration","scope":3743,"src":"1499:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"arguments":[{"id":3706,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"1527:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3705,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"1517:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1517:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1499:34:20"},{"assignments":[3713],"declarations":[{"constant":false,"id":3713,"mutability":"mutable","name":"ids","nameLocation":"1556:3:20","nodeType":"VariableDeclaration","scope":3743,"src":"1539:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3712,"nodeType":"ArrayTypeName","src":"1539:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3719,"initialValue":{"arguments":[{"id":3717,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1576:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1562:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ArrayTypeName","src":"1566:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1562:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1539:45:20"},{"body":{"id":3739,"nodeType":"Block","src":"1622:53:20","statements":[{"expression":{"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3730,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"1630:3:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3732,"indexExpression":{"id":3731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1634:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1630:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"1659:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1666:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3733,"name":"tokenOfOwnerByIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1639:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1630:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ExpressionStatement","src":"1630:38:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1607:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3725,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1609:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1607:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3740,"initializationExpression":{"assignments":[3721],"declarations":[{"constant":false,"id":3721,"mutability":"mutable","name":"i","nameLocation":"1600:1:20","nodeType":"VariableDeclaration","scope":3740,"src":"1595:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint","nodeType":"ElementaryTypeName","src":"1595:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3723,"initialValue":{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1595:10:20"},"loopExpression":{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1618:3:20","subExpression":{"id":3727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1618:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"1618:3:20"},"nodeType":"ForStatement","src":"1591:84:20"},{"expression":{"id":3741,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"1688:3:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3702,"id":3742,"nodeType":"Return","src":"1681:10:20"}]},"functionSelector":"e2a4fad3","id":3744,"implemented":true,"kind":"function","modifiers":[],"name":"listTokenIds","nameLocation":"1417:12:20","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"owner","nameLocation":"1438:5:20","nodeType":"VariableDeclaration","scope":3744,"src":"1430:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1429:15:20"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"tokenIds","nameLocation":"1484:8:20","nodeType":"VariableDeclaration","scope":3744,"src":"1467:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3700,"nodeType":"ArrayTypeName","src":"1467:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1466:27:20"},"scope":3773,"src":"1408:288:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3755,"nodeType":"Block","src":"1759:25:20","statements":[{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3751,"name":"_url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"1765:4:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3752,"name":"_newUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"1772:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1765:14:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3754,"nodeType":"ExpressionStatement","src":"1765:14:20"}]},"functionSelector":"c7c3268b","id":3756,"implemented":true,"kind":"function","modifiers":[{"id":3749,"kind":"modifierInvocation","modifierName":{"id":3748,"name":"onlyOwner","nameLocations":["1750:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"1750:9:20"},"nodeType":"ModifierInvocation","src":"1750:9:20"}],"name":"setBaseUrl","nameLocation":"1709:10:20","nodeType":"FunctionDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"_newUrl","nameLocation":"1734:7:20","nodeType":"VariableDeclaration","scope":3756,"src":"1720:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3745,"name":"string","nodeType":"ElementaryTypeName","src":"1720:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1719:23:20"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[],"src":"1759:0:20"},"scope":3773,"src":"1700:84:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[360,1999],"body":{"id":3771,"nodeType":"Block","src":"1921:54:20","statements":[{"expression":{"arguments":[{"id":3768,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"1958:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3766,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1934:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Hero_$3773_$","typeString":"type(contract super Hero)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1940:17:20","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":360,"src":"1934:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3765,"id":3770,"nodeType":"Return","src":"1927:43:20"}]},"functionSelector":"01ffc9a7","id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1797:17:20","nodeType":"FunctionDefinition","overrides":{"id":3762,"nodeType":"OverrideSpecifier","overrides":[{"id":3760,"name":"ERC721Enumerable","nameLocations":["1864:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"1864:16:20"},{"id":3761,"name":"AccessControlEnumerable","nameLocations":["1882:23:20"],"nodeType":"IdentifierPath","referencedDeclaration":444,"src":"1882:23:20"}],"src":"1855:51:20"},"parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"interfaceId","nameLocation":"1822:11:20","nodeType":"VariableDeclaration","scope":3772,"src":"1815:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3757,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1815:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1814:20:20"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3772,"src":"1916:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3763,"name":"bool","nodeType":"ElementaryTypeName","src":"1916:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1915:6:20"},"scope":3773,"src":"1788:187:20","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3774,"src":"529:1448:20","usedErrors":[]}],"src":"38:1940:20"}}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"irOptimized":""}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"irOptimized":""}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000a3b89e4fe2bcb73e12f8eed96eee104e1135cd27975069ed8b84c03c94d4445f"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 6:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_949\" {\n    code {\n        {\n            /// @src 6:645:3915  \"library SafeERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeERC20_949_deployed\")\n            codecopy(_1, dataoffset(\"SafeERC20_949_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 6:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_949_deployed\" {\n        code {\n            {\n                /// @src 6:645:3915  \"library SafeERC20 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220754a0a8583b9c92b346a670918b73db6b048e70adc8e9c8988c7e37752bb1b8464736f6c63430008130033\"\n    }\n}\n","hash":"01000007e2bddd6380aecd48a02ba63f48251dac3f7f1b5f272bb5367517682b","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721.sol:ERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.le\t@.BB0_77\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_83\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_148\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_25[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd\tr8, r0, r3\n\tadd.eq\tr7, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_186\n\tadd\tr0, r0, r8\n.BB0_168:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_168\n.BB0_186:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_170\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_170:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tjump\t@.BB0_171\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r4, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r4, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_187\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_187:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r8\n\tadd\tr8, r4, r4\n\tsub!\tr4, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr8, r2, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[3]\n\tadd\tr10, r0, stack-[6]\n\tadd\tr9, r0, stack-[4]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r1\n.BB0_28:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[7], r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand.eq\t127, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[5], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[5], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[5], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[6], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[5], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_69:\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_73\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_104\n.BB0_77:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_134\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_145\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_143\n.BB0_73:\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_20[0], r2, r1\n\tjump.eq\t@.BB0_127\n\tsub.s!\t@CPI0_21[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, stack-[5]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tnear_call\tr0, @finalize_allocation_7805, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tst.1\tr4, r0\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n.BB0_171:\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_172\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_25[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_105\n.BB0_148:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_25[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub!\tr4, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r1\n\tjump.ne\t@.BB0_154\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_85:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_53[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_54[0], r1, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_55[0], r1, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_56[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_91:\n\tand\t1, r2, r1\n\tjump\t@.BB0_92\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_95\n.BB0_31:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_131:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_104:\n\tand\t@CPI0_25[0], r1, r1\n.BB0_105:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_134:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_139\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t42, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_106:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_114\n.BB0_111:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_50[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_51[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB0_112\n.BB0_127:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_c868, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_172:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_177\n\tadd\t100, r2, r1\n\tadd\t@CPI0_29[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t47, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tjump\t@.BB0_113\n.BB0_95:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_98\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_96\n.BB0_145:\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_143\n\tadd\t@CPI0_38[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_147:\n\tsload\tr3, r4\n\tadd\t160, r2, r5\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_147\n.BB0_143:\n\tjump\t@.BB0_96\n.BB0_139:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_92:\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_177:\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_179\n.BB0_98:\n\tst.1\t0, r0\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_96\n\tadd\t@CPI0_52[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_100:\n\tsload\tr3, r4\n\tadd\t160, r2, r5\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_100\n.BB0_96:\n\tadd\t32, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n.BB0_179:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_154:\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[7]\n\tadd\tr4, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_35[0], r0, r4\n\tadd\tstack-[5], r0, r5\n.BB0_125:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_114:\n\tsub!\tstack-[7], r1, r2\n\tjump.ne\t@.BB0_116\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_49[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_112:\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_113:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_116:\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB0_117\n.BB0_121:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_45[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r5\n\tjump.eq\t@.BB0_111\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_47[0], r0, r4\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tjump\t@.BB0_125\n.BB0_117:\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI0_25[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_121\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_43[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t56, r0, r3\n\tjump\t@.BB0_112\n.BB0_46:\n\tsub!\tstack-[5], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[5], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tsstore\tr0, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand.eq\t127, r2, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[6], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[6], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump\t@.BB0_56\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n.BB0_56:\n\tor\tr1, r2, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_7805:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin5:\n\tand\t@CPI5_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_ownerOf:\n.func_begin6:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tjump.eq\t@.BB6_3\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI6_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_getApproved:\n.func_begin7:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI7_2[0], r1, r1\n\tjump.eq\t@.BB7_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI7_2[0], r1, r1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI7_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI7_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nrequire_helper_stringliteral_c868:\n.func_begin8:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_1\n\tret\n.BB8_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t49, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_3[0], r0, r2\n\tsub.s!\t@CPI8_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_safeTransferFrom:\n.func_begin9:\n\tnop\tstack+=[10]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[8]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_3\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_8\n\tcontext.caller\tr2\n\tand\t@CPI9_2[0], r2, stack-[3]\n\tsub!\tstack-[3], r1, r2\n\tjump.eq\t@.BB9_19\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB9_19\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_15\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tjump.ne\t@.BB9_18\n.BB9_19:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, stack-[6]\n\tjump.eq\t@.BB9_8\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub!\tstack-[6], r1, r1\n\tjump.ne\t@.BB9_22\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI9_2[0], r1, stack-[5]\n\tjump.eq\t@.BB9_24\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI9_11[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r5\n\tjump.eq\t@.BB9_8\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI9_13[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[8], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_1\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB9_31\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB9_31\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI9_11[0], r2, r2\n\tadd\tstack-[5], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI9_14[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[8], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI9_15[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_16[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_39\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_17[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tadd\t164, r10, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB9_43\n\tadd\tr0, r0, r3\n.BB9_42:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB9_42\n.BB9_43:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_45\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[10]\n\tjump\t@.BB9_50\n.BB9_39:\n\tcontext.sp\tr1\n\tsub\tstack-[7], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB9_67\n.BB9_45:\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tsub.s!\t@CPI9_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI9_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI9_0[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB9_69\n\tadd\tr0, r0, r7\n.BB9_47:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_47\n.BB9_69:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB9_49\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB9_49:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_55\n.BB9_50:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_19[0], r1, r4\n\tjump.gt\t@.BB9_52\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_52\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB9_1\n\tld.1\tr10, r1\n\tand\t@CPI9_20[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB9_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[7], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI9_17[0], r1, r1\n\tjump.ne\t@.BB9_65\n.BB9_67:\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB9_5\n.BB9_31:\n\tadd\t@CPI9_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB9_32\n.BB9_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_27[0], r0, r3\n.BB9_4:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB9_5\n.BB9_22:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB9_5\n.BB9_24:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB9_5:\n\tst.1\tr2, r3\n\tadd\t@CPI9_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_55:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB9_62\n\tadd\t63, r3, r2\n\tand\t@CPI9_18[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI9_19[0], r4, r6\n\tjump.gt\t@.BB9_52\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB9_52\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_68\n\tadd\tr0, r0, r5\n.BB9_60:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_60\n.BB9_68:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB9_62\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_62:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB9_63\n.BB9_65:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI9_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB9_64:\n\tsub.s!\t@CPI9_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_52:\n\tadd\t@CPI9_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB9_32:\n\tst.1\t4, r1\n\tadd\t@CPI9_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_15:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_8[0], r0, r3\n\tjump\t@.BB9_4\n.BB9_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t49, r0, r3\n\tjump\t@.BB9_5\n.BB9_63:\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB9_64\n.func_end9:\n\nabi_encode_stringliteral_1e76:\n.func_begin10:\n\tadd\t96, r1, r2\n\tadd\t@CPI10_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI10_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end10:\n\nfun_isApprovedOrOwner:\n.func_begin11:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tjump.eq\t@.BB11_3\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r2\n\tjump.eq\t@.BB11_8\n\tadd\t1, r0, r1\n\tadd\tstack-[1], r0, r3\n\tand\t@CPI11_2[0], r3, stack-[1]\n\tsub!\tstack-[1], r2, r3\n\tjump.eq\t@.BB11_18\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB11_18\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tjump.eq\t@.BB11_15\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub.s!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB11_18:\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_9[0], r0, r3\n.BB11_4:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB11_5\n.BB11_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n.BB11_5:\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_15:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tjump\t@.BB11_4\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, stack-[4]\n\tjump.eq\t@.BB12_3\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI12_2[0], r1, r1\n\tsub!\tstack-[4], r1, r1\n\tjump.ne\t@.BB12_6\n\tadd\tstack-[1], r0, r1\n\tand!\t@CPI12_2[0], r1, stack-[2]\n\tjump.eq\t@.BB12_8\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI12_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r5\n\tjump.eq\t@.BB12_3\n\tadd\t@CPI12_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI12_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_1\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB12_15\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB12_15\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI12_7[0], r2, r2\n\tadd\tstack-[2], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI12_10[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB12_4\n.BB12_15:\n\tadd\t@CPI12_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB12_4\n.BB12_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB12_4:\n\tst.1\tr2, r3\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__sha3:\n.func_begin13:\n\tadd\t@CPI13_0[0], r0, r3\n\tsub.s!\t@CPI13_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI13_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tret\n.BB13_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\n__farcall:\n.func_begin14:\n.tmp0:\n\tfar_call\tr1, r2, @.BB14_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n__staticcall:\n.func_begin15:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB15_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_1:\nCPI6_0:\nCPI7_0:\nCPI8_3:\nCPI9_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI9_18:\n\t.cell 8589934560\nCPI0_4:\nCPI4_0:\nCPI9_19:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 1666326813\nCPI0_9:\n\t.cell 2720838756\nCPI0_10:\n\t.cell 3363526364\nCPI0_11:\n\t.cell 3363526365\nCPI0_12:\n\t.cell 3917867461\nCPI0_13:\n\t.cell 2720838757\nCPI0_14:\n\t.cell 3096268766\nCPI0_15:\n\t.cell 1666326814\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 157198258\nCPI0_19:\n\t.cell 157198259\nCPI0_20:\n\t.cell 599290589\nCPI0_21:\n\t.cell 1115958798\nCPI0_22:\n\t.cell 33540519\nCPI0_23:\n\t.cell 117300739\nCPI0_24:\n\t.cell 135795452\nCPI0_25:\nCPI2_1:\nCPI5_0:\nCPI6_2:\nCPI7_2:\nCPI9_2:\nCPI11_2:\nCPI12_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_26:\n\t.cell 2535301200456458802993406410752\nCPI0_27:\nCPI5_2:\nCPI6_1:\nCPI7_1:\nCPI9_1:\nCPI11_1:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_28:\n\t.cell 18446744073709551583\nCPI0_29:\n\t.cell 49933695950216730624942714053792707997088209755498743882059886291794889015296\nCPI0_30:\n\t.cell 31354931916645406359169511643666282793569254592747070802456731253464641859183\nCPI0_31:\nCPI6_5:\nCPI7_5:\nCPI8_2:\nCPI9_5:\nCPI11_5:\nCPI12_5:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_32:\nCPI6_6:\nCPI7_6:\nCPI8_4:\nCPI9_6:\nCPI11_6:\nCPI12_6:\n\t.cell 10458117451882892562347801444352\nCPI0_33:\nCPI3_1:\nCPI4_1:\nCPI9_21:\nCPI12_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_34:\nCPI3_2:\nCPI4_2:\nCPI9_22:\nCPI12_12:\n\t.cell 2852213850513516153367582212096\nCPI0_35:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_36:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_37:\n\t.cell 7922816253787617000789217640448\nCPI0_38:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_39:\n\t.cell 2535301202817642044428229017600\nCPI0_40:\n\t.cell 31354931916645375393785295258521846456833152225125956258475365221073749572197\nCPI0_41:\n\t.cell 51760008244253243555339834505836909231457839317500661056268430958216697872384\nCPI0_42:\n\t.cell 10458117454244075803782624051200\nCPI0_43:\n\t.cell 49933652571133945240646269341346773441232908056919510700755594923042897133568\nCPI0_44:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459595639\nCPI0_45:\nCPI9_11:\nCPI12_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_46:\nCPI9_12:\nCPI12_8:\nCPI13_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_47:\nCPI9_13:\nCPI12_9:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_48:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_49:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_50:\nCPI6_3:\nCPI9_25:\nCPI11_7:\nCPI12_15:\n\t.cell 45878752361592109720253219027881625235748152392964139204686589122341653970944\nCPI0_51:\nCPI6_4:\nCPI9_26:\nCPI11_8:\nCPI12_16:\n\t.cell 31354931916645375394106162266546829686708297189091808258728121542906766521204\nCPI0_52:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_53:\nCPI9_20:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_54:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_55:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_56:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI3_0:\n\t.cell 18446744073709551584\nCPI7_3:\nCPI9_7:\nCPI11_3:\n\t.cell 47696839850855449933311899423999770536344418734008620142241006894201008291840\nCPI7_4:\nCPI9_8:\nCPI11_4:\n\t.cell 31354931916645375393762213565866891195335176431693669511405079535027810624888\nCPI8_0:\nCPI9_3:\n\t.cell 54020282311764692190021849552246905499923117250381298616038159743020431310848\nCPI8_1:\nCPI9_4:\n\t.cell 31354931916645375394228278154242914900316590054129571697333944605927305125999\nCPI9_9:\nCPI12_3:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI9_10:\nCPI12_4:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI9_14:\nCPI12_10:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI9_15:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI9_16:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI9_17:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI9_23:\nCPI12_13:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI9_24:\nCPI12_14:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI9_27:\nCPI11_9:\n\t.cell 31354931916645375394105488451352269979389710144108907708483216252301827007864\nCPI10_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI10_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 7:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 12:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 14:\"@openzeppelin/contracts/utils/Context.sol\", 17:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 18:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\"\nobject \"ERC721_1815\" {\n    code {\n        {\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721_1815\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _5 := sload(/** @src -1:-1:-1 */ _4)\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let length := /** @src -1:-1:-1 */ _4\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _4\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _4\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _4\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _9 := sload(_6)\n            let length_1 := /** @src -1:-1:-1 */ _4\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            length_1 := shr(_6, _9)\n            let outOfPlaceEncoding_1 := and(_9, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _10 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _10) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _4\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ _4\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_6, add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _4\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(_6, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"ERC721_1815_deployed\")\n            codecopy(_11, dataoffset(\"ERC721_1815_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 13:\"@openzeppelin/contracts/utils/Address.sol\", 14:\"@openzeppelin/contracts/utils/Context.sol\", 16:\"@openzeppelin/contracts/utils/Strings.sol\", 17:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\"\n    object \"ERC721_1815_deployed\" {\n        code {\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom_1311()\n                    }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                /// @src 7:1707:1747  \"interfaceId == type(IERC721).interfaceId\"\n                let _1 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ value, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff))\n                /// @src 7:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr := /** @src 7:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_1, /** @src 7:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                /// @src 7:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 7:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_1, /** @src 7:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                }\n                /// @src 7:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 17:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 17:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr_1)))\n                return(memPos, 32)\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(_1)\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, shl(5, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let ret := fun_getApproved(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function abi_decode_address_5350() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5350()\n                let value1 := calldataload(36)\n                /// @src 7:3634:3657  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(value1)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 7:3675:3686  \"to != owner\"\n                let _2 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:3675:3686  \"to != owner\" */ expr, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if /** @src 7:3675:3686  \"to != owner\" */ eq(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:3675:3686  \"to != owner\" */ value0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 7:3675:3686  \"to != owner\" */ _2)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC721: approval to current owne\")\n                    mstore(add(memPtr, 100), \"r\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:3756:3818  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                let expr_1 := /** @src 7:3756:3777  \"_msgSender() == owner\" */ eq(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:3756:3777  \"_msgSender() == owner\" */ _2)\n                /// @src 7:3756:3818  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 7:4623:4658  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 7:4623:4648  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_5352(/** @src 7:3781:3818  \"isApprovedForAll(owner, _msgSender())\" */ expr), /** @src 14:719:729  \"msg.sender\" */ caller()))\n                }\n                /// @src 7:3735:3900  \"require(...\"\n                require_helper_stringliteral_6d83(expr_1)\n                /// @src 7:3924:3931  \"tokenId\"\n                fun_approve(value0, value1)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                /// @src 7:4908:5011  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\")\"\n                require_helper_stringliteral_c868(/** @src 7:4916:4957  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:4916:4957  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                /// @src 7:5042:5049  \"tokenId\"\n                fun_transfer(param, param_1, param_2)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                return(0, 0)\n            }\n            function external_fun_safeTransferFrom_1311()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                let memPtr := mload(64)\n                finalize_allocation_7805(memPtr)\n                mstore(memPtr, 0)\n                /// @src 7:5256:5295  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                fun_safeTransferFrom(param, param_1, param_2, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ memPtr)\n                return(0, 0)\n            }\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let ret := fun_ownerOf(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := and(abi_decode_address_5350(), sub(shl(160, 1), 1))\n                if /** @src 7:2028:2047  \"owner != address(0)\" */ iszero(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC721: balance query for the ze\")\n                    mstore(add(memPtr, 100), \"ro address\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                mstore(32, /** @src 7:2111:2120  \"_balances\" */ 0x03)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40))\n                let memPos := mload(0x40)\n                return(memPos, sub(abi_encode_uint256(memPos, _2), memPos))\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                /// @src 7:2738:2745  \"_symbol\"\n                let _2 := 0x01\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let slotValue := sload(/** @src 7:2738:2745  \"_symbol\" */ _2)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let length := _1\n                length := shr(/** @src 7:2738:2745  \"_symbol\" */ _2, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ slotValue)\n                let outOfPlaceEncoding := and(slotValue, /** @src 7:2738:2745  \"_symbol\" */ _2)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, shl(5, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_5358()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 7:2738:2745  \"_symbol\" */ _2)\n                    }\n                    /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5350()\n                let value := calldataload(36)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := and(/** @src 7:11616:11633  \"owner != operator\" */ value0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                if /** @src 7:11616:11633  \"owner != operator\" */ eq(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"ERC721: approve to caller\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 14:719:729  \"msg.sender\" */ caller())\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(32, /** @src 7:11673:11691  \"_operatorApprovals\" */ 0x05)\n                /// @src 7:11673:11719  \"_operatorApprovals[owner][operator] = approved\"\n                update_storage_value_offsett_bool_to_bool(/** @src 7:11673:11708  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 64), /** @src 7:11673:11708  \"_operatorApprovals[owner][operator]\" */ value0), /** @src 7:11673:11719  \"_operatorApprovals[owner][operator] = approved\" */ value)\n                /// @src 7:11734:11775  \"ApprovalForAll(owner, operator, approved)\"\n                let _2 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                /// @src 7:11734:11775  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_2, sub(abi_encode_bool(_2, value), _2), 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:11734:11775  \"ApprovalForAll(owner, operator, approved)\" */ _1)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_7805(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_7808(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function external_fun_safeTransferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5350()\n                let value1 := abi_decode_address()\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := calldataload(add(4, offset))\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                fun_safeTransferFrom(value0, value1, calldataload(68), memPtr)\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := calldataload(4)\n                if iszero(/** @src 7:2924:2940  \"_exists(tokenId)\" */ fun_exists(value0))\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 47)\n                    mstore(add(memPtr, 68), \"ERC721Metadata: URI query for no\")\n                    mstore(add(memPtr, 100), \"nexistent token\")\n                    revert(memPtr, 132)\n                }\n                let converted := allocate_memory_array_string()\n                /// @src 7:3054:3079  \"bytes(baseURI).length > 0\"\n                let expr := iszero(iszero(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(/** @src 7:3054:3068  \"bytes(baseURI)\" */ converted)))\n                /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                let expr_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                switch expr\n                case 0 {\n                    expr_mpos := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ allocate_memory_array_string()\n                }\n                default /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                {\n                    /// @src 7:3115:3133  \"tokenId.toString()\"\n                    let expr_mpos_1 := fun_toString(value0)\n                    /// @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\"\n                    let expr_mpos_2 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    /// @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\"\n                    let _1 := sub(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ abi_encode_string_memory_ptr(/** @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\" */ expr_mpos_1, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ abi_encode_string_memory_ptr(/** @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\" */ converted, add(expr_mpos_2, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 32))), /** @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\" */ expr_mpos_2)\n                    mstore(expr_mpos_2, add(_1, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ not(31)))\n                    /// @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\"\n                    finalize_allocation(expr_mpos_2, _1)\n                    /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                    expr_mpos := expr_mpos_2\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, expr_mpos), memPos))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5350()\n                let value1 := abi_decode_address()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 7:4623:4641  \"_operatorApprovals\" */ 0x05)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value := and(sload(/** @src 7:4623:4658  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_5352(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:4623:4641  \"_operatorApprovals\" */ 0x05)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_5375(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:10880:10889  \"_balances\" */ 0x03)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 7:10938:10945  \"_owners\" */ 0x02)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 1095 @src 7:2191:2426  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:2298:2305  \"_owners\" */ 0x02)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                if /** @src 7:2332:2351  \"owner != address(0)\" */ iszero(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ cleaned)\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC721: owner query for nonexist\")\n                    mstore(add(memPtr, 100), \"ent token\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:2407:2419  \"return owner\"\n                var := cleaned\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 0)\n                data := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n            }\n            function array_dataslot_string_storage_5358() -> data\n            {\n                mstore(0, /** @src 7:2738:2745  \"_symbol\" */ 0x01)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                data := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n            }\n            function allocate_memory_array_string() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_7805(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            function require_helper_stringliteral_6d83(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 56)\n                    mstore(add(memPtr, 68), \"ERC721: approve caller is not ow\")\n                    mstore(add(memPtr, 100), \"ner nor approved for all\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1230 @src 7:4000:4217  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 7:4103:4119  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"ERC721: approved query for nonex\")\n                    mstore(add(memPtr, 100), \"istent token\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:4186:4201  \"_tokenApprovals\" */ 0x04)\n                /// @src 7:4179:4210  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function extract_from_storage_value_offsett_bool(slot_value) -> value\n            {\n                value := and(slot_value, 0xff)\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            function require_helper_stringliteral_c868(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 49)\n                    mstore(add(memPtr, 68), \"ERC721: transfer caller is not o\")\n                    mstore(add(memPtr, 100), \"wner nor approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1341 @src 7:5368:5688  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_1320_mpos)\n            {\n                /// @src 7:5529:5632  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\")\"\n                require_helper_stringliteral_c868(/** @src 7:5537:5578  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:5537:5578  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 7:6721:6728  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 7:6747:6795  \"_checkOnERC721Received(from, to, tokenId, _data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_1320_mpos))\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1388 @src 7:7160:7285  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:7248:7255  \"_owners\" */ 0x02)\n                /// @src 7:7241:7278  \"return _owners[tokenId] != address(0)\"\n                var := /** @src 7:7248:7278  \"_owners[tokenId] != address(0)\" */ iszero(iszero(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1429 @src 7:7443:7787  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 7:7560:7576  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"ERC721: operator query for nonex\")\n                    mstore(add(memPtr, 100), \"istent token\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:7651:7674  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 7:7692:7708  \"spender == owner\"\n                let _2 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:7692:7708  \"spender == owner\" */ var_spender, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 7:7692:7744  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr_1 := /** @src 7:7692:7708  \"spender == owner\" */ eq(_2, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:7692:7708  \"spender == owner\" */ expr, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1))\n                /// @src 7:7692:7744  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(/** @src 7:4623:4658  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:4623:4648  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_5352(/** @src 7:7712:7744  \"isApprovedForAll(owner, spender)\" */ expr), var_spender)), /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0xff)\n                }\n                /// @src 7:7692:7779  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_2 := expr_1\n                if iszero(expr_1)\n                {\n                    expr_2 := /** @src 7:7748:7779  \"getApproved(tokenId) == spender\" */ eq(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:7748:7768  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 7:7748:7779  \"getApproved(tokenId) == spender\" */ _2)\n                }\n                /// @src 7:7684:7780  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_2\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function require_helper_stringliteral_455f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x) -> diff\n            {\n                diff := add(x, not(0))\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function checked_add_uint256_5378(x) -> sum\n            {\n                sum := add(x, /** @src 7:10899:10900  \"1\" */ 0x01)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256(y) -> sum\n            {\n                sum := add(/** @src 16:932:934  \"48\" */ 0x30, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ y)\n                if gt(/** @src 16:932:934  \"48\" */ 0x30, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sum) { panic_error_0x11() }\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1674 @src 7:10453:11058  \"function _transfer(...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 7:10580:10603  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 7:10580:10611  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if iszero(/** @src 7:10580:10611  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:10580:10611  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), _2))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 7:10671:10687  \"to != address(0)\" */ var_to, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 7:10663:10728  \"require(to != address(0), \\\"ERC721: transfer to the zero address\\\")\"\n                require_helper_stringliteral_455f(/** @src 7:10671:10687  \"to != address(0)\" */ iszero(iszero(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)))\n                /// @src 7:10861:10868  \"tokenId\"\n                fun_approve_5374(var_tokenId)\n                /// @src 7:10880:10895  \"_balances[from]\"\n                let _4 := mapping_index_access_mapping_address_uint256_of_address_5375(var_from)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                sstore(_4, /** @src 7:10880:10900  \"_balances[from] -= 1\" */ checked_sub_uint256(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sload(/** @src 7:10880:10900  \"_balances[from] -= 1\" */ _4)))\n                /// @src 7:10910:10923  \"_balances[to]\"\n                let _5 := mapping_index_access_mapping_address_uint256_of_address_5375(var_to)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                sstore(_5, /** @src 7:10910:10928  \"_balances[to] += 1\" */ checked_add_uint256_5378(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sload(/** @src 7:10910:10928  \"_balances[to] += 1\" */ _5)))\n                /// @src 7:10938:10959  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 7:10938:10954  \"_owners[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256(var_tokenId), /** @src 7:10938:10959  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 7:10975:11002  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 7:10685:10686  \"0\" */ 0x00, 0x00, /** @src 7:10975:11002  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 1698 @src 7:11169:11340  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve_5374(var_tokenId)\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 7:11243:11258  \"_tokenApprovals\" */ 0x04)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := keccak256(0, 0x40)\n                sstore(_1, and(sload(_1), shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0, 0, /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:11296:11319  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1)), 0, /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @ast-id 1698 @src 7:11169:11340  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve(var_to, var_tokenId)\n            {\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:11243:11258  \"_tokenApprovals\" */ 0x04)\n                /// @src 7:11243:11272  \"_tokenApprovals[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40), /** @src 7:11243:11272  \"_tokenApprovals[tokenId] = to\" */ var_to)\n                /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 7:11296:11319  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src -1:-1:-1 */ 0, 0, /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_to, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 1792 @src 7:12335:13113  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 7:12485:12489  \"bool\"\n                var := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 7:12501:13107  \"if (to.isContract()) {...\"\n                switch /** @src 13:1465:1488  \"account.code.length > 0\" */ iszero(iszero(/** @src 13:1465:1484  \"account.code.length\" */ extcodesize(/** @src 7:12505:12520  \"to.isContract()\" */ var_to)))\n                case /** @src 7:12501:13107  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 7:13085:13096  \"return true\"\n                    var := /** @src 7:13092:13096  \"true\" */ 0x01\n                    /// @src 7:13085:13096  \"return true\"\n                    leave\n                }\n                default /// @src 7:12501:13107  \"if (to.isContract()) {...\"\n                {\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    let _1 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    let _2 := shl(225, 0x0a85bd01)\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    mstore(_1, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    let trySuccessCondition := call(gas(), /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:12540:12559  \"IERC721Receiver(to)\" */ var_to, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1)), 0, /** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, 4), /** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ var_from, var_tokenId, var_data_mpos), _1), _1, 32)\n                    let expr := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    if trySuccessCondition\n                    {\n                        let _3 := 32\n                        if gt(_3, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        expr := abi_decode_bytes4_fromMemory(_1, add(_1, _3))\n                    }\n                    /// @src 7:12536:13055  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 7:12655:12713  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 7:12662:12713  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 7:12662:12713  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff)), _2)\n                        /// @src 7:12655:12713  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 7:12536:13055  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 7:12729:13055  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 7:12779:12792  \"reason.length\"\n                        let expr_1 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(/** @src 7:12779:12792  \"reason.length\" */ var_reason_mpos)\n                        /// @src 7:12775:13041  \"if (reason.length == 0) {...\"\n                        switch /** @src 7:12779:12797  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 7:12775:13041  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 7:12928:13023  \"assembly {...\"\n                            revert(add(/** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ 32, /** @src 7:12928:13023  \"assembly {...\" */ var_reason_mpos), expr_1)\n                        }\n                        default /// @src 7:12775:13041  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _4 := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                            /// @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_4, /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(229, 4594637))\n                            /// @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_4, sub(abi_encode_stringliteral_1e76(add(_4, /** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ 4)), /** @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _4))\n                        }\n                    }\n                }\n            }\n            /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function allocate_and_zero_memory_array_bytes(length) -> memPtr\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_bytes(length), not(31)))\n            }\n            function convert_uint8_to_bytes1(value) -> converted\n            {\n                converted := and(shl(248, value), shl(248, 255))\n            }\n            function memory_array_index_access_bytes(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, index), 32)\n            }\n            /// @ast-id 2821 @src 16:328:1031  \"function toString(uint256 value) internal pure returns (string memory) {...\"\n            function fun_toString(var_value) -> var_mpos\n            {\n                /// @src 16:597:648  \"if (value == 0) {...\"\n                if /** @src 16:601:611  \"value == 0\" */ iszero(var_value)\n                /// @src 16:597:648  \"if (value == 0) {...\"\n                {\n                    /// @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation_7808(memPtr)\n                    mstore(memPtr, 1)\n                    mstore(add(memPtr, 32), \"0\")\n                    /// @src 16:627:637  \"return \\\"0\\\"\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 16:657:677  \"uint256 temp = value\"\n                let var_temp := var_value\n                /// @src 16:687:701  \"uint256 digits\"\n                let var_digits := /** @src 16:610:611  \"0\" */ 0x00\n                /// @src 16:687:701  \"uint256 digits\"\n                let var_digits_1 := /** @src 16:610:611  \"0\" */ var_digits\n                /// @src 16:711:786  \"while (temp != 0) {...\"\n                for { }\n                /** @src 16:718:727  \"temp != 0\" */ var_temp\n                /// @src 16:711:786  \"while (temp != 0) {...\"\n                { }\n                {\n                    /// @src 16:743:751  \"digits++\"\n                    var_digits_1 := increment_uint256(var_digits_1)\n                    /// @src 16:765:775  \"temp /= 10\"\n                    var_temp := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ div(/** @src 16:765:775  \"temp /= 10\" */ var_temp, /** @src 16:773:775  \"10\" */ 0x0a)\n                }\n                /// @src 16:795:834  \"bytes memory buffer = new bytes(digits)\"\n                let var_buffer_mpos := /** @src 16:817:834  \"new bytes(digits)\" */ allocate_and_zero_memory_array_bytes(var_digits_1)\n                /// @src 16:844:994  \"while (value != 0) {...\"\n                for { }\n                /** @src 16:851:861  \"value != 0\" */ var_value\n                /// @src 16:844:994  \"while (value != 0) {...\"\n                { }\n                {\n                    /// @src 16:877:888  \"digits -= 1\"\n                    let expr := checked_sub_uint256(var_digits_1)\n                    let var_digits_2 := expr\n                    var_digits_1 := expr\n                    /// @src 16:773:775  \"10\"\n                    let _1 := 0x0a\n                    /// @src 16:902:958  \"buffer[digits] = bytes1(uint8(48 + uint256(value % 10)))\"\n                    mstore8(memory_array_index_access_bytes(var_buffer_mpos, var_digits_2), byte(/** @src 16:610:611  \"0\" */ var_digits, /** @src 16:919:958  \"bytes1(uint8(48 + uint256(value % 10)))\" */ convert_uint8_to_bytes1(/** @src 16:926:957  \"uint8(48 + uint256(value % 10))\" */ extract_from_storage_value_offsett_bool(/** @src 16:932:956  \"48 + uint256(value % 10)\" */ checked_add_uint256(/** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mod(/** @src 16:945:955  \"value % 10\" */ var_value, /** @src 16:773:775  \"10\" */ _1))))))\n                    /// @src 16:972:983  \"value /= 10\"\n                    var_value := /** @src 7:628:14286  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ div(/** @src 16:972:983  \"value /= 10\" */ var_value, /** @src 16:773:775  \"10\" */ _1)\n                }\n                /// @src 16:1003:1024  \"return string(buffer)\"\n                var_mpos := var_buffer_mpos\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220bb93ebd7b43277a80f7bc3d855e4ea72024c8ebc46edc4120ba41b12a664241564736f6c63430008130033\"\n    }\n}\n","hash":"010002795bfe4ad6cf52046b3cb32abda56610075bba4eadb67e900b1ee8711e","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b32c35b6d6896b3f5ecf85cc6d76a6344ca51ad9b346f3bc8b54a461832b62f1"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 13:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_2640\" {\n    code {\n        {\n            /// @src 13:194:8255  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_2640_deployed\")\n            codecopy(_1, dataoffset(\"Address_2640_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 13:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_2640_deployed\" {\n        code {\n            {\n                /// @src 13:194:8255  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205fea98a6896d5312bfd3e391a6b635382551a827e2cc643d5a19d079a8a0c8c864736f6c63430008130033\"\n    }\n}\n","hash":"01000007e5eb7171ff529b511c2b9efd2eec9ed8abd2605882904809f954dfcc","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000c3f50ce1dc47a16e1fe313484e92923067f356e942a33b89e6ec594b033fe8e8"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/Counters.sol\"\nobject \"Counters_2736\" {\n    code {\n        {\n            /// @src 15:424:1395  \"library Counters {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Counters_2736_deployed\")\n            codecopy(_1, dataoffset(\"Counters_2736_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/Counters.sol\"\n    object \"Counters_2736_deployed\" {\n        code {\n            {\n                /// @src 15:424:1395  \"library Counters {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cab39cea073d65e364de7a418ddaa504434d669d8d42686a6991fe9f78a9617c64736f6c63430008130033\"\n    }\n}\n","hash":"010000077dcbf26488b7f905b7b49e3f2c601e6f8e76032a7bcd8ad85eba56a3","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000082a76d341793b6045d7310078ce54d5e0485650049f57e6c646d637876d4ff2a"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 16:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2939\" {\n    code {\n        {\n            /// @src 16:146:2031  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2939_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2939_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 16:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2939_deployed\" {\n        code {\n            {\n                /// @src 16:146:2031  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f7cb9d9d09526ed1c47830092643bf0776c5d57132ef2465b423cc9e2c2c662464736f6c63430008130033\"\n    }\n}\n","hash":"010000071dc5d355dda21eff3ffb00f9e40daebdc39dfc2dba48bd9af6b0df04","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"EnumerableSet.sol:EnumerableSet\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000062e715cb7160267b4f6443b2b67a1181e674d00c6c8ee3578d257c0ab26eae08"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 19:\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\"\nobject \"EnumerableSet_3574\" {\n    code {\n        {\n            /// @src 19:827:12195  \"library EnumerableSet {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"EnumerableSet_3574_deployed\")\n            codecopy(_1, dataoffset(\"EnumerableSet_3574_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 19:\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\"\n    object \"EnumerableSet_3574_deployed\" {\n        code {\n            {\n                /// @src 19:827:12195  \"library EnumerableSet {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220be56fd6eb602d0c8ae995e50606c5add2258890c8de43f8a2cd891488fe8619e64736f6c63430008130033\"\n    }\n}\n","hash":"01000007684625d402e5fe42be123162655428fc6aeae9a0566b525475cf4317","factoryDependencies":{}}},"contracts/Item.sol":{"Hero":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"hero_type","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"token_id","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"listTokenIds","outputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"hero_type","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_newUrl","type":"string"}],"name":"setBaseUrl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hero_type\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token_id\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"listTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"hero_type\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newUrl\",\"type\":\"string\"}],\"name\":\"setBaseUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Item.sol\":\"Hero\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"contracts/Item.sol\":{\"keccak256\":\"0xf1c51eb254072cab9399b9f7fcf313e75079e8901719e5ddff30120490daa554\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5c60d202693ebdd606a709c5a35ac0418fa314b6fc57b2ff372eba266ee720d1\",\"dweb:/ipfs/Qma1ipeo6b2xUaStRnh61jFigpQMi7dr5nnDJpbn9SL8aM\"]}},\"version\":1}","zk_version":"1.3.16"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Item.sol:Hero\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.le\t@.BB0_48\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.gt\t@.BB0_81\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.gt\t@.BB0_76\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.gt\t@.BB0_74\n\tsub.s!\t@CPI0_36[0], r2, r1\n\tjump.eq\t@.BB0_241\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tjump\t@.BB0_101\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r4\n\tst.1\t128, r4\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t160, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t3, r0, r1\n\tst.1\t192, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_95[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_6:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_11\n\tadd\tr3, r0, stack-[7]\n\tadd\tr4, r0, stack-[8]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[8], r0, r4\n\tjump.ge\t@.BB0_11\n.BB0_10:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tld.1\t160, r1\n\tand\t@CPI0_4[0], r1, r1\n\tor\t20, r1, r1\n\tsstore\tr0, r1\n\tld.1\t192, r6\n\tsub.s!\t@CPI0_5[0], r6, r1\n\tjump.lt\t@.BB0_13\n.BB0_12:\n\tadd\t@CPI0_95[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_96[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.le\t@.BB0_49\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.gt\t@.BB0_64\n\tsub.s!\t@CPI0_45[0], r2, r4\n\tjump.gt\t@.BB0_62\n\tsub.s!\t@CPI0_48[0], r2, r4\n\tjump.eq\t@.BB0_146\n\tsub.s!\t@CPI0_49[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_8[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @fun_tokenOfOwnerByIndex, @DEFAULT_UNWIND\n\tjump\t@.BB0_115\n.BB0_81:\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.gt\t@.BB0_87\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.gt\t@.BB0_85\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.eq\t@.BB0_282\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_318\n\tadd\t100, r3, r1\n\tadd\t@CPI0_77[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\t@CPI0_78[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t47, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tjump\t@.BB0_124\n.BB0_49:\n\tsub.s!\t@CPI0_50[0], r2, r4\n\tjump.le\t@.BB0_50\n\tsub.s!\t@CPI0_51[0], r2, r4\n\tjump.gt\t@.BB0_56\n\tsub.s!\t@CPI0_54[0], r2, r4\n\tjump.eq\t@.BB0_117\n\tsub.s!\t@CPI0_55[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tjump\t@.BB0_140\n.BB0_13:\n\tadd\t1, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_18\n\tadd\tr3, r0, stack-[5]\n\tadd\tr6, r0, stack-[6]\n\tadd\tr4, r0, stack-[8]\n\tadd\tr5, r0, stack-[7]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[8], r0, r4\n\tadd\tstack-[7], r0, r5\n\tjump.ge\t@.BB0_18\n.BB0_19:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_19\n.BB0_18:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_29\n\tadd\tr6, r0, stack-[6]\n\tadd\tr4, r0, stack-[8]\n\tadd\tr5, r0, stack-[7]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[6], r0, r7\n\tand!\tr7, r2, r2\n\tadd\t224, r0, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_26\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r3\n.BB0_24:\n\tadd\tr4, r0, r5\n\tadd\t192, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_24\n\tadd\t224, r5, r3\n.BB0_26:\n\tsub!\tr2, r7, r2\n\tjump.ge\t@.BB0_28\n\tshl.s\t3, r7, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_28:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[8], r0, r4\n\tadd\tstack-[7], r0, r5\n\tjump\t@.BB0_20\n.BB0_76:\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.gt\t@.BB0_79\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.eq\t@.BB0_255\n\tsub.s!\t@CPI0_32[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t128, r0\n\tadd\t@CPI0_70[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_64:\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_67\n\tsub.s!\t@CPI0_43[0], r2, r4\n\tjump.eq\t@.BB0_227\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t8, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_232\n\tst.1\t0, r2\n\tadd\t@CPI0_88[0], r1, r1\n\tjump\t@.BB0_140\n.BB0_87:\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.gt\t@.BB0_90\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_362\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[6], r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_371\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t42, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_68[0], r0, r1\n\tjump\t@.BB0_197\n.BB0_50:\n\tsub.s!\t@CPI0_56[0], r2, r4\n\tjump.eq\t@.BB0_92\n\tsub.s!\t@CPI0_57[0], r2, r4\n\tjump.eq\t@.BB0_103\n\tsub.s!\t@CPI0_58[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_114\n.BB0_74:\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.eq\t@.BB0_248\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tjump\t@.BB0_397\n.BB0_62:\n\tsub.s!\t@CPI0_46[0], r2, r4\n\tjump.eq\t@.BB0_192\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB0_209\n\tand\t@CPI0_8[0], r1, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_89[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_209\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_90[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tjump\t@.BB0_207\n.BB0_85:\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.eq\t@.BB0_357\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_69[0], r0, r1\n\tjump\t@.BB0_101\n.BB0_56:\n\tsub.s!\t@CPI0_52[0], r2, r4\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tjump\t@.BB0_140\n.BB0_79:\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_265\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_12[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tadd\t@CPI0_79[0], r0, r5\n\tsub!\tr2, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_79[0], r2, r2\n\tsub!\tr2, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_79[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r2\n\tadd\t36, r4, r1\n\tnear_call\tr0, @abi_decode_available_length_bytes, @DEFAULT_UNWIND\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r3\n\tadd\tr1, r0, r4\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_281\n.BB0_67:\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.eq\t@.BB0_234\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tjump\t@.BB0_115\n.BB0_90:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_392\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_8[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_243\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_404\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_60[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_61[0], r0, r1\n\tjump\t@.BB0_197\n.BB0_29:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_31\n\tld.1\t224, r1\n.BB0_31:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n.BB0_20:\n\tsstore\tr5, r1\n\tsload\tr4, r2\n\tand\t@CPI0_6[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr4, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tand\t@CPI0_8[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\tr6, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tst.1\t0, r0\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_38\n\tst.1\t0, r0\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[8], r0, r6\n\tadd\tr6, r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_38:\n\tst.1\t0, r0\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tr2, r0, stack-[7]\n\tadd\t1, r2, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_45\n\tadd\tstack-[7], r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_12\n\tadd\tr3, r0, stack-[5]\n\tadd\t1, r3, r1\n\tsstore\tr2, r1\n\tst.1\t0, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_13[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_241:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_243\n\tand\t@CPI0_6[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_136:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_137:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_146:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[4]\n\tand\t@CPI0_8[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_175\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_100[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t42, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r4\n\tadd\tr3, r0, r5\n.BB0_155:\n\tshl.s\t5, r4, r6\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t2, r4, r6\n\tjump.lt\t@.BB0_155\n\tld.1\tr1, r4\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_157\n\tld.1\tr3, r4\n\tand\t@CPI0_73[0], r4, r4\n\tor\t@CPI0_74[0], r4, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r4\n\tsub.s!\t2, r4, r4\n\tjump.ge\t@.BB0_159\n.BB0_157:\n\tadd\t@CPI0_95[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_5\n.BB0_282:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_12[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r2\n\tadd\t@CPI0_79[0], r0, r4\n\tsub!\tr2, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_79[0], r2, r2\n\tsub!\tr2, r0, r7\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_79[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.gt\t@.BB0_12\n\tadd\t191, r2, r7\n\tsub.s\t32, r0, r4\n\tand\tr7, r4, r7\n\tsub.s!\t@CPI0_12[0], r7, r8\n\tjump.gt\t@.BB0_12\n\tadd\t36, r5, r5\n\tst.1\t64, r7\n\tst.1\t128, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_405\n\tadd\tr0, r0, r6\n.BB0_291:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_291\n.BB0_405:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_293\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_293:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_294\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.gt\t@.BB0_12\n\tadd\t14, r0, r1\n\tsload\tr1, r5\n\tand!\t1, r5, r3\n\tshr.s\t1, r5, r3\n\tand.eq\t127, r3, r3\n\tsub.s!\t31, r3, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr5, r6, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r5\n\tjump.lt\t@.BB0_301\n\tadd\t31, r2, r5\n\tshr.s\t5, r5, r5\n\tadd\t@CPI0_71[0], r5, r5\n\tadd\t@CPI0_71[0], r0, r6\n\tsub.s!\t32, r2, r7\n\tadd.lt\tr6, r0, r5\n\tst.1\t0, r1\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_71[0], r3, r3\n\tsub!\tr5, r3, r6\n\tjump.ge\t@.BB0_301\n.BB0_300:\n\tsstore\tr5, r0\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_300\n.BB0_301:\n\tsub.s!\t31, r2, r3\n\tjump.le\t@.BB0_310\n\tst.1\t0, r1\n\tand!\tr2, r4, r4\n\tadd\t160, r0, r5\n\tadd\t@CPI0_71[0], r0, r3\n\tjump.eq\t@.BB0_307\n\tadd\t@CPI0_71[0], r0, r3\n\tadd\t32, r0, r7\n\tadd\tr0, r0, r5\n.BB0_305:\n\tadd\tr7, r0, r6\n\tadd\t128, r6, r7\n\tld.1\tr7, r7\n\tsstore\tr3, r7\n\tadd\t32, r6, r7\n\tadd\t1, r3, r3\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r8\n\tjump.lt\t@.BB0_305\n\tadd\t160, r6, r5\n.BB0_307:\n\tsub!\tr4, r2, r4\n\tjump.ge\t@.BB0_309\n\tshl.s\t3, r2, r4\n\tand\t248, r4, r4\n\tsub.s\t1, r0, r6\n\tshr\tr6, r4, r4\n\txor\tr4, r6, r4\n\tld.1\tr5, r5\n\tand\tr5, r4, r4\n\tsstore\tr3, r4\n.BB0_309:\n\tadd\t1, r0, r3\n\tshl.s\t1, r2, r4\n\tjump\t@.BB0_302\n.BB0_117:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_125\n.BB0_122:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_113[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_114[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB0_123\n.BB0_255:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_260\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_258\n.BB0_227:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @finalize_allocation_19401, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tst.1\tr4, r0\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r3\n.BB0_281:\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_362:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tnear_call\tr0, @fun_checkRole, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[8], r0, r2\n\tjump\t@.BB0_199\n.BB0_92:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_116[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_117[0], r1, r3\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_118[0], r1, r3\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_119[0], r1, r3\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_120[0], r1, r3\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_121[0], r1, r3\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_122[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_100:\n\tand\t1, r2, r1\n\tjump\t@.BB0_101\n.BB0_103:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_107\n\tst.1\t0, r0\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_106\n\tadd\t@CPI0_115[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_110:\n\tsload\tr3, r4\n\tadd\t160, r2, r5\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_110\n\tjump\t@.BB0_106\n.BB0_248:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tadd\t12, r0, r2\n\tst.1\t32, r2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @storage_array_index_access_uint256_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_8[0], r1, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tjump\t@.BB0_115\n.BB0_192:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_8[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_196\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n.BB0_199:\n\tnear_call\tr0, @fun_revokeRole, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_357:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_140:\n\tsload\tr1, r1\n.BB0_101:\n\tst.1\t128, r1\n\tadd\t@CPI0_70[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_141:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_c868, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_265:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[7]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub.s!\tstack-[8], r2, r1\n\tjump.ne\t@.BB0_271\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tjump\t@.BB0_244\n.BB0_234:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_114:\n\tand\t@CPI0_8[0], r1, r1\n\tjump\t@.BB0_115\n.BB0_392:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n.BB0_397:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_bool_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_115:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n.BB0_116:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_243:\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_80[0], r0, r1\n.BB0_244:\n\tst.1\t196, r1\n\tadd\t@CPI0_84[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_232:\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t44, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_87[0], r0, r1\n\tjump\t@.BB0_197\n.BB0_209:\n\tadd\t13, r0, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_211\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_97[0], r0, r3\n.BB0_164:\n\tst.1\tr2, r3\n\tadd\t@CPI0_59[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tjump\t@.BB0_208\n.BB0_318:\n\tadd\t14, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1.inc\tr3, r1, r2\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_322\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tadd\tstack-[8], r0, r8\n\tjump.eq\t@.BB0_320\n\tadd\t@CPI0_71[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_325:\n\tadd\tr2, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_325\n\tjump\t@.BB0_320\n.BB0_371:\n\tst.1\t0, r2\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r8\n\tsub.s!\t@CPI0_12[0], r8, r1\n\tjump.gt\t@.BB0_12\n\tshl.s\t5, r8, r2\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tld.1\t64, r7\n\tadd\tr7, r1, r1\n\tsub!\tr1, r7, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_12[0], r1, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r1\n\tst.1.inc\tr7, r8, r9\n\tand\t31, r2, r1\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_407\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB0_377:\n\tshl.s\t5, r4, r5\n\tadd\tr9, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_377\n.BB0_407:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_379\n.BB0_379:\n\tadd\tr9, r0, stack-[3]\n\tadd\tr8, r0, stack-[4]\n\tsub!\tr8, r0, r1\n\tjump.ne\t@.BB0_380\n.BB0_387:\n\tld.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr7, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_390\n\tadd\tr0, r0, r4\n.BB0_389:\n\tadd\t32, r7, r7\n\tld.1\tr7, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_389\n.BB0_390:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_260:\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_258\n\tadd\t@CPI0_85[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_262:\n\tsload\tr3, r4\n\tadd\t160, r2, r5\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_262\n.BB0_258:\n\tjump\t@.BB0_106\n.BB0_107:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_106:\n\tadd\t32, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n.BB0_328:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_196:\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t47, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_98[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_99[0], r0, r1\n.BB0_197:\n\tst.1\t228, r1\n\tadd\t@CPI0_62[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_211:\n\tadd\tr2, r0, stack-[7]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_213\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr1, r2\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[5], r0, r2\n\tadd\t1, r2, r1\n\tadd\tstack-[4], r0, r3\n\tsstore\tr3, r1\n\tadd\t@CPI0_88[0], r2, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr1, r2\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_223\n.BB0_222:\n\tadd\t@CPI0_95[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_404:\n\tand\t@CPI0_6[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tjump\t@.BB0_136\n.BB0_125:\n\tsub!\tstack-[8], r1, r2\n\tjump.ne\t@.BB0_127\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_111[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_112[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_123:\n\tst.1\tr2, r3\n\tadd\t@CPI0_59[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_124:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_271:\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[7], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_82[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[8], r0, r6\n\tjump\t@.BB0_136\n.BB0_322:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr2, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tadd\tstack-[8], r0, r8\n.BB0_320:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r1\n\tand\tr2, r1, r4\n\tadd\tr4, r3, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_12[0], r2, r5\n\tjump.gt\t@.BB0_12\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r2\n\tld.1\tr3, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_331\n\tsub.s!\t@CPI0_76[0], r2, r1\n\tjump.gt\t@.BB0_12\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tld.1\t64, r1\n\tjump\t@.BB0_327\n.BB0_127:\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB0_128\n.BB0_132:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tor\tstack-[8], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_8[0], r1, r5\n\tjump.eq\t@.BB0_122\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_110[0], r0, r4\n\tadd\tstack-[8], r0, r6\n\tadd\tstack-[7], r0, r7\n\tjump\t@.BB0_136\n.BB0_213:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_91[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n.BB0_207:\n\tst.1\tr2, r3\n\tadd\t@CPI0_59[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n.BB0_208:\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_81[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_175:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_181\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_181:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tr2, r0, stack-[8]\n\tadd\t1, r2, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_137\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[5], r0, r1\n\tadd\t1, r1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tst.1\t0, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r1, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_137\n.BB0_294:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_80[0], r0, r3\n\tjump\t@.BB0_164\n.BB0_331:\n\tsub!\tr8, r0, r4\n\tjump.ne\t@.BB0_332\n\tsub.s!\t@CPI0_75[0], r2, r4\n\tjump.gt\t@.BB0_12\n\tadd\t64, r2, r4\n\tst.1\t64, r4\n\tadd\t32, r2, r4\n\tadd\t@CPI0_74[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t1, r0, r4\n\tst.1\tr2, r4\n.BB0_348:\n\tld.1\t64, r4\n\tadd\t32, r4, r5\n\tld.1\tr3, r6\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_351\n\tadd\tr0, r0, r7\n.BB0_350:\n\tadd\tr7, r5, r8\n\tadd\t32, r7, r7\n\tadd\tr7, r3, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_350\n.BB0_351:\n\tadd\tr6, r5, r3\n\tst.1\tr3, r0\n\tld.1\tr2, r5\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_354\n\tadd\tr0, r0, r6\n.BB0_353:\n\tadd\tr6, r3, r7\n\tadd\t32, r6, r6\n\tadd\tr6, r2, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_353\n.BB0_354:\n\tadd\tr5, r3, r2\n\tst.1\tr2, r0\n\tsub\tr2, r4, r2\n\tsub.s\t32, r2, r3\n\tst.1\tr4, r3\n\tadd\t31, r2, r2\n\tand\tr2, r1, r1\n\tadd\tr1, r4, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r3\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.gt\t@.BB0_12\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tadd\tr3, r0, r1\n\tst.1\t64, r1\n\tadd\tr4, r0, r2\n.BB0_327:\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tjump\t@.BB0_328\n.BB0_128:\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tand\t@CPI0_8[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_132\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_108[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_109[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t56, r0, r3\n\tjump\t@.BB0_123\n.BB0_380:\n\tadd\t32784, r0, stack-[7]\n\tadd\t6, r0, stack-[2]\n\tadd\tr0, r0, stack-[8]\n\tadd\tr7, r0, stack-[1]\n.BB0_381:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[8], r1, r1\n\tjump.le\t@.BB0_383\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[1], r0, r7\n\tld.1\tr7, r2\n\tadd\tstack-[8], r0, r4\n\tsub!\tr4, r2, r2\n\tjump.ge\t@.BB0_157\n\tshl.s\t5, r4, r2\n\tadd\tstack-[3], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r4, r4\n\tadd\tr4, r0, stack-[8]\n\tsub.s!\tstack-[4], r4, r1\n\tjump.lt\t@.BB0_381\n\tjump\t@.BB0_387\n.BB0_332:\n\tsub.s\t1, r0, r5\n\tadd\tr8, r0, r7\n\tadd\tr0, r0, r4\n.BB0_335:\n\tadd\tr4, r0, r6\n\tsub!\tr6, r5, r4\n\tjump.eq\t@.BB0_222\n\tdiv.s\t10, r7, r8, r4\n\tadd\t1, r6, r4\n\tsub.s!\t9, r7, r7\n\tadd\tr8, r0, r7\n\tjump.gt\t@.BB0_335\n\tsub.s!\t@CPI0_72[0], r6, r5\n\tjump.gt\t@.BB0_12\n\tadd\t64, r6, r5\n\tand\tr5, r1, r7\n\tadd\tr7, r2, r5\n\tsub!\tr5, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_12[0], r5, r8\n\tjump.gt\t@.BB0_12\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r5\n\tst.1.inc\tr2, r4, r5\n\tadd\t32, r6, r6\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_406\n\tadd\tstack[@calldatasize], r0, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tadd\tr0, r0, r8\n.BB0_342:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr7, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r6, r9\n\tjump.lt\t@.BB0_342\n.BB0_406:\n\tsub!\tr0, r0, r6\n\tjump.eq\t@.BB0_344\n.BB0_344:\n\tadd\tstack-[8], r0, r10\n.BB0_345:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_222\n\tsub.s\t1, r4, r4\n\tld.1\tr2, r6\n\tsub!\tr6, r4, r6\n\tjump.le\t@.BB0_157\n\tadd\tr4, r5, r6\n\tdiv.s\t10, r10, r7, r8\n\tshl.s\t248, r8, r8\n\tld.1\tr6, r9\n\tand\t@CPI0_73[0], r9, r9\n\tor\tr8, r9, r8\n\tor\t@CPI0_74[0], r8, r8\n\tst.1\tr6, r8\n\tsub.s!\t9, r10, r6\n\tadd\tr7, r0, r10\n\tjump.gt\t@.BB0_345\n\tjump\t@.BB0_348\n.BB0_159:\n\tadd\t33, r1, r4\n\tld.1\tr4, r5\n\tand\t@CPI0_73[0], r5, r5\n\tor\t@CPI0_101[0], r5, r5\n\tst.1\tr4, r5\n\tadd\t41, r0, r4\n\tadd\t@CPI0_102[0], r0, r5\n\tadd\tstack-[4], r0, r8\n.BB0_160:\n\tadd\tr8, r0, r6\n\tld.1\tr1, r7\n\tsub!\tr7, r4, r7\n\tjump.le\t@.BB0_157\n\tshl.s\t3, r6, r7\n\tand\t120, r7, r7\n\tshl\tr5, r7, r7\n\tadd\tr4, r3, r8\n\tld.1\tr8, r9\n\tand\t@CPI0_73[0], r9, r9\n\tand\t@CPI0_103[0], r7, r7\n\tor\tr9, r7, r7\n\tst.1\tr8, r7\n\tshr.s\t4, r6, r8\n\tsub.s\t1, r4, r4\n\tsub.s!\t1, r4, r7\n\tjump.gt\t@.BB0_160\n\tsub.s!\t16, r6, r3\n\tjump.ge\t@.BB0_163\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t@CPI0_104[0], r3, r3\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[8], r0, r4\n\tadd\t128, r4, r3\n\tst.1\t64, r3\n\tadd\t66, r0, r3\n\tst.1.inc\tr4, r3, r3\n\tadd\tr0, r0, r4\n\tadd\tr3, r0, r5\n.BB0_167:\n\tshl.s\t5, r4, r6\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t3, r4, r6\n\tjump.lt\t@.BB0_167\n\tadd\tstack-[8], r0, r9\n\tld.1\tr9, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_157\n\tld.1\tr3, r2\n\tand\t@CPI0_73[0], r2, r2\n\tor\t@CPI0_74[0], r2, r2\n\tst.1\tr3, r2\n\tld.1\tr9, r2\n\tsub.s!\t2, r2, r2\n\tjump.lt\t@.BB0_157\n\tadd\t33, r9, r2\n\tld.1\tr2, r4\n\tand\t@CPI0_73[0], r4, r4\n\tor\t@CPI0_101[0], r4, r4\n\tst.1\tr2, r4\n\tadd\t65, r0, r2\n\tadd\t@CPI0_102[0], r0, r4\n\tadd\tstack-[5], r0, r7\n.BB0_171:\n\tadd\tr7, r0, r5\n\tld.1\tr9, r6\n\tsub!\tr6, r2, r6\n\tjump.le\t@.BB0_157\n\tshl.s\t3, r5, r6\n\tand\t120, r6, r6\n\tshl\tr4, r6, r6\n\tadd\tr2, r3, r7\n\tld.1\tr7, r8\n\tand\t@CPI0_73[0], r8, r8\n\tand\t@CPI0_103[0], r6, r6\n\tor\tr8, r6, r6\n\tst.1\tr7, r6\n\tshr.s\t4, r5, r7\n\tsub.s\t1, r2, r2\n\tsub.s!\t1, r2, r6\n\tjump.gt\t@.BB0_171\n\tsub.s!\t15, r5, r2\n\tjump.gt\t@.BB0_163\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\t32, r4, r2\n\tadd\t@CPI0_106[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t55, r4, r2\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\t@CPI0_107[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t17, r1, r2\n\tadd\tstack-[8], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI0_59[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_310:\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_312\n\tld.1\t160, r3\n.BB0_312:\n\tshl.s\t3, r2, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tand\tr3, r4, r4\n\tshl.s\t1, r2, r3\n.BB0_302:\n\tor\tr4, r3, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_383:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_65[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t43, r0, r3\n\tjump\t@.BB0_123\n.BB0_163:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_105[0], r0, r3\n\tjump\t@.BB0_164\n.BB0_223:\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tstack-[8], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_92[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\t64, r2, r3\n\tadd\tstack-[7], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_94[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tjump\t@.BB0_116\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_19401:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_available_length_bytes:\n.func_begin5:\n\tadd\tr1, r0, r4\n\tsub.s!\t@CPI5_0[0], r2, r1\n\tjump.ge\t@.BB5_1\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI5_1[0], r5, r7\n\tjump.gt\t@.BB5_1\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB5_1\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r4, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB5_5\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB5_11\n\tadd\tr0, r0, r7\n.BB5_8:\n\tshl.s\t5, r7, r8\n\tadd\tr5, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB5_8\n.BB5_11:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB5_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr5, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB5_10:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tret\n.BB5_1:\n\tadd\t@CPI5_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nmapping_index_access_mapping_address_bool_of_address:\n.func_begin6:\n\tand\t@CPI6_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_checkRole:\n.func_begin7:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI7_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB7_4\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_4:\n\tld.1\t64, r1\n\tsub.s!\t@CPI7_3[0], r1, r2\n\tjump.lt\t@.BB7_7\n.BB7_5:\n\tadd\t@CPI7_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB7_6\n.BB7_7:\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t42, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r4\n\tadd\tr3, r0, r5\n.BB7_8:\n\tshl.s\t5, r4, r6\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t2, r4, r6\n\tjump.lt\t@.BB7_8\n\tld.1\tr1, r4\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB7_10\n\tld.1\tr3, r4\n\tand\t@CPI7_4[0], r4, r4\n\tor\t@CPI7_5[0], r4, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r4\n\tsub.s!\t2, r4, r4\n\tjump.ge\t@.BB7_12\n.BB7_10:\n\tadd\t@CPI7_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n.BB7_6:\n\tst.1\t4, r1\n\tadd\t@CPI7_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_12:\n\tadd\t33, r1, r4\n\tld.1\tr4, r5\n\tand\t@CPI7_4[0], r5, r5\n\tor\t@CPI7_6[0], r5, r5\n\tst.1\tr4, r5\n\tadd\t41, r0, r4\n\tadd\t@CPI7_7[0], r0, r5\n\tadd\tstack-[1], r0, r8\n.BB7_14:\n\tadd\tr8, r0, r6\n\tld.1\tr1, r7\n\tsub!\tr7, r4, r7\n\tjump.le\t@.BB7_10\n\tshl.s\t3, r6, r7\n\tand\t120, r7, r7\n\tshl\tr5, r7, r7\n\tadd\tr4, r3, r8\n\tld.1\tr8, r9\n\tand\t@CPI7_4[0], r9, r9\n\tand\t@CPI7_8[0], r7, r7\n\tor\tr7, r9, r7\n\tst.1\tr8, r7\n\tshr.s\t4, r6, r8\n\tsub.s\t1, r4, r4\n\tsub.s!\t1, r4, r7\n\tjump.gt\t@.BB7_14\n\tsub.s!\t16, r6, r3\n\tjump.ge\t@.BB7_17\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[1]\n\tsub.s!\t@CPI7_9[0], r3, r3\n\tjump.gt\t@.BB7_5\n\tadd\tstack-[1], r0, r4\n\tadd\t128, r4, r3\n\tst.1\t64, r3\n\tadd\t66, r0, r3\n\tst.1.inc\tr4, r3, r3\n\tadd\tr0, r0, r4\n\tadd\tr3, r0, r5\n.BB7_20:\n\tshl.s\t5, r4, r6\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t3, r4, r6\n\tjump.lt\t@.BB7_20\n\tadd\tstack-[1], r0, r9\n\tld.1\tr9, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB7_10\n\tld.1\tr3, r2\n\tand\t@CPI7_4[0], r2, r2\n\tor\t@CPI7_5[0], r2, r2\n\tst.1\tr3, r2\n\tld.1\tr9, r2\n\tsub.s!\t2, r2, r2\n\tjump.lt\t@.BB7_10\n\tadd\t33, r9, r2\n\tld.1\tr2, r4\n\tand\t@CPI7_4[0], r4, r4\n\tor\t@CPI7_6[0], r4, r4\n\tst.1\tr2, r4\n\tadd\t65, r0, r2\n\tadd\t@CPI7_7[0], r0, r4\n\tadd\tstack-[2], r0, r7\n.BB7_24:\n\tadd\tr7, r0, r5\n\tld.1\tr9, r6\n\tsub!\tr6, r2, r6\n\tjump.le\t@.BB7_10\n\tshl.s\t3, r5, r6\n\tand\t120, r6, r6\n\tshl\tr4, r6, r6\n\tadd\tr2, r3, r7\n\tld.1\tr7, r8\n\tand\t@CPI7_4[0], r8, r8\n\tand\t@CPI7_8[0], r6, r6\n\tor\tr8, r6, r6\n\tst.1\tr7, r6\n\tshr.s\t4, r5, r7\n\tsub.s\t1, r2, r2\n\tsub.s!\t1, r2, r6\n\tjump.gt\t@.BB7_24\n\tsub.s!\t15, r5, r2\n\tjump.gt\t@.BB7_17\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[2]\n\tadd\t32, r4, r2\n\tadd\t@CPI7_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t55, r4, r2\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\t@CPI7_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t17, r1, r2\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @abi_encode_string_memory_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI7_11[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI7_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_17:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI7_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_encode_string_memory_ptr:\n.func_begin8:\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB8_3\n\tadd\tr0, r0, r4\n.BB8_2:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB8_2\n.BB8_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end8:\n\nfun_revokeRole:\n.func_begin9:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI9_2[0], r2, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB9_7\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI9_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_1\n.BB9_7:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tr2, r0, stack-[5]\n\tadd\t1, r2, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tadd\tstack-[5], r0, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB9_24\n\tsload\tr3, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB9_11\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr4, r2, r1\n\tjump.eq\t@.BB9_21\n\tadd\tr4, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tadd\tstack-[4], r0, r2\n\tsub.s\t1, r2, stack-[1]\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r4\n\tsload\tr4, r2\n\tsub.s!\tstack-[1], r2, r2\n\tadd\tr4, r0, r3\n\tadd\tstack-[2], r0, r2\n\tjump.le\t@.BB9_16\n\tsub.s\t1, r2, r2\n\tadd\tr2, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tst.1\t0, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tsload\tr3, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_20\n.BB9_21:\n\tst.1\t0, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tadd\tstack-[4], r0, r2\n\tsub.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsstore\tr1, r0\n\tadd\tstack-[5], r0, r1\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsstore\tr1, r0\n.BB9_24:\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_11:\n\tadd\t@CPI9_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB9_12\n.BB9_16:\n\tadd\t@CPI9_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB9_12\n.BB9_20:\n\tadd\t@CPI9_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t49, r0, r1\n.BB9_12:\n\tst.1\t4, r1\n\tadd\t@CPI9_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_balanceOf:\n.func_begin10:\n\tand!\t@CPI10_0[0], r1, r1\n\tjump.eq\t@.BB10_1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB10_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_ownerOf:\n.func_begin11:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tjump.eq\t@.BB11_3\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_getApproved:\n.func_begin12:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r1\n\tjump.eq\t@.BB12_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI12_2[0], r1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nrequire_helper_stringliteral_c868:\n.func_begin13:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB13_1\n\tret\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t49, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_safeTransferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI14_2[0], r1, r1\n\tjump.eq\t@.BB14_3\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI14_2[0], r1, r1\n\tjump.eq\t@.BB14_8\n\tcontext.caller\tr2\n\tand\t@CPI14_2[0], r2, stack-[3]\n\tsub!\tstack-[3], r1, r2\n\tjump.eq\t@.BB14_19\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI14_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI14_0[0], r1, r2\n\tadd.ge\t@CPI14_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB14_19\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI14_2[0], r1, r1\n\tjump.eq\t@.BB14_15\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI14_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tjump.ne\t@.BB14_18\n.BB14_19:\n\tadd\tstack-[4], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI14_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_10[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_21\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI14_2[0], r1, r1\n\tadd\t36, r10, r2\n\tst.1\tr2, r1\n\tadd\t@CPI14_11[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tadd\t164, r10, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB14_25\n\tadd\tr0, r0, r3\n.BB14_24:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB14_24\n.BB14_25:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[5], r0, r2\n\tand\t@CPI14_2[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB14_27\n\tcontext.sp\tr5\n\tsub.s\t8, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[8]\n\tjump\t@.BB14_32\n.BB14_21:\n\tcontext.sp\tr1\n\tsub\tstack-[2], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB14_49\n.BB14_27:\n\tadd\tr7, r0, stack-[5]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\t@CPI14_0[0], r0, r4\n\tsub.s!\t@CPI14_0[0], r10, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr10, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI14_0[0], r1, r6\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI14_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB14_51\n\tadd\tr0, r0, r7\n.BB14_29:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB14_29\n.BB14_51:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB14_31\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB14_31:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t7, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[7]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_37\n.BB14_32:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI14_13[0], r1, r4\n\tjump.gt\t@.BB14_34\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB14_34\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB14_1\n\tld.1\tr10, r1\n\tand\t@CPI14_14[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB14_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[2], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI14_11[0], r1, r1\n\tjump.ne\t@.BB14_47\n.BB14_49:\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n.BB14_4:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB14_5\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n.BB14_5:\n\tst.1\tr2, r3\n\tadd\t@CPI14_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_0[0], r0, r2\n\tsub.s!\t@CPI14_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_37:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB14_44\n\tadd\t63, r3, r2\n\tand\t@CPI14_12[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI14_13[0], r4, r6\n\tjump.gt\t@.BB14_34\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB14_34\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB14_50\n\tadd\tr0, r0, r5\n.BB14_42:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB14_42\n.BB14_50:\n\tadd\tr8, r0, stack-[5]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB14_44\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[5], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB14_44:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB14_45\n.BB14_47:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI14_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI14_0[0], r0, r2\n\tsub.s!\t@CPI14_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB14_46:\n\tsub.s!\t@CPI14_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_34:\n\tadd\t@CPI14_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_15:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_8[0], r0, r3\n\tjump\t@.BB14_4\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t49, r0, r3\n\tjump\t@.BB14_5\n.BB14_45:\n\tadd\t@CPI14_0[0], r0, r2\n\tsub.s!\t@CPI14_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB14_46\n.func_end14:\n\nabi_encode_stringliteral_1e76:\n.func_begin15:\n\tadd\t96, r1, r2\n\tadd\t@CPI15_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI15_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end15:\n\nfun_isApprovedOrOwner:\n.func_begin16:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_3\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI16_2[0], r1, r2\n\tjump.eq\t@.BB16_8\n\tadd\t1, r0, r1\n\tadd\tstack-[1], r0, r3\n\tand\t@CPI16_2[0], r3, stack-[1]\n\tsub!\tstack-[1], r2, r3\n\tjump.eq\t@.BB16_18\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI16_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI16_0[0], r1, r2\n\tadd.ge\t@CPI16_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB16_18\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_15\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI16_2[0], r1, r1\n\tsub.s!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB16_18:\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n.BB16_4:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB16_5\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n.BB16_5:\n\tst.1\tr2, r3\n\tadd\t@CPI16_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_15:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_4[0], r0, r3\n\tjump\t@.BB16_4\n.func_end16:\n\nfun_transfer:\n.func_begin17:\n\tnop\tstack+=[9]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[7]\n\tadd\tr3, r0, stack-[9]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI17_2[0], r1, stack-[8]\n\tjump.eq\t@.BB17_3\n\tadd\tstack-[7], r0, r1\n\tand\t@CPI17_2[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB17_6\n\tadd\tstack-[5], r0, r1\n\tand!\t@CPI17_2[0], r1, r3\n\tjump.eq\t@.BB17_8\n\tsub!\tr2, r3, r1\n\tadd\tr3, r0, stack-[7]\n\tjump.eq\t@.BB17_25\n\tst.1\t0, r2\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB17_12\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[4], r0, r2\n\tsub.s\t1, r2, stack-[4]\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\tstack-[4], r3, r1\n\tjump.eq\t@.BB17_21\n\tadd\tr3, r0, stack-[3]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tst.1\t0, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n.BB17_21:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[7], r0, r3\n.BB17_25:\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB17_31\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr1, r2\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr1, r2\n.BB17_31:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI17_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI17_2[0], r1, r5\n\tjump.eq\t@.BB17_3\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI17_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[9], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB17_12\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB17_12\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI17_7[0], r2, r2\n\tadd\tstack-[7], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI17_0[0], r1, r2\n\tadd.ge\t@CPI17_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI17_10[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[9], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_12:\n\tadd\t@CPI17_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB17_4\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB17_4\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB17_4:\n\tst.1\tr2, r3\n\tadd\t@CPI17_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_tokenOfOwnerByIndex:\n.func_begin18:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[2]\n\tand!\t@CPI18_0[0], r1, r1\n\tjump.eq\t@.BB18_1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_4\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[2], r1, r1\n\tjump.le\t@.BB18_6\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI18_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_4\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI18_1[0], r1, r2\n\tadd.ge\t@CPI18_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_4\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB18_4:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tjump\t@.BB18_2\n.BB18_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t43, r0, r3\n.BB18_2:\n\tst.1\tr2, r3\n\tadd\t@CPI18_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nstorage_array_index_access_uint256_dyn:\n.func_begin19:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB19_1\n\tst.1\t0, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB19_1:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\n__sha3:\n.func_begin20:\n\tadd\t@CPI20_0[0], r0, r3\n\tsub.s!\t@CPI20_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI20_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_2\n\tld\tr1, r1\n\tret\n.BB20_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\n__farcall:\n.func_begin21:\n.tmp0:\n\tfar_call\tr1, r2, @.BB21_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB21_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end21:\n\n__staticcall:\n.func_begin22:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB22_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB22_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end22:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI6_1:\nCPI7_0:\nCPI9_0:\nCPI10_1:\nCPI11_0:\nCPI12_0:\nCPI13_3:\nCPI14_0:\nCPI16_0:\nCPI17_0:\nCPI18_1:\nCPI19_2:\nCPI20_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 37747648055644779440695949817415726376859505014468652295120268078519836213248\nCPI0_2:\n\t.cell 30477145622938579006381641021994625614460754065848323173479984218906359234560\nCPI0_3:\nCPI9_5:\nCPI19_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell -95780971304118053647396689196894323976171195136475136\nCPI0_5:\nCPI5_0:\n\t.cell 18446744073709551616\nCPI0_6:\nCPI17_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_7:\nCPI9_3:\nCPI17_8:\nCPI20_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_8:\nCPI2_1:\nCPI6_0:\nCPI7_2:\nCPI9_2:\nCPI10_0:\nCPI11_2:\nCPI12_2:\nCPI14_2:\nCPI16_2:\nCPI17_2:\nCPI18_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_9:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_10:\nCPI6_2:\nCPI7_1:\nCPI9_1:\nCPI10_2:\nCPI11_1:\nCPI12_1:\nCPI14_1:\nCPI16_1:\nCPI17_1:\nCPI18_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_11:\n\t.cell 21498167346302451094516930465084812798900530214793017313261708129848854408973\nCPI0_12:\nCPI4_0:\nCPI5_1:\nCPI14_13:\n\t.cell 18446744073709551615\nCPI0_13:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_14:\n\t.cell 1901074597\nCPI0_15:\n\t.cell 3351455370\nCPI0_16:\n\t.cell 3578229790\nCPI0_17:\n\t.cell 3917867460\nCPI0_18:\n\t.cell 3917867461\nCPI0_19:\n\t.cell 4076725131\nCPI0_20:\n\t.cell 3578229791\nCPI0_21:\n\t.cell 3802462931\nCPI0_22:\n\t.cell 3390425202\nCPI0_23:\n\t.cell 3390425203\nCPI0_24:\n\t.cell 3577287571\nCPI0_25:\n\t.cell 3351455371\nCPI0_26:\n\t.cell 3363526365\nCPI0_27:\n\t.cell 2514000704\nCPI0_28:\n\t.cell 2720838756\nCPI0_29:\n\t.cell 2720838757\nCPI0_30:\n\t.cell 3096268766\nCPI0_31:\n\t.cell 2514000705\nCPI0_32:\n\t.cell 2719481311\nCPI0_33:\n\t.cell 2417021051\nCPI0_34:\n\t.cell 2417021052\nCPI0_35:\n\t.cell 2446411860\nCPI0_36:\n\t.cell 1901074598\nCPI0_37:\n\t.cell 2376452955\nCPI0_38:\n\t.cell 791671132\nCPI0_39:\n\t.cell 1115958797\nCPI0_40:\n\t.cell 1666326813\nCPI0_41:\n\t.cell 1666326814\nCPI0_42:\n\t.cell 1889567281\nCPI0_43:\n\t.cell 1115958798\nCPI0_44:\n\t.cell 1332530407\nCPI0_45:\n\t.cell 911641277\nCPI0_46:\n\t.cell 911641278\nCPI0_47:\n\t.cell 1086394137\nCPI0_48:\n\t.cell 791671133\nCPI0_49:\n\t.cell 796154969\nCPI0_50:\n\t.cell 157198258\nCPI0_51:\n\t.cell 599290588\nCPI0_52:\n\t.cell 599290589\nCPI0_53:\n\t.cell 613063843\nCPI0_54:\n\t.cell 157198259\nCPI0_55:\n\t.cell 404098525\nCPI0_56:\n\t.cell 33540519\nCPI0_57:\n\t.cell 117300739\nCPI0_58:\n\t.cell 135795452\nCPI0_59:\nCPI7_11:\nCPI10_5:\nCPI11_5:\nCPI12_5:\nCPI13_2:\nCPI14_5:\nCPI16_5:\nCPI17_5:\nCPI18_5:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_60:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_61:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_62:\n\t.cell 10458117454244075803782624051200\nCPI0_63:\n\t.cell 2535301200456458802993406410752\nCPI0_64:\nCPI18_3:\n\t.cell 52525598388901350454096761002212720639634055729511321892057313069081689063424\nCPI0_65:\nCPI18_4:\n\t.cell 31354931916645393560184742889415211817265797146740121361921858885565741559669\nCPI0_66:\nCPI10_6:\nCPI11_6:\nCPI12_6:\nCPI13_4:\nCPI14_6:\nCPI16_6:\nCPI17_6:\nCPI18_6:\n\t.cell 10458117451882892562347801444352\nCPI0_67:\nCPI10_4:\nCPI18_8:\n\t.cell 31354931916645375393785295258521846456833152225125956258475365221073749572197\nCPI0_68:\nCPI10_3:\nCPI18_7:\n\t.cell 51760008244253243555339834505836909231457839317500661056268430958216697872384\nCPI0_69:\n\t.cell -43793174905514494007593527202885080560931385846891371816724828470911515928922\nCPI0_70:\n\t.cell 2535301202817642044428229017600\nCPI0_71:\n\t.cell -30991751765622274519320752134368064134869217946116313751679903837235273743363\nCPI0_72:\n\t.cell 18446744073709551614\nCPI0_73:\nCPI7_4:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_74:\nCPI7_5:\n\t.cell 21711016731996786641919559689128982722488122124807605757398297001483711807488\nCPI0_75:\n\t.cell 18446744073709551551\nCPI0_76:\n\t.cell 18446744073709551583\nCPI0_77:\n\t.cell 49933695950216730624942714053792707997088209755498743882059886291794889015296\nCPI0_78:\n\t.cell 31354931916645406359169511643666282793569254592747070802456731253464641859183\nCPI0_79:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_80:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_81:\nCPI7_12:\n\t.cell 7922816251426433759354395033600\nCPI0_82:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_83:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_84:\n\t.cell 7922816253787617000789217640448\nCPI0_85:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_86:\n\t.cell 31354931916645393560184742889415211817265796983609640524400411021708761768047\nCPI0_87:\n\t.cell 53125781402948813339890242214916788826063368209411942634799197820292647878656\nCPI0_88:\n\t.cell -5442482557903504250613150719145357533886713417884903185095341029921719619869\nCPI0_89:\n\t.cell -4045705486929264598731410465797403548751308039657376734587714010343559152696\nCPI0_90:\n\t.cell 30477093331325535156484366205017514103105718374625893951839322680505829163008\nCPI0_91:\n\t.cell 31354931916645375394227994539589573020889145011472493424756597455838364303360\nCPI0_92:\nCPI17_10:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_93:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_94:\n\t.cell 34433387951413595430405412356854898828466764899293492449908537295105018698831\nCPI0_95:\nCPI3_1:\nCPI4_1:\nCPI5_2:\nCPI7_15:\nCPI9_6:\nCPI14_15:\nCPI17_11:\nCPI19_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_96:\nCPI3_2:\nCPI4_2:\nCPI5_3:\nCPI7_16:\nCPI9_7:\nCPI14_16:\nCPI17_12:\nCPI19_1:\n\t.cell 2852213850513516153367582212096\nCPI0_97:\n\t.cell 31354931916645375394055781497097123966713745074512196778955490624888853853043\nCPI0_98:\n\t.cell 29575939025326651103147056851280731857408058097627279114309994507495696917349\nCPI0_99:\n\t.cell 14676200736251895825930069203020569566653712848557604840047993945322262888448\nCPI0_100:\n\t.cell 18446744073709551519\nCPI0_101:\nCPI7_6:\n\t.cell 54277541829991966604798899222822456806220305312019014393495742503709279518720\nCPI0_102:\nCPI7_7:\n\t.cell 21797938705943676250364219608352299876616432895080889470814659460585888940032\nCPI0_103:\nCPI7_8:\n\t.cell 57443731770074831323412168344153766786583156455220123566449660816425654157312\nCPI0_104:\nCPI7_9:\n\t.cell 18446744073709551487\nCPI0_105:\nCPI7_10:\n\t.cell 37747710333430245980940452738832839721522435977096927851794211126014890045044\nCPI0_106:\nCPI7_13:\n\t.cell 29575939025326651103147056851280731856730096307297265050110089603845520883712\nCPI0_107:\nCPI7_14:\n\t.cell 14660324671536848855038019151756929270603624611015312065435742144134322847744\nCPI0_108:\n\t.cell 49933652571133945240646269341346773441232908056919510700755594923042897133568\nCPI0_109:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459595639\nCPI0_110:\nCPI17_9:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_111:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_112:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_113:\nCPI11_3:\nCPI14_17:\nCPI16_7:\nCPI17_15:\n\t.cell 45878752361592109720253219027881625235748152392964139204686589122341653970944\nCPI0_114:\nCPI11_4:\nCPI14_18:\nCPI16_8:\nCPI17_16:\n\t.cell 31354931916645375394106162266546829686708297189091808258728121542906766521204\nCPI0_115:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_116:\nCPI14_14:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_117:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_118:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_119:\n\t.cell 54303363932110030151841032316537728773381361600761201641115281136087927357440\nCPI0_120:\n\t.cell 40717156654129389856037586258766478151149685334671137317298326025923947659264\nCPI0_121:\n\t.cell 54909818011127210282586622383458683342160741266077104324147033802515469565952\nCPI0_122:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI3_0:\n\t.cell 18446744073709551584\nCPI7_3:\n\t.cell 18446744073709551520\nCPI9_4:\n\t.cell -4422201763333249725673726406278620787883548942654356884866643620688883542245\nCPI12_3:\nCPI14_7:\nCPI16_3:\n\t.cell 47696839850855449933311899423999770536344418734008620142241006894201008291840\nCPI12_4:\nCPI14_8:\nCPI16_4:\n\t.cell 31354931916645375393762213565866891195335176431693669511405079535027810624888\nCPI13_0:\nCPI14_3:\n\t.cell 54020282311764692190021849552246905499923117250381298616038159743020431310848\nCPI13_1:\nCPI14_4:\n\t.cell 31354931916645375394228278154242914900316590054129571697333944605927305125999\nCPI14_9:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI14_10:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI14_11:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI14_12:\n\t.cell 8589934560\nCPI14_19:\nCPI16_9:\n\t.cell 31354931916645375394105488451352269979389710144108907708483216252301827007864\nCPI15_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI15_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\nCPI17_3:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI17_4:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI17_13:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI17_14:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\n","bytecode":{"object":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","listTokenIds(address)":"e2a4fad3","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseUrl(string)":"c7c3268b","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\", 2:\"@openzeppelin/contracts/access/IAccessControl.sol\", 3:\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\", 4:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 10:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\", 11:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\", 12:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 14:\"@openzeppelin/contracts/utils/Context.sol\", 17:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 18:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 19:\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\", 20:\"contracts/Item.sol\"\nobject \"Hero_3773\" {\n    code {\n        {\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let _2 := 64\n            let newFreePtr := add(_1, _2)\n            let _3 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr)\n            mstore(_1, 10)\n            let _4 := 32\n            mstore(add(_1, _4), \"Sticky Cat\")\n            let memPtr := mload(_2)\n            let newFreePtr_1 := add(memPtr, _2)\n            if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr_1)\n            mstore(memPtr, 3)\n            mstore(add(memPtr, _4), \"Cat\")\n            let newLen := mload(_1)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _5 := 0\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let _6 := sload(/** @src -1:-1:-1 */ _5)\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let length := /** @src -1:-1:-1 */ _5\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let _7 := 1\n            length := shr(_7, _6)\n            let outOfPlaceEncoding := and(_6, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n            }\n            let _8 := 31\n            if gt(length, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ _5, _5)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _4)\n                let deleteStart := add(data, shr(5, add(newLen, _8)))\n                if lt(newLen, _4) { deleteStart := data }\n                let _9 := add(data, shr(5, add(length, _8)))\n                let start := deleteStart\n                for { } lt(start, _9) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _5)\n                }\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let srcOffset := /** @src -1:-1:-1 */ _5\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            srcOffset := _4\n            switch gt(newLen, _8)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _5, _5)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _4)\n                let i := /** @src -1:-1:-1 */ _5\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                for { } lt(i, loopEnd) { i := add(i, _4) }\n                {\n                    sstore(dstPtr, mload(add(_1, srcOffset)))\n                    dstPtr := add(dstPtr, _7)\n                    srcOffset := add(srcOffset, _4)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(_1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ add(shl(_7, newLen), _7))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _5\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if newLen\n                {\n                    value := mload(add(_1, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(memPtr)\n            if gt(newLen_1, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n            }\n            let _10 := sload(_7)\n            let length_1 := /** @src -1:-1:-1 */ _5\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            length_1 := shr(_7, _10)\n            let outOfPlaceEncoding_1 := and(_10, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n            }\n            if gt(length_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _7)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _4)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _8)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _11) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _5)\n                }\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _5\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            srcOffset_1 := _4\n            switch gt(newLen_1, _8)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _7)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _4)\n                let i_1 := /** @src -1:-1:-1 */ _5\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _4)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_7, add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _5\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr, srcOffset_1))\n                }\n                sstore(_7, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            let _12 := sload(10)\n            sstore(10, or(and(_12, not(sub(shl(160, 1), 1))), /** @src 14:719:729  \"msg.sender\" */ caller()))\n            /// @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ _5, _5, /** @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(_12, sub(shl(160, 1), 1)), /** @src 14:719:729  \"msg.sender\" */ caller())\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            mstore(/** @src -1:-1:-1 */ _5, _5)\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            mstore(_4, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let _13 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n            mstore(/** @src -1:-1:-1 */ _5, /** @src 14:719:729  \"msg.sender\" */ caller())\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            mstore(_4, _13)\n            /// @src 0:7322:7471  \"if (!hasRole(role, account)) {...\"\n            if /** @src 0:7326:7349  \"!hasRole(role, account)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)), 0xff))\n            /// @src 0:7322:7471  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _5, _5)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(_4, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _14 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 14:719:729  \"msg.sender\" */ caller())\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(_4, _14)\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), _7))\n                /// @src 0:7420:7460  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src -1:-1:-1 */ _5, _5, /** @src 0:7420:7460  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src -1:-1:-1 */ _5, /** @src 14:719:729  \"msg.sender\" */ caller(), caller())\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            mstore(/** @src -1:-1:-1 */ _5, _5)\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            mstore(_4, /** @src 1:2106:2118  \"_roleMembers\" */ 0x0c)\n            /// @src 19:7720:7770  \"_add(set._inner, bytes32(uint256(uint160(value))))\"\n            pop(fun_add(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ _5, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2), /** @src 14:719:729  \"msg.sender\" */ caller()))\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            let _15 := mload(_2)\n            let _16 := datasize(\"Hero_3773_deployed\")\n            codecopy(_15, dataoffset(\"Hero_3773_deployed\"), _16)\n            return(_15, _16)\n        }\n        /// @ast-id 3028 @src 19:1712:2116  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n        function fun_add(var_set_slot, var_value) -> var\n        {\n            /// @src 19:3849:3861  \"set._indexes\"\n            let _1 := add(var_set_slot, 1)\n            /// @src -1:-1:-1\n            let _2 := 0\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            mstore(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_value)\n            mstore(0x20, _1)\n            /// @src 19:1791:2110  \"if (!_contains(set, value)) {...\"\n            switch /** @src 19:3849:3873  \"set._indexes[value] != 0\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)))\n            case /** @src 19:1791:2110  \"if (!_contains(set, value)) {...\" */ 0 {\n                /// @src 19:2087:2099  \"return false\"\n                var := /** @src -1:-1:-1 */ _2\n                /// @src 19:2087:2099  \"return false\"\n                leave\n            }\n            default /// @src 19:1791:2110  \"if (!_contains(set, value)) {...\"\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let oldLen := sload(var_set_slot)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n                }\n                let _3 := add(oldLen, /** @src 19:3849:3861  \"set._indexes\" */ 1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(var_set_slot, _3)\n                if iszero(lt(oldLen, _3))\n                {\n                    mstore(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_set_slot)\n                sstore(add(keccak256(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x20), oldLen), var_value)\n                let _4 := sload(/** @src 19:2013:2031  \"set._values.length\" */ var_set_slot)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_value)\n                mstore(0x20, _1)\n                sstore(keccak256(/** @src -1:-1:-1 */ _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), _4)\n                /// @src 19:2045:2056  \"return true\"\n                var := /** @src 19:3849:3861  \"set._indexes\" */ 1\n                /// @src 19:2045:2056  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\", 4:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 10:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\", 13:\"@openzeppelin/contracts/utils/Address.sol\", 14:\"@openzeppelin/contracts/utils/Context.sol\", 15:\"@openzeppelin/contracts/utils/Counters.sol\", 16:\"@openzeppelin/contracts/utils/Strings.sol\", 17:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 19:\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\", 20:\"contracts/Item.sol\"\n    object \"Hero_3773_deployed\" {\n        code {\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x18160ddd { external_fun_totalSupply() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x248a9ca3 { external_fun_getRoleAdmin() }\n                    case 0x2f2ff15d { external_fun_grantRole() }\n                    case 0x2f745c59 {\n                        external_fun_tokenOfOwnerByIndex()\n                    }\n                    case 0x36568abe { external_fun_renounceRole() }\n                    case 0x40c10f19 { external_fun_mint() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom_1311()\n                    }\n                    case 0x4f6ccce7 { external_fun_tokenByIndex() }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x715018a6 {\n                        external_fun_renounceOwnership()\n                    }\n                    case 0x8da5cb5b { external_fun_owner() }\n                    case 0x9010d07c { external_fun_getRoleMember() }\n                    case 0x91d14854 { external_fun_hasRole() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa217fddf {\n                        external_fun_DEFAULT_ADMIN_ROLE()\n                    }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0xc7c3268b { external_fun_setBaseUrl() }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xca15c873 {\n                        external_fun_getRoleMemberCount()\n                    }\n                    case 0xd5391393 { external_fun_MINTER_ROLE() }\n                    case 0xd547741f { external_fun_revokeRole() }\n                    case 0xe2a4fad3 { external_fun_listTokenIds() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                    case 0xf2fde38b {\n                        external_fun_transferOwnership()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                let _1 := and(/** @src 1:742:799  \"interfaceId == type(IAccessControlEnumerable).interfaceId\" */ value, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0xffffffff))\n                /// @src 1:742:839  \"interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId)\"\n                let expr := /** @src 1:742:799  \"interfaceId == type(IAccessControlEnumerable).interfaceId\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1, /** @src 1:757:799  \"type(IAccessControlEnumerable).interfaceId\" */ shl(224, 0x5a05180f))\n                /// @src 1:742:839  \"interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId)\"\n                if iszero(expr)\n                {\n                    /// @src 0:2714:2801  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                    let expr_1 := /** @src 0:2714:2761  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1, /** @src 0:2729:2761  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                    /// @src 0:2714:2801  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                    if iszero(expr_1)\n                    {\n                        /// @src 10:1115:1205  \"interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr_2 := /** @src 10:1115:1165  \"interfaceId == type(IERC721Enumerable).interfaceId\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1, /** @src 10:1130:1165  \"type(IERC721Enumerable).interfaceId\" */ shl(224, 0x780e9d63))\n                        /// @src 10:1115:1205  \"interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 7:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            let expr_3 := /** @src 7:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_1, /** @src 7:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                            /// @src 7:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            if iszero(expr_3)\n                            {\n                                expr_3 := /** @src 7:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_1, /** @src 7:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                            }\n                            /// @src 7:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            let expr_4 := expr_3\n                            if iszero(expr_3)\n                            {\n                                expr_4 := /** @src 17:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 17:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                            }\n                            /// @src 10:1115:1205  \"interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId)\"\n                            expr_2 := expr_4\n                        }\n                        /// @src 0:2714:2801  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        expr_1 := expr_2\n                    }\n                    /// @src 1:742:839  \"interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId)\"\n                    expr := expr_1\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bool(memPos, expr), memPos))\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(_1)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _2 := 0x20\n                let _3 := 1\n                switch and(slotValue, _3)\n                case 0 {\n                    mstore(add(memPtr, _2), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                }\n                case 1 {\n                    mstore(_1, _1)\n                    let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(add(memPtr, i), _2), sload(dataPos))\n                        dataPos := add(dataPos, _3)\n                    }\n                    ret := add(add(memPtr, i), _2)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let ret := fun_getApproved(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_12665() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let value1 := calldataload(36)\n                /// @src 7:3634:3657  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(value1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 7:3675:3686  \"to != owner\"\n                let _2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:3675:3686  \"to != owner\" */ expr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                if /** @src 7:3675:3686  \"to != owner\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:3675:3686  \"to != owner\" */ value0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1), /** @src 7:3675:3686  \"to != owner\" */ _2)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC721: approval to current owne\")\n                    mstore(add(memPtr, 100), \"r\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:3756:3818  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                let expr_1 := /** @src 7:3756:3777  \"_msgSender() == owner\" */ eq(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:3756:3777  \"_msgSender() == owner\" */ _2)\n                /// @src 7:3756:3818  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 7:4623:4658  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_bool_of_address(/** @src 7:4623:4648  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_bool_of_address_12661(/** @src 7:3781:3818  \"isApprovedForAll(owner, _msgSender())\" */ expr), /** @src 14:719:729  \"msg.sender\" */ caller()))\n                }\n                /// @src 7:3735:3900  \"require(...\"\n                require_helper_stringliteral_6d83(expr_1)\n                /// @src 7:3924:3931  \"tokenId\"\n                fun_approve(value0, value1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_totalSupply()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 10:1702:1712  \"_allTokens\" */ 0x08)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPos := mload(64)\n                mstore(memPos, length)\n                return(memPos, 32)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                /// @src 7:4908:5011  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\")\"\n                require_helper_stringliteral_c868(/** @src 7:4916:4957  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:4916:4957  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                /// @src 7:5042:5049  \"tokenId\"\n                fun_transfer(param, param_1, param_2)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(0, 0)\n            }\n            function external_fun_getRoleAdmin()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ calldataload(4))\n                mstore(32, /** @src 0:4491:4497  \"_roles\" */ 0x0b)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sload(/** @src 0:4491:4513  \"_roles[role].adminRole\" */ add(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), /** @src 0:4491:4513  \"_roles[role].adminRole\" */ 1))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_grantRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := calldataload(4)\n                let value1 := abi_decode_address_12665()\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ value0)\n                mstore(32, /** @src 0:4491:4497  \"_roles\" */ 0x0b)\n                /// @src 0:2516:2520  \"role\"\n                fun_checkRole(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 0:4491:4513  \"_roles[role].adminRole\" */ add(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), /** @src 0:4491:4513  \"_roles[role].adminRole\" */ 1)))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ value0)\n                mstore(32, /** @src 0:4491:4497  \"_roles\" */ 0x0b)\n                /// @src 0:7322:7471  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:7326:7349  \"!hasRole(role, account)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(/** @src 0:3004:3033  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), /** @src 0:7327:7349  \"hasRole(role, account)\" */ value1)), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0xff))\n                /// @src 0:7322:7471  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ value0)\n                    mstore(32, /** @src 0:4491:4497  \"_roles\" */ 0x0b)\n                    /// @src 0:7365:7394  \"_roles[role].members[account]\"\n                    let _2 := mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), /** @src 0:7365:7394  \"_roles[role].members[account]\" */ value1)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    sstore(_2, or(and(sload(_2), not(255)), /** @src 0:4491:4513  \"_roles[role].adminRole\" */ 1))\n                    /// @src 0:7420:7460  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src -1:-1:-1 */ _1, _1, /** @src 0:7420:7460  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, value0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 0:7420:7460  \"RoleGranted(role, account, _msgSender())\" */ value1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)), /** @src 14:719:729  \"msg.sender\" */ caller())\n                }\n                /// @src 1:2106:2137  \"_roleMembers[role].add(account)\"\n                pop(fun_add_3314(/** @src 1:2106:2124  \"_roleMembers[role]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12666(value0), /** @src 1:2106:2137  \"_roleMembers[role].add(account)\" */ value1))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(/** @src -1:-1:-1 */ _1, _1)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function external_fun_tokenOfOwnerByIndex()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let ret := fun_tokenOfOwnerByIndex(value0, calldataload(36))\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_renounceRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value1 := abi_decode_address_12665()\n                if iszero(/** @src 0:5882:5905  \"account == _msgSender()\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 0:5882:5905  \"account == _msgSender()\" */ value1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)), /** @src 14:719:729  \"msg.sender\" */ caller()))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 47)\n                    mstore(add(memPtr, 68), \"AccessControl: can only renounce\")\n                    mstore(add(memPtr, 100), \" roles for self\")\n                    revert(memPtr, 132)\n                }\n                /// @src 0:5986:5993  \"account\"\n                fun_revokeRole(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ calldataload(4), /** @src 0:5986:5993  \"account\" */ value1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function external_fun_mint()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let cleaned := and(sload(/** @src 4:1108:1114  \"_owner\" */ 0x0a), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))\n                /// @src 20:1144:1205  \"owner() == _msgSender() || hasRole(MINTER_ROLE, _msgSender())\"\n                let expr := /** @src 20:1144:1167  \"owner() == _msgSender()\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ cleaned, /** @src 14:719:729  \"msg.sender\" */ caller())\n                /// @src 20:1144:1205  \"owner() == _msgSender() || hasRole(MINTER_ROLE, _msgSender())\"\n                if iszero(expr)\n                {\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:755:779  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(32, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n                    /// @src 20:1144:1205  \"owner() == _msgSender() || hasRole(MINTER_ROLE, _msgSender())\"\n                    expr := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(/** @src 0:3004:3033  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), /** @src 14:719:729  \"msg.sender\" */ caller())), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0xff)\n                }\n                if iszero(expr)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Caller is not minter\")\n                    revert(memPtr, 100)\n                }\n                /// @src 20:1236:1261  \"_tokenIdTracker.increment\"\n                fun_increment()\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sload(/** @src 20:1236:1251  \"_tokenIdTracker\" */ 0x0d)\n                /// @src 20:1329:1337  \"token_id\"\n                fun_mint(value0, _1)\n                /// @src 20:1349:1378  \"Mint(to, hero_type, token_id)\"\n                let _2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(64)\n                /// @src 20:1349:1378  \"Mint(to, hero_type, token_id)\"\n                log1(_2, sub(abi_encode_address_uint256_uint256(_2, value0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ calldataload(36), /** @src 20:1349:1378  \"Mint(to, hero_type, token_id)\" */ _1), _2), 0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, _1), memPos))\n            }\n            function external_fun_safeTransferFrom_1311()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                let memPtr := mload(64)\n                finalize_allocation_19401(memPtr)\n                mstore(memPtr, 0)\n                /// @src 7:5256:5295  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                fun_safeTransferFrom(param, param_1, param_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ memPtr)\n                return(0, 0)\n            }\n            function external_fun_tokenByIndex()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := calldataload(4)\n                if iszero(/** @src 10:1900:1938  \"index < ERC721Enumerable.totalSupply()\" */ lt(value0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 10:1702:1712  \"_allTokens\" */ 0x08)))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"ERC721Enumerable: global index o\")\n                    mstore(add(memPtr, 100), \"ut of bounds\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:1702:1712  \"_allTokens\" */ 0x08)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sload(add(110349606679412691172957834289542550319383271247755660854362242977991410020067, value0))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, _1), memPos))\n            }\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let ret := fun_ownerOf(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let ret := fun_balanceOf(abi_decode_address())\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_renounceOwnership()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let _2 := sload(/** @src 4:1108:1114  \"_owner\" */ 0x0a)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let cleaned := and(_2, sub(shl(160, 1), 1))\n                /// @src 4:1240:1308  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                require_helper_stringliteral(/** @src 4:1248:1271  \"owner() == _msgSender()\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ cleaned, /** @src 14:719:729  \"msg.sender\" */ caller()))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(/** @src 4:1108:1114  \"_owner\" */ 0x0a, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1, _1, /** @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, cleaned, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                return(_1, _1)\n            }\n            function external_fun_owner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let cleaned := and(sload(/** @src 4:1108:1114  \"_owner\" */ 0x0a), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, cleaned)\n                return(memPos, 32)\n            }\n            function external_fun_getRoleMember()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ calldataload(4))\n                mstore(32, /** @src 1:1547:1559  \"_roleMembers\" */ 0x0c)\n                /// @src 19:4503:4521  \"set._values[index]\"\n                let _1, _2 := storage_array_index_access_uint256_dyn(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), calldataload(36))\n                let _3 := sload(/** @src 19:4503:4521  \"set._values[index]\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPos := mload(64)\n                mstore(memPos, and(shr(shl(3, _2), _3), sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_hasRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value1 := abi_decode_address_12665()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ calldataload(4))\n                mstore(32, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value := and(sload(/** @src 0:3004:3033  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                /// @src 7:2738:2745  \"_symbol\"\n                let _2 := 0x01\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let slotValue := sload(/** @src 7:2738:2745  \"_symbol\" */ _2)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _3 := 0x20\n                switch and(slotValue, /** @src 7:2738:2745  \"_symbol\" */ _2)\n                case /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0 {\n                    mstore(add(memPtr, _3), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _3)\n                }\n                case 1 {\n                    mstore(_1, /** @src 7:2738:2745  \"_symbol\" */ _2)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(add(memPtr, i), _3), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 7:2738:2745  \"_symbol\" */ _2)\n                    }\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    ret := add(add(memPtr, i), _3)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_DEFAULT_ADMIN_ROLE()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, 0)\n                return(memPos, 32)\n            }\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let value := calldataload(36)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := and(/** @src 7:11616:11633  \"owner != operator\" */ value0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))\n                if /** @src 7:11616:11633  \"owner != operator\" */ eq(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"ERC721: approve to caller\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 14:719:729  \"msg.sender\" */ caller())\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(32, /** @src 7:11673:11691  \"_operatorApprovals\" */ 0x05)\n                /// @src 7:11673:11719  \"_operatorApprovals[owner][operator] = approved\"\n                update_storage_value_offsett_bool_to_bool(/** @src 7:11673:11708  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), /** @src 7:11673:11708  \"_operatorApprovals[owner][operator]\" */ value0), /** @src 7:11673:11719  \"_operatorApprovals[owner][operator] = approved\" */ value)\n                /// @src 7:11734:11775  \"ApprovalForAll(owner, operator, approved)\"\n                let _2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(64)\n                /// @src 7:11734:11775  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_2, sub(abi_encode_bool(_2, value), _2), 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:11734:11775  \"ApprovalForAll(owner, operator, approved)\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_19401(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19407(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function external_fun_safeTransferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_12665()\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                fun_safeTransferFrom(value0, value1, calldataload(68), abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize()))\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function external_fun_setBaseUrl()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let offset := calldataload(4)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                let cleaned := and(sload(/** @src 4:1108:1114  \"_owner\" */ 0x0a), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))\n                /// @src 4:1240:1308  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                require_helper_stringliteral(/** @src 4:1248:1271  \"owner() == _msgSender()\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ cleaned, /** @src 14:719:729  \"msg.sender\" */ caller()))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let newLen := mload(array)\n                if gt(newLen, _2) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 20:1765:1779  \"_url = _newUrl\" */ 0x0e)), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ newLen)\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                srcOffset := _1\n                switch gt(newLen, 0x1f)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    for { } lt(i, loopEnd) { i := add(i, _1) }\n                    {\n                        sstore(dstPtr, mload(add(array, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, _1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(array, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(/** @src 20:1765:1779  \"_url = _newUrl\" */ 0x0e, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    if newLen\n                    {\n                        value := mload(add(array, srcOffset))\n                    }\n                    sstore(/** @src 20:1765:1779  \"_url = _newUrl\" */ 0x0e, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := calldataload(4)\n                if iszero(/** @src 7:2924:2940  \"_exists(tokenId)\" */ fun_exists(value0))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 47)\n                    mstore(add(memPtr, 68), \"ERC721Metadata: URI query for no\")\n                    mstore(add(memPtr, 100), \"nexistent token\")\n                    revert(memPtr, 132)\n                }\n                let converted := copy_array_from_storage_to_memory_string()\n                /// @src 7:3054:3079  \"bytes(baseURI).length > 0\"\n                let expr := iszero(iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(/** @src 7:3054:3068  \"bytes(baseURI)\" */ converted)))\n                /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                let expr_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                switch expr\n                case 0 {\n                    expr_mpos := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ allocate_memory_array_string()\n                }\n                default /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                {\n                    /// @src 7:3115:3133  \"tokenId.toString()\"\n                    let expr_mpos_1 := fun_toString(value0)\n                    /// @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\"\n                    let expr_mpos_2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(64)\n                    /// @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\"\n                    let _1 := sub(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ abi_encode_string_memory_ptr(/** @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\" */ expr_mpos_1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ abi_encode_string_memory_ptr(/** @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\" */ converted, add(expr_mpos_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 32))), /** @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\" */ expr_mpos_2)\n                    mstore(expr_mpos_2, add(_1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ not(31)))\n                    /// @src 7:3089:3134  \"abi.encodePacked(baseURI, tokenId.toString())\"\n                    finalize_allocation(expr_mpos_2, _1)\n                    /// @src 7:3054:3140  \"bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                    expr_mpos := expr_mpos_2\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, expr_mpos), memPos))\n            }\n            function external_fun_getRoleMemberCount()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ calldataload(4))\n                mstore(32, /** @src 1:1856:1868  \"_roleMembers\" */ 0x0c)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let length := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, length)\n                return(memPos, 32)\n            }\n            function external_fun_MINTER_ROLE()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 20:755:779  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(memPos, 32)\n            }\n            function external_fun_revokeRole()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := calldataload(4)\n                let value1 := abi_decode_address_12665()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ value0)\n                mstore(32, /** @src 0:4491:4497  \"_roles\" */ 0x0b)\n                /// @src 0:2516:2520  \"role\"\n                fun_checkRole(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 0:4491:4513  \"_roles[role].adminRole\" */ add(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), /** @src 0:4491:4513  \"_roles[role].adminRole\" */ 1)))\n                /// @src 0:5281:5288  \"account\"\n                fun_revokeRole(value0, value1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function abi_encode_array_uint256_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function external_fun_listTokenIds()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                /// @src 20:1517:1533  \"balanceOf(owner)\"\n                let expr := fun_balanceOf(value0)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _2 := array_allocation_size_array_uint256_dyn(expr)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, expr)\n                calldatacopy(add(memPtr, _1), calldatasize(), add(array_allocation_size_array_uint256_dyn(expr), not(31)))\n                /// @src 20:1595:1605  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 20:1591:1675  \"for(uint i = 0; i<balance; i++){...\"\n                for { }\n                /** @src 20:1607:1616  \"i<balance\" */ lt(var_i, expr)\n                /// @src 20:1595:1605  \"uint i = 0\"\n                {\n                    /// @src 20:1618:1621  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 20:1639:1668  \"tokenOfOwnerByIndex(owner, i)\"\n                    let _3 := fun_tokenOfOwnerByIndex(value0, var_i)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    if iszero(lt(var_i, mload(memPtr))) { panic_error_0x32() }\n                    mstore(add(add(memPtr, shl(5, var_i)), _1), _3)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_12665()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 7:4623:4641  \"_operatorApprovals\" */ 0x05)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value := and(sload(/** @src 7:4623:4658  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function external_fun_transferOwnership()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let value0 := abi_decode_address()\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(/** @src 4:1108:1114  \"_owner\" */ 0x0a), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                /// @src 4:1240:1308  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                require_helper_stringliteral(/** @src 4:1248:1271  \"owner() == _msgSender()\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ cleaned, /** @src 14:719:729  \"msg.sender\" */ caller()))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if /** @src 4:2006:2028  \"newOwner != address(0)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 4:2006:2028  \"newOwner != address(0)\" */ value0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 4:2100:2108  \"newOwner\"\n                fun_transferOwnership(value0)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12666(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 1:2106:2118  \"_roleMembers\" */ 0x0c)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12721(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 7:10938:10945  \"_owners\" */ 0x02)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12723(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 10:5024:5041  \"_ownedTokensIndex\" */ 0x07)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12738(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 10:6264:6279  \"_allTokensIndex\" */ 0x09)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(slot, key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_12661(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:4623:4641  \"_operatorApprovals\" */ 0x05)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_12717(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:10880:10889  \"_balances\" */ 0x03)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_12722(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 10:5220:5232  \"_ownedTokens\" */ 0x06)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function extract_from_storage_value_offsett_bool(slot_value) -> value\n            {\n                value := and(slot_value, 0xff)\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            /// @ast-id 92 @src 0:3334:3437  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_role)\n                mstore(0x20, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n                /// @src 0:3801:4204  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3805:3828  \"!hasRole(role, account)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(/** @src 0:3004:3033  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), /** @src 14:719:729  \"msg.sender\" */ caller())), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0xff))\n                /// @src 0:3801:4204  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3989:4030  \"Strings.toHexString(uint160(account), 20)\"\n                    let var_value := /** @src 14:719:729  \"msg.sender\" */ caller()\n                    /// @src 16:1710:1735  \"new bytes(2 * length + 2)\"\n                    let expr_mpos := allocate_and_zero_memory_array_bytes_22735()\n                    /// @src 16:1745:1760  \"buffer[0] = \\\"0\\\"\"\n                    mstore8(memory_array_index_access_bytes_12751(expr_mpos), 48)\n                    /// @src 16:1770:1785  \"buffer[1] = \\\"x\\\"\"\n                    mstore8(memory_array_index_access_bytes_12752(expr_mpos), 120)\n                    /// @src 16:1800:1826  \"uint256 i = 2 * length + 1\"\n                    let var_i := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 41\n                    /// @src 16:1795:1927  \"for (uint256 i = 2 * length + 1; i > 1; --i) {...\"\n                    for { }\n                    /** @src 16:1828:1833  \"i > 1\" */ gt(var_i, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 1)\n                    /// @src 16:1800:1826  \"uint256 i = 2 * length + 1\"\n                    {\n                        /// @src 16:1835:1838  \"--i\"\n                        var_i := decrement_uint256(var_i)\n                    }\n                    {\n                        /// @src 16:1879:1890  \"value & 0xf\"\n                        let expr := and(var_value, /** @src 16:1887:1890  \"0xf\" */ 0x0f)\n                        /// @src 16:1866:1891  \"_HEX_SYMBOLS[value & 0xf]\"\n                        if iszero(lt(expr, 16)) { panic_error_0x32() }\n                        /// @src 16:1854:1891  \"buffer[i] = _HEX_SYMBOLS[value & 0xf]\"\n                        mstore8(memory_array_index_access_bytes(expr_mpos, var_i), /** @src 16:1866:1891  \"_HEX_SYMBOLS[value & 0xf]\" */ byte(expr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(129, 0x181899199a1a9b1b9c1cb0b131b232b3)))\n                        /// @src 16:1905:1916  \"value >>= 4\"\n                        var_value := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shr(4, /** @src 16:1905:1916  \"value >>= 4\" */ var_value)\n                    }\n                    /// @src 16:1936:1991  \"require(value == 0, \\\"Strings: hex length insufficient\\\")\"\n                    require_helper_stringliteral_04fc(/** @src 16:1944:1954  \"value == 0\" */ iszero(var_value))\n                    /// @src 0:4101:4139  \"Strings.toHexString(uint256(role), 32)\"\n                    let expr_mpos_1 := fun_toHexString(var_role)\n                    /// @src 0:3896:4161  \"abi.encodePacked(...\"\n                    let expr_mpos_2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(0x40)\n                    /// @src 0:3896:4161  \"abi.encodePacked(...\"\n                    let _1 := sub(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ abi_encode_string_memory_ptr(/** @src 0:3896:4161  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ abi_encode_stringliteral_f986(abi_encode_string_memory_ptr(/** @src 0:3896:4161  \"abi.encodePacked(...\" */ expr_mpos, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ abi_encode_stringliteral_da0d(/** @src 0:3896:4161  \"abi.encodePacked(...\" */ add(expr_mpos_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x20))))), /** @src 0:3896:4161  \"abi.encodePacked(...\" */ expr_mpos_2)\n                    mstore(expr_mpos_2, add(_1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ not(31)))\n                    /// @src 0:3896:4161  \"abi.encodePacked(...\"\n                    finalize_allocation(expr_mpos_2, _1)\n                    /// @src 0:3844:4193  \"revert(...\"\n                    let _2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(0x40)\n                    /// @src 0:3844:4193  \"revert(...\"\n                    mstore(_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(229, 4594637))\n                    /// @src 0:3844:4193  \"revert(...\"\n                    revert(_2, sub(abi_encode_string(add(_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 4), /** @src 0:3844:4193  \"revert(...\" */ expr_mpos_2), _2))\n                }\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function abi_encode_stringliteral_da0d(pos) -> end\n            {\n                mstore(pos, \"AccessControl: account \")\n                end := add(pos, 23)\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            function abi_encode_stringliteral_f986(pos) -> end\n            {\n                mstore(pos, \" is missing role \")\n                end := add(pos, 17)\n            }\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            /// @ast-id 443 @src 1:2233:2404  \"function _revokeRole(bytes32 role, address account) internal virtual override {...\"\n            function fun_revokeRole(var_role, var_account)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_role)\n                mstore(0x20, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n                /// @src 0:7681:7830  \"if (hasRole(role, account)) {...\"\n                if /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(/** @src 0:3004:3033  \"_roles[role].members[account]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), /** @src 0:7685:7707  \"hasRole(role, account)\" */ var_account)), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0xff)\n                /// @src 0:7681:7830  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_role)\n                    mstore(0x20, /** @src 0:3004:3010  \"_roles\" */ 0x0b)\n                    /// @src 0:7723:7752  \"_roles[role].members[account]\"\n                    let _2 := mapping_index_access_mapping_address_bool_of_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), /** @src 0:7723:7752  \"_roles[role].members[account]\" */ var_account)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    sstore(_2, and(sload(_2), not(255)))\n                    /// @src 0:7779:7819  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src -1:-1:-1 */ _1, _1, /** @src 0:7779:7819  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 0:7779:7819  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)), /** @src 14:719:729  \"msg.sender\" */ caller())\n                }\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_role)\n                mstore(0x20, /** @src 1:2363:2375  \"_roleMembers\" */ 0x0c)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)\n                /// @src 19:8041:8094  \"_remove(set._inner, bytes32(uint256(uint160(value))))\"\n                pop(fun_remove(_3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 19:8077:8091  \"uint160(value)\" */ var_account, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))))\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 646 @src 4:2270:2457  \"function _transferOwnership(address newOwner) internal virtual {...\"\n            function fun_transferOwnership(var_newOwner)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sload(/** @src 4:2362:2368  \"_owner\" */ 0x0a)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := and(var_newOwner, _2)\n                sstore(/** @src 4:2362:2368  \"_owner\" */ 0x0a, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), _3))\n                /// @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(_1, _2), /** @src 4:2410:2450  \"OwnershipTransferred(oldOwner, newOwner)\" */ _3)\n            }\n            /// @ast-id 1067 @src 7:1929:2134  \"function balanceOf(address owner) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_owner) -> var\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := and(/** @src 7:2028:2047  \"owner != address(0)\" */ var_owner, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))\n                if /** @src 7:2028:2047  \"owner != address(0)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC721: balance query for the ze\")\n                    mstore(add(memPtr, 100), \"ro address\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 7:2045:2046  \"0\" */ 0x00, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                mstore(0x20, /** @src 7:2111:2120  \"_balances\" */ 0x03)\n                /// @src 7:2104:2127  \"return _balances[owner]\"\n                var := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(keccak256(/** @src 7:2045:2046  \"0\" */ 0x00, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n            }\n            /// @ast-id 1095 @src 7:2191:2426  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:2298:2305  \"_owners\" */ 0x02)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)), sub(shl(160, 1), 1))\n                if /** @src 7:2332:2351  \"owner != address(0)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ cleaned)\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC721: owner query for nonexist\")\n                    mstore(add(memPtr, 100), \"ent token\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:2407:2419  \"return owner\"\n                var := cleaned\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 20:1765:1779  \"_url = _newUrl\" */ 0x0e)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                data := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let slotValue := sload(/** @src 20:1038:1042  \"_url\" */ 0x0e)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1038:1042  \"_url\" */ 0x0e)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let dataPos := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function allocate_memory_array_string() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_19401(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function require_helper_stringliteral_6d83(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 56)\n                    mstore(add(memPtr, 68), \"ERC721: approve caller is not ow\")\n                    mstore(add(memPtr, 100), \"ner nor approved for all\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1230 @src 7:4000:4217  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(/** @src 7:4103:4119  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"ERC721: approved query for nonex\")\n                    mstore(add(memPtr, 100), \"istent token\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:4186:4201  \"_tokenApprovals\" */ 0x04)\n                /// @src 7:4179:4210  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_c868(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 49)\n                    mstore(add(memPtr, 68), \"ERC721: transfer caller is not o\")\n                    mstore(add(memPtr, 100), \"wner nor approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1341 @src 7:5368:5688  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_1320_mpos)\n            {\n                /// @src 7:5529:5632  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\")\"\n                require_helper_stringliteral_c868(/** @src 7:5537:5578  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:5537:5578  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 7:6721:6728  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(/** @src 7:6747:6795  \"_checkOnERC721Received(from, to, tokenId, _data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_1320_mpos))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1388 @src 7:7160:7285  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:7248:7255  \"_owners\" */ 0x02)\n                /// @src 7:7241:7278  \"return _owners[tokenId] != address(0)\"\n                var := /** @src 7:7248:7278  \"_owners[tokenId] != address(0)\" */ iszero(iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)), sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1429 @src 7:7443:7787  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(/** @src 7:7560:7576  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"ERC721: operator query for nonex\")\n                    mstore(add(memPtr, 100), \"istent token\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:7651:7674  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 7:7692:7708  \"spender == owner\"\n                let _2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:7692:7708  \"spender == owner\" */ var_spender, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                /// @src 7:7692:7744  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr_1 := /** @src 7:7692:7708  \"spender == owner\" */ eq(_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:7692:7708  \"spender == owner\" */ expr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1))\n                /// @src 7:7692:7744  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(sload(/** @src 7:4623:4658  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 7:4623:4648  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_bool_of_address_12661(/** @src 7:7712:7744  \"isApprovedForAll(owner, spender)\" */ expr), var_spender)), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0xff)\n                }\n                /// @src 7:7692:7779  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_2 := expr_1\n                if iszero(expr_1)\n                {\n                    expr_2 := /** @src 7:7748:7779  \"getApproved(tokenId) == spender\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:7748:7768  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1), /** @src 7:7748:7779  \"getApproved(tokenId) == spender\" */ _2)\n                }\n                /// @src 7:7684:7780  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_2\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function require_helper_stringliteral_455f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x) -> diff\n            {\n                diff := add(x, not(0))\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            function checked_add_uint256_12720(x) -> sum\n            {\n                sum := add(x, /** @src 7:10899:10900  \"1\" */ 0x01)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256(y) -> sum\n            {\n                sum := add(/** @src 16:932:934  \"48\" */ 0x30, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ y)\n                if gt(/** @src 16:932:934  \"48\" */ 0x30, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sum) { panic_error_0x11() }\n            }\n            /// @ast-id 1674 @src 7:10453:11058  \"function _transfer(...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 7:10580:10603  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 7:10580:10611  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                if iszero(/** @src 7:10580:10611  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:10580:10611  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1), _2))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 7:10671:10687  \"to != address(0)\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                /// @src 7:10663:10728  \"require(to != address(0), \\\"ERC721: transfer to the zero address\\\")\"\n                require_helper_stringliteral_455f(/** @src 7:10671:10687  \"to != address(0)\" */ iszero(iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _3)))\n                /// @src 7:10770:10777  \"tokenId\"\n                fun_beforeTokenTransfer(var_from, var_to, var_tokenId)\n                /// @src 7:10861:10868  \"tokenId\"\n                fun_approve_12716(var_tokenId)\n                /// @src 7:10880:10895  \"_balances[from]\"\n                let _4 := mapping_index_access_mapping_address_bool_of_address_12717(var_from)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(_4, /** @src 7:10880:10900  \"_balances[from] -= 1\" */ checked_sub_uint256(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 7:10880:10900  \"_balances[from] -= 1\" */ _4)))\n                /// @src 7:10910:10923  \"_balances[to]\"\n                let _5 := mapping_index_access_mapping_address_bool_of_address_12717(var_to)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(_5, /** @src 7:10910:10928  \"_balances[to] += 1\" */ checked_add_uint256_12720(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 7:10910:10928  \"_balances[to] += 1\" */ _5)))\n                /// @src 7:10938:10959  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 7:10938:10954  \"_owners[tokenId]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12721(var_tokenId), /** @src 7:10938:10959  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 7:10975:11002  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 7:10685:10686  \"0\" */ 0x00, 0x00, /** @src 7:10975:11002  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 1698 @src 7:11169:11340  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve_12716(var_tokenId)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 7:11243:11258  \"_tokenApprovals\" */ 0x04)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := keccak256(0, 0x40)\n                sstore(_1, and(sload(_1), shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0, 0, /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:11296:11319  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)), 0, /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @ast-id 1698 @src 7:11169:11340  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve(var_to, var_tokenId)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:11243:11258  \"_tokenApprovals\" */ 0x04)\n                /// @src 7:11243:11272  \"_tokenApprovals[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), /** @src 7:11243:11272  \"_tokenApprovals[tokenId] = to\" */ var_to)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 7:11296:11319  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                /// @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src -1:-1:-1 */ 0, 0, /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1), /** @src 7:11287:11333  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 1792 @src 7:12335:13113  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 7:12485:12489  \"bool\"\n                var := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0\n                /// @src 7:12501:13107  \"if (to.isContract()) {...\"\n                switch /** @src 13:1465:1488  \"account.code.length > 0\" */ iszero(iszero(/** @src 13:1465:1484  \"account.code.length\" */ extcodesize(/** @src 7:12505:12520  \"to.isContract()\" */ var_to)))\n                case /** @src 7:12501:13107  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 7:13085:13096  \"return true\"\n                    var := /** @src 7:13092:13096  \"true\" */ 0x01\n                    /// @src 7:13085:13096  \"return true\"\n                    leave\n                }\n                default /// @src 7:12501:13107  \"if (to.isContract()) {...\"\n                {\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    let _1 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(64)\n                    let _2 := shl(225, 0x0a85bd01)\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    mstore(_1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    let trySuccessCondition := call(gas(), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:12540:12559  \"IERC721Receiver(to)\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)), 0, /** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, 4), /** @src 14:719:729  \"msg.sender\" */ caller(), /** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ var_from, var_tokenId, var_data_mpos), _1), _1, 32)\n                    let expr := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0\n                    /// @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\"\n                    if trySuccessCondition\n                    {\n                        let _3 := 32\n                        if gt(_3, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        expr := abi_decode_bytes4_fromMemory(_1, add(_1, _3))\n                    }\n                    /// @src 7:12536:13055  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 7:12655:12713  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 7:12662:12713  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 7:12662:12713  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(224, 0xffffffff)), _2)\n                        /// @src 7:12655:12713  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 7:12536:13055  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 7:12729:13055  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 7:12779:12792  \"reason.length\"\n                        let expr_1 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(/** @src 7:12779:12792  \"reason.length\" */ var_reason_mpos)\n                        /// @src 7:12775:13041  \"if (reason.length == 0) {...\"\n                        switch /** @src 7:12779:12797  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 7:12775:13041  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 7:12928:13023  \"assembly {...\"\n                            revert(add(/** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ 32, /** @src 7:12928:13023  \"assembly {...\" */ var_reason_mpos), expr_1)\n                        }\n                        default /// @src 7:12775:13041  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _4 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(64)\n                            /// @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_4, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(229, 4594637))\n                            /// @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_4, sub(abi_encode_stringliteral_1e76(add(_4, /** @src 7:12540:12612  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\" */ 4)), /** @src 7:12821:12881  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _4))\n                        }\n                    }\n                }\n            }\n            /// @ast-id 2027 @src 10:1291:1544  \"function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {...\"\n            function fun_tokenOfOwnerByIndex(var_owner, var_index) -> var\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(/** @src 10:1415:1446  \"index < ERC721.balanceOf(owner)\" */ lt(var_index, /** @src 10:1423:1446  \"ERC721.balanceOf(owner)\" */ fun_balanceOf(var_owner)))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 43)\n                    mstore(add(memPtr, 68), \"ERC721Enumerable: owner index ou\")\n                    mstore(add(memPtr, 100), \"t of bounds\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(var_owner, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 10:1511:1523  \"_ownedTokens\" */ 0x06)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_index)\n                mstore(0x20, dataSlot)\n                /// @src 10:1504:1537  \"return _ownedTokens[owner][index]\"\n                var := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function storage_array_index_access_uint256_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array))) { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 2125 @src 10:2624:3196  \"function _beforeTokenTransfer(...\"\n            function fun_beforeTokenTransfer_12760(var_to, var_tokenId)\n            {\n                /// @src 10:2889:2896  \"tokenId\"\n                fun_addTokenToAllTokensEnumeration(var_tokenId)\n                /// @src 10:3011:3190  \"if (to == address(0)) {...\"\n                switch /** @src 10:3015:3031  \"to == address(0)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 10:3015:3031  \"to == address(0)\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)))\n                case /** @src 10:3011:3190  \"if (to == address(0)) {...\" */ 0 {\n                    /// @src 10:3171:3178  \"tokenId\"\n                    fun_addTokenToOwnerEnumeration(var_to, var_tokenId)\n                }\n                default /// @src 10:3011:3190  \"if (to == address(0)) {...\"\n                {\n                    /// @src 10:3084:3091  \"tokenId\"\n                    fun_removeTokenFromAllTokensEnumeration(var_tokenId)\n                }\n            }\n            /// @ast-id 2125 @src 10:2624:3196  \"function _beforeTokenTransfer(...\"\n            function fun_beforeTokenTransfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 10:2823:2841  \"from == address(0)\"\n                let _2 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 10:2823:2841  \"from == address(0)\" */ var_from, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                /// @src 10:2819:3002  \"if (from == address(0)) {...\"\n                switch /** @src 10:2823:2841  \"from == address(0)\" */ iszero(_2)\n                case /** @src 10:2819:3002  \"if (from == address(0)) {...\" */ 0 {\n                    /// @src 10:2914:3002  \"if (from != to) {...\"\n                    if /** @src 10:2918:2928  \"from != to\" */ iszero(eq(_2, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 10:2918:2928  \"from != to\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)))\n                    /// @src 10:2914:3002  \"if (from != to) {...\"\n                    {\n                        /// @src 10:4967:4989  \"ERC721.balanceOf(from)\"\n                        let expr := fun_balanceOf(var_from)\n                        /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                        let diff := add(expr, not(0))\n                        if gt(diff, expr) { panic_error_0x11() }\n                        /// @src 10:2839:2840  \"0\"\n                        let _3 := 0x00\n                        /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                        mstore(/** @src 10:2839:2840  \"0\" */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                        mstore(0x20, /** @src 10:5024:5041  \"_ownedTokensIndex\" */ 0x07)\n                        /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                        let _4 := sload(keccak256(/** @src 10:2839:2840  \"0\" */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n                        /// @src 10:5150:5473  \"if (tokenIndex != lastTokenIndex) {...\"\n                        if /** @src 10:5154:5182  \"tokenIndex != lastTokenIndex\" */ iszero(eq(_4, diff))\n                        /// @src 10:5150:5473  \"if (tokenIndex != lastTokenIndex) {...\"\n                        {\n                            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                            mstore(/** @src 10:2839:2840  \"0\" */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n                            mstore(0x20, /** @src 10:5220:5232  \"_ownedTokens\" */ 0x06)\n                            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                            let dataSlot := keccak256(/** @src 10:2839:2840  \"0\" */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)\n                            mstore(/** @src 10:2839:2840  \"0\" */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ diff)\n                            mstore(0x20, dataSlot)\n                            let _5 := sload(keccak256(/** @src 10:2839:2840  \"0\" */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n                            sstore(/** @src 10:5269:5299  \"_ownedTokens[from][tokenIndex]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(/** @src 10:5269:5287  \"_ownedTokens[from]\" */ mapping_index_access_mapping_address_bool_of_address_12722(var_from), /** @src 10:5269:5299  \"_ownedTokens[from][tokenIndex]\" */ _4), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _5)\n                            sstore(/** @src 10:5385:5415  \"_ownedTokensIndex[lastTokenId]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12723(_5), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _4)\n                        }\n                        sstore(/** @src 10:5566:5592  \"_ownedTokensIndex[tokenId]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12723(var_tokenId), /** @src 10:2839:2840  \"0\" */ _3)\n                        /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                        sstore(/** @src 10:5609:5643  \"_ownedTokens[from][lastTokenIndex]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(/** @src 10:5609:5627  \"_ownedTokens[from]\" */ mapping_index_access_mapping_address_bool_of_address_12722(var_from), /** @src 10:5609:5643  \"_ownedTokens[from][lastTokenIndex]\" */ diff), /** @src 10:2839:2840  \"0\" */ _3)\n                    }\n                }\n                default /// @src 10:2819:3002  \"if (from == address(0)) {...\"\n                {\n                    /// @src 10:2889:2896  \"tokenId\"\n                    fun_addTokenToAllTokensEnumeration(var_tokenId)\n                }\n                /// @src 10:3015:3031  \"to == address(0)\"\n                let _6 := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 10:3015:3031  \"to == address(0)\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                /// @src 10:3011:3190  \"if (to == address(0)) {...\"\n                switch /** @src 10:3015:3031  \"to == address(0)\" */ iszero(_6)\n                case /** @src 10:3011:3190  \"if (to == address(0)) {...\" */ 0 {\n                    /// @src 10:3109:3190  \"if (to != from) {...\"\n                    if /** @src 10:3113:3123  \"to != from\" */ iszero(eq(_6, _2))\n                    /// @src 10:3109:3190  \"if (to != from) {...\"\n                    {\n                        /// @src 10:3171:3178  \"tokenId\"\n                        fun_addTokenToOwnerEnumeration(var_to, var_tokenId)\n                    }\n                }\n                default /// @src 10:3011:3190  \"if (to == address(0)) {...\"\n                {\n                    /// @src 10:3084:3091  \"tokenId\"\n                    fun_removeTokenFromAllTokensEnumeration(var_tokenId)\n                }\n            }\n            /// @ast-id 2155 @src 10:3490:3707  \"function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {...\"\n            function fun_addTokenToOwnerEnumeration(var_to, var_tokenId)\n            {\n                /// @src 10:3591:3611  \"ERC721.balanceOf(to)\"\n                let expr := fun_balanceOf(var_to)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(var_to, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 10:3621:3633  \"_ownedTokens\" */ 0x06)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ expr)\n                mstore(0x20, dataSlot)\n                sstore(keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), var_tokenId)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 10:3665:3682  \"_ownedTokensIndex\" */ 0x07)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), expr)\n            }\n            function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result\n            {\n                let shiftBits := shl(3, shiftBytes)\n                result := or(and(value, not(shl(shiftBits, not(0)))), shl(shiftBits, toInsert))\n            }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, value))\n            }\n            /// @ast-id 2175 @src 10:3902:4063  \"function _addTokenToAllTokensEnumeration(uint256 tokenId) private {...\"\n            function fun_addTokenToAllTokensEnumeration(var_tokenId)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := sload(/** @src 10:4005:4015  \"_allTokens\" */ 0x08)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 10:3978:3993  \"_allTokensIndex\" */ 0x09)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), _1)\n                if iszero(lt(_1, 18446744073709551616)) { panic_error_0x41() }\n                let _2 := add(_1, 1)\n                sstore(/** @src 10:4005:4015  \"_allTokens\" */ 0x08, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n                if iszero(lt(_1, _2)) { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:4005:4015  \"_allTokens\" */ 0x08)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(add(110349606679412691172957834289542550319383271247755660854362242977991410020067, _1), var_tokenId)\n            }\n            function panic_error_0x31()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x31)\n                revert(0, 0x24)\n            }\n            /// @ast-id 2286 @src 10:5938:6999  \"function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {...\"\n            function fun_removeTokenFromAllTokensEnumeration(var_tokenId)\n            {\n                /// @src 10:6212:6222  \"_allTokens\"\n                let _1 := 0x08\n                /// @src 10:6212:6229  \"_allTokens.length\"\n                let expr := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 10:6212:6222  \"_allTokens\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _2 := not(0)\n                let diff := add(expr, _2)\n                if gt(diff, expr) { panic_error_0x11() }\n                /// @src -1:-1:-1\n                let _3 := 0\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_tokenId)\n                mstore(0x20, /** @src 10:6264:6279  \"_allTokensIndex\" */ 0x09)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _4 := sload(keccak256(/** @src -1:-1:-1 */ _3, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n                if iszero(lt(diff, expr)) { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 10:6212:6222  \"_allTokens\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _5 := 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee2\n                let _6 := sload(add(expr, _5))\n                if iszero(lt(_4, expr)) { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 10:6212:6222  \"_allTokens\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(add(110349606679412691172957834289542550319383271247755660854362242977991410020067, _4), _6)\n                sstore(/** @src 10:6773:6801  \"_allTokensIndex[lastTokenId]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12738(_6), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _4)\n                sstore(/** @src 10:6942:6966  \"_allTokensIndex[tokenId]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12738(var_tokenId), /** @src -1:-1:-1 */ _3)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let oldLen := sload(/** @src 10:6212:6222  \"_allTokens\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                if iszero(oldLen) { panic_error_0x31() }\n                let newLen := add(oldLen, _2)\n                if iszero(lt(newLen, oldLen)) { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 10:6212:6222  \"_allTokens\" */ _1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(add(oldLen, _5), /** @src -1:-1:-1 */ _3)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(/** @src 10:6212:6222  \"_allTokens\" */ _1, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ newLen)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function allocate_and_zero_memory_array_bytes_22735() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr_1, 42)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 0x20), calldatasize(), 64)\n            }\n            function allocate_and_zero_memory_array_bytes(length) -> memPtr\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_bytes(length), not(31)))\n            }\n            function convert_uint8_to_bytes1(value) -> converted\n            {\n                converted := and(shl(248, value), shl(248, 255))\n            }\n            function memory_array_index_access_bytes_12751(baseRef) -> addr\n            {\n                if iszero(mload(baseRef)) { panic_error_0x32() }\n                addr := add(baseRef, 32)\n            }\n            function memory_array_index_access_bytes_12752(baseRef) -> addr\n            {\n                if iszero(lt(/** @src 16:1777:1778  \"1\" */ 0x01, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(baseRef))) { panic_error_0x32() }\n                addr := add(baseRef, 33)\n            }\n            function memory_array_index_access_bytes(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, index), 32)\n            }\n            /// @ast-id 2821 @src 16:328:1031  \"function toString(uint256 value) internal pure returns (string memory) {...\"\n            function fun_toString(var_value) -> var_2748_mpos\n            {\n                /// @src 16:597:648  \"if (value == 0) {...\"\n                if /** @src 16:601:611  \"value == 0\" */ iszero(var_value)\n                /// @src 16:597:648  \"if (value == 0) {...\"\n                {\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let memPtr := mload(64)\n                    finalize_allocation_19407(memPtr)\n                    mstore(memPtr, 1)\n                    mstore(add(memPtr, 32), \"0\")\n                    /// @src 16:627:637  \"return \\\"0\\\"\"\n                    var_2748_mpos := memPtr\n                    leave\n                }\n                /// @src 16:657:677  \"uint256 temp = value\"\n                let var_temp := var_value\n                /// @src 16:687:701  \"uint256 digits\"\n                let var_digits := /** @src 16:610:611  \"0\" */ 0x00\n                /// @src 16:687:701  \"uint256 digits\"\n                let var_digits_1 := /** @src 16:610:611  \"0\" */ var_digits\n                /// @src 16:711:786  \"while (temp != 0) {...\"\n                for { }\n                /** @src 16:718:727  \"temp != 0\" */ var_temp\n                /// @src 16:711:786  \"while (temp != 0) {...\"\n                { }\n                {\n                    /// @src 16:743:751  \"digits++\"\n                    var_digits_1 := increment_uint256(var_digits_1)\n                    /// @src 16:765:775  \"temp /= 10\"\n                    var_temp := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ div(/** @src 16:765:775  \"temp /= 10\" */ var_temp, /** @src 16:773:775  \"10\" */ 0x0a)\n                }\n                /// @src 16:795:834  \"bytes memory buffer = new bytes(digits)\"\n                let var_buffer_mpos := /** @src 16:817:834  \"new bytes(digits)\" */ allocate_and_zero_memory_array_bytes(var_digits_1)\n                /// @src 16:844:994  \"while (value != 0) {...\"\n                for { }\n                /** @src 16:851:861  \"value != 0\" */ var_value\n                /// @src 16:844:994  \"while (value != 0) {...\"\n                { }\n                {\n                    /// @src 16:877:888  \"digits -= 1\"\n                    let expr := checked_sub_uint256(var_digits_1)\n                    let var_digits_2 := expr\n                    var_digits_1 := expr\n                    /// @src 16:773:775  \"10\"\n                    let _1 := 0x0a\n                    /// @src 16:902:958  \"buffer[digits] = bytes1(uint8(48 + uint256(value % 10)))\"\n                    mstore8(memory_array_index_access_bytes(var_buffer_mpos, var_digits_2), byte(/** @src 16:610:611  \"0\" */ var_digits, /** @src 16:919:958  \"bytes1(uint8(48 + uint256(value % 10)))\" */ convert_uint8_to_bytes1(/** @src 16:926:957  \"uint8(48 + uint256(value % 10))\" */ extract_from_storage_value_offsett_bool(/** @src 16:932:956  \"48 + uint256(value % 10)\" */ checked_add_uint256(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mod(/** @src 16:945:955  \"value % 10\" */ var_value, /** @src 16:773:775  \"10\" */ _1))))))\n                    /// @src 16:972:983  \"value /= 10\"\n                    var_value := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ div(/** @src 16:972:983  \"value /= 10\" */ var_value, /** @src 16:773:775  \"10\" */ _1)\n                }\n                /// @src 16:1003:1024  \"return string(buffer)\"\n                var_2748_mpos := var_buffer_mpos\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function decrement_uint256(value) -> ret\n            {\n                if iszero(value) { panic_error_0x11() }\n                ret := add(value, not(0))\n            }\n            /// @src 16:208:226  \"\\\"0123456789abcdef\\\"\"\n            function require_helper_stringliteral_04fc(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ mload(64)\n                    /// @src 16:208:226  \"\\\"0123456789abcdef\\\"\"\n                    mstore(memPtr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(229, 4594637))\n                    /// @src 16:208:226  \"\\\"0123456789abcdef\\\"\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(/** @src 16:208:226  \"\\\"0123456789abcdef\\\"\" */ add(memPtr, 36), 32)\n                    mstore(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ add(/** @src 16:208:226  \"\\\"0123456789abcdef\\\"\" */ memPtr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 68), /** @src 16:208:226  \"\\\"0123456789abcdef\\\"\" */ \"Strings: hex length insufficient\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2938 @src 16:1588:2029  \"function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {...\"\n            function fun_toHexString(var_value) -> var_mpos\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 66)\n                calldatacopy(add(memPtr, 0x20), calldatasize(), 96)\n                /// @src 16:1745:1760  \"buffer[0] = \\\"0\\\"\"\n                mstore8(memory_array_index_access_bytes_12751(memPtr), 48)\n                /// @src 16:1770:1785  \"buffer[1] = \\\"x\\\"\"\n                mstore8(memory_array_index_access_bytes_12752(memPtr), 120)\n                /// @src 16:1800:1826  \"uint256 i = 2 * length + 1\"\n                let var_i := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 65\n                /// @src 16:1795:1927  \"for (uint256 i = 2 * length + 1; i > 1; --i) {...\"\n                for { }\n                /** @src 16:1828:1833  \"i > 1\" */ gt(var_i, /** @src 7:10899:10900  \"1\" */ 0x01)\n                /// @src 16:1800:1826  \"uint256 i = 2 * length + 1\"\n                {\n                    /// @src 16:1835:1838  \"--i\"\n                    var_i := decrement_uint256(var_i)\n                }\n                {\n                    /// @src 16:1879:1890  \"value & 0xf\"\n                    let expr := and(var_value, /** @src 16:1887:1890  \"0xf\" */ 0x0f)\n                    /// @src 16:1866:1891  \"_HEX_SYMBOLS[value & 0xf]\"\n                    if iszero(lt(expr, 16)) { panic_error_0x32() }\n                    /// @src 16:1854:1891  \"buffer[i] = _HEX_SYMBOLS[value & 0xf]\"\n                    mstore8(memory_array_index_access_bytes(memPtr, var_i), /** @src 16:1866:1891  \"_HEX_SYMBOLS[value & 0xf]\" */ byte(expr, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shl(129, 0x181899199a1a9b1b9c1cb0b131b232b3)))\n                    /// @src 16:1905:1916  \"value >>= 4\"\n                    var_value := /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ shr(4, /** @src 16:1905:1916  \"value >>= 4\" */ var_value)\n                }\n                /// @src 16:1936:1991  \"require(value == 0, \\\"Strings: hex length insufficient\\\")\"\n                require_helper_stringliteral_04fc(/** @src 16:1944:1954  \"value == 0\" */ iszero(var_value))\n                /// @src 16:2001:2022  \"return string(buffer)\"\n                var_mpos := memPtr\n            }\n            /// @ast-id 3314 @src 19:7627:7777  \"function add(AddressSet storage set, address value) internal returns (bool) {...\"\n            function fun_add_3314(var_set_slot, var_value) -> var\n            {\n                /// @src 19:7713:7770  \"return _add(set._inner, bytes32(uint256(uint160(value))))\"\n                var := /** @src 19:7720:7770  \"_add(set._inner, bytes32(uint256(uint160(value))))\" */ fun_add(var_set_slot, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ and(/** @src 19:7753:7767  \"uint160(value)\" */ var_value, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 3028 @src 19:1712:2116  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add(var_set_2990_slot, var_value) -> var_\n            {\n                /// @src 19:3849:3861  \"set._indexes\"\n                let _1 := add(var_set_2990_slot, 1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_value)\n                mstore(0x20, _1)\n                /// @src 19:1791:2110  \"if (!_contains(set, value)) {...\"\n                switch /** @src 19:3849:3873  \"set._indexes[value] != 0\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40)))\n                case /** @src 19:1791:2110  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 19:2087:2099  \"return false\"\n                    var_ := /** @src -1:-1:-1 */ 0\n                    /// @src 19:2087:2099  \"return false\"\n                    leave\n                }\n                default /// @src 19:1791:2110  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let oldLen := sload(var_set_2990_slot)\n                    if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n                    sstore(var_set_2990_slot, add(oldLen, /** @src 19:3849:3861  \"set._indexes\" */ 1))\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let slot, offset := storage_array_index_access_uint256_dyn(var_set_2990_slot, oldLen)\n                    sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, var_value))\n                    let _2 := sload(/** @src 19:2013:2031  \"set._values.length\" */ var_set_2990_slot)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_value)\n                    mstore(0x20, _1)\n                    sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40), _2)\n                    /// @src 19:2045:2056  \"return true\"\n                    var_ := /** @src 19:3849:3861  \"set._indexes\" */ 1\n                    /// @src 19:2045:2056  \"return true\"\n                    leave\n                }\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function array_pop_array_bytes32_dyn_storage_ptr(array)\n            {\n                let oldLen := sload(array)\n                if iszero(oldLen) { panic_error_0x31() }\n                let _1 := not(0)\n                let newLen := add(oldLen, _1)\n                let slot, offset := storage_array_index_access_uint256_dyn(array, newLen)\n                let _2 := sload(slot)\n                sstore(slot, and(_2, not(shl(shl(3, offset), _1))))\n                sstore(array, newLen)\n            }\n            /// @ast-id 3112 @src 19:2284:3672  \"function _remove(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_remove(var_set_3032_slot, var_value) -> var\n            {\n                /// @src 19:2487:2499  \"set._indexes\"\n                let _1 := add(var_set_3032_slot, 1)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ var_value)\n                mstore(0x20, _1)\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ 0x40))\n                /// @src 19:2517:3666  \"if (valueIndex != 0) {...\"\n                switch /** @src 19:2521:2536  \"valueIndex != 0\" */ iszero(iszero(_2))\n                case /** @src 19:2517:3666  \"if (valueIndex != 0) {...\" */ 0 {\n                    /// @src 19:3643:3655  \"return false\"\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 19:3643:3655  \"return false\"\n                    leave\n                }\n                default /// @src 19:2517:3666  \"if (valueIndex != 0) {...\"\n                {\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let _3 := not(0)\n                    let diff := add(_2, _3)\n                    if gt(diff, _2) { panic_error_0x11() }\n                    let _4 := sload(/** @src 19:2962:2980  \"set._values.length\" */ var_set_3032_slot)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let diff_1 := add(_4, _3)\n                    if gt(diff_1, _4) { panic_error_0x11() }\n                    /// @src 19:2999:3397  \"if (lastIndex != toDeleteIndex) {...\"\n                    if /** @src 19:3003:3029  \"lastIndex != toDeleteIndex\" */ iszero(eq(diff_1, diff))\n                    /// @src 19:2999:3397  \"if (lastIndex != toDeleteIndex) {...\"\n                    {\n                        /// @src 19:3069:3091  \"set._values[lastIndex]\"\n                        let _5, _6 := storage_array_index_access_uint256_dyn(var_set_3032_slot, diff_1)\n                        /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                        let value := shr(shl(3, _6), sload(/** @src 19:3069:3091  \"set._values[lastIndex]\" */ _5))\n                        /// @src 19:3191:3217  \"set._values[toDeleteIndex]\"\n                        let _7, _8 := storage_array_index_access_uint256_dyn(var_set_3032_slot, diff)\n                        /// @src 19:3191:3229  \"set._values[toDeleteIndex] = lastValue\"\n                        update_storage_value_uint256_to_uint256(_7, _8, value)\n                        /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                        sstore(/** @src 19:3303:3326  \"set._indexes[lastValue]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(_1, value), /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _2)\n                    }\n                    /// @src 19:3475:3490  \"set._values.pop\"\n                    array_pop_array_bytes32_dyn_storage_ptr(var_set_3032_slot)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    sstore(/** @src 19:3567:3586  \"set._indexes[value]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32(_1, var_value), /** @src -1:-1:-1 */ 0)\n                    /// @src 19:3601:3612  \"return true\"\n                    var := /** @src 19:2487:2499  \"set._indexes\" */ 1\n                    /// @src 19:3601:3612  \"return true\"\n                    leave\n                }\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 1539 @src 7:9079:9506  \"function _mint(address to, uint256 tokenId) internal virtual {...\"\n            function fun_mint(var_to, var_tokenId)\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                let _1 := and(/** @src 7:9158:9174  \"to != address(0)\" */ var_to, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sub(shl(160, 1), 1))\n                if /** @src 7:9158:9174  \"to != address(0)\" */ iszero(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"ERC721: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                if iszero(/** @src 7:9229:9246  \"!_exists(tokenId)\" */ iszero(/** @src 7:9230:9246  \"_exists(tokenId)\" */ fun_exists(var_tokenId)))\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 28)\n                    mstore(add(memPtr_1, 68), \"ERC721: token already minted\")\n                    revert(memPtr_1, 100)\n                }\n                /// @src 7:9327:9334  \"tokenId\"\n                fun_beforeTokenTransfer_12760(var_to, var_tokenId)\n                /// @src 7:9346:9359  \"_balances[to]\"\n                let _2 := mapping_index_access_mapping_address_bool_of_address_12717(var_to)\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(_2, /** @src 7:9346:9364  \"_balances[to] += 1\" */ checked_add_uint256_12720(/** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ sload(/** @src 7:9346:9364  \"_balances[to] += 1\" */ _2)))\n                /// @src 7:9374:9395  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 7:9374:9390  \"_owners[tokenId]\" */ mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_12721(var_tokenId), /** @src 7:9374:9395  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 7:9411:9444  \"Transfer(address(0), to, tokenId)\"\n                log4(/** @src -1:-1:-1 */ 0, 0, /** @src 7:9411:9444  \"Transfer(address(0), to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 7:9411:9444  \"Transfer(address(0), to, tokenId)\" */ _1, var_tokenId)\n            }\n            /// @ast-id 2694 @src 15:945:1068  \"function increment(Counter storage counter) internal {...\"\n            function fun_increment()\n            {\n                /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                sstore(/** @src 20:1236:1251  \"_tokenIdTracker\" */ 0x0d, /** @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\" */ add(sload(/** @src 20:1236:1251  \"_tokenIdTracker\" */ 0x0d), /** @src 15:1050:1051  \"1\" */ 0x01))\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 20:1765:1779  \"_url = _newUrl\" */ 0x0e)\n                    /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n                    let _2 := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := _2 }\n                    let _3 := add(_2, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 20:529:1977  \"contract Hero is ERC721Enumerable, Ownable, AccessControlEnumerable, IItem{...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200bc5c1bb37e32542aa853f69c1dbae16e0ad719edbcb96d3fa280b8e784868d864736f6c63430008130033\"\n    }\n}\n","hash":"010004d5be42e2582d7eb3e2e3b5e4a0015fef782776393eaecf2f21d33692d6","factoryDependencies":{}},"IItem":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"hero_type","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"hero_type\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Item.sol\":\"IItem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"contracts/Item.sol\":{\"keccak256\":\"0xf1c51eb254072cab9399b9f7fcf313e75079e8901719e5ddff30120490daa554\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5c60d202693ebdd606a709c5a35ac0418fa314b6fc57b2ff372eba266ee720d1\",\"dweb:/ipfs/Qma1ipeo6b2xUaStRnh61jFigpQMi7dr5nnDJpbn9SL8aM\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"mint(address,uint256)":"40c10f19"}},"irOptimized":""}}}}}